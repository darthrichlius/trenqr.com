source Q:\Databases\tqr_product_vb1;
source /home/ycgkitcoai/www/fgump/trq_product_vba1;
source /home/ycgkitcoai/www/fgump/tqr_product_vb1;
source /home/ycgkitcoai/www/fgump/tqr_product_vb1.sql;
source "/home/ycgkitcoai/www/fgump/tqr_product_vb1.sql";
source "/home/ycgkitcoai/www/fgump/";
source "/home";
source home
source "home/ycgkitcoai/www/fgump/tqr_product_vb1.sql";
source home/ycgkitcoai/www/fgump/tqr_product_vb1.sql;
source /home/ycgkitcoai/www/fgump/tqr_product_vb1.sql;
ls
;
source /home/ycgkitcoai/www/fgump/tqr_product_vb1.sql;
source tqrvb1_product.sql;
source tqrvb1_prodruct.sql;
source tqrvb1_product.sql;
source product.sql;
source tqrvb1_product.sql;
source trqvb1_product.sql;
source trqvb1_prod_test.sql;
show tables;
exit;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_accdb_test.sql;
select * from banemldomtab;
SELECT *
            FROM BanEmlDomTab
            WHERE bedom_dom LIKE "yopmail.com"
;
SELECT *             FROM BanEmlDomTab             WHERE bedom_dom LIKE "yopmail.com";
source tqrvb1_accdb_test.sql;
show tables;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_prod_test.sql;
exit;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_prod_test.sql;
exit;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_prod_test.sql;
exit;
source tqrvb1_accdb_test.sql;
exit();
exit;
source tqrvb1_prod_test.sql;
exit;
source tqrvb1_prod_test.sql;
exit;
source tqrvb1_accdb_test.sql;
source tqrvb1_prod_test.sql;
exit;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_prod_test.sql;
exit;
ALTER TABLE Accounts
ADD secu_notifyWhenLogin INT(1) UNSIGNED NOT NULL DEFAULT 0;
ALTER TABLE Accounts ADD secu_notifyWhenLogin INT(1) UNSIGNED NOT NULL DEFAULT 0;
DROP TABLE IF EXISTS AccToDel_LastLetter;
DROP TABLE IF EXISTS AccToDel_Histy;
CREATE TABLE IF NOT EXISTS AccToDel_Histy (
actdlid INT UNSIGNED NOT NULL AUTO_INCREMENT,
actdl_accid INT UNSIGNED NOT NULL,
actdl_sdate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
actdl_sdate_tstamp BIGINT UNSIGNED NOT NULL,
/* 
(edate) EndDate
Date à partir de laquelle le compte sera EN INSTANCE DE suppression. Avant cette date le Compte est EN ATTENTE DE suppression.
Ce qui veut dire que le propriétaire ne pourra plus annuler la suppression du Compte.
Le compte sera supprimé dès que le delais de carence interne sera atteint. Cela peut varier d'une semaine à 1 mois.
Avant cette date, on considère que to_delete est à 1. 
Après cette date, to_delete ets à 2.
*/
actdl_edate TIMESTAMP NOT NULL,
actdl_edate_tstamp BIGINT UNSIGNED NOT NULL,
/*
cdate (CancelDate)
Date à laquelle le propriétaire du Compte a décidé d'annuler la procédure de suppression.
*/
actdl_cdate TIMESTAMP NULL,
actdl_cdate_tstamp BIGINT NULL,
PRIMARY KEY (actdlid),
CONSTRAINT fk_in_actdl_acc FOREIGN KEY(actdl_accid) REFERENCES Accounts(accid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS AccToDel_Histy ( actdlid INT UNSIGNED NOT NULL AUTO_INCREMENT, actdl_accid INT UNSIGNED NOT NULL, actdl_sdate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, actdl_sdate_tstamp BIGINT UNSIGNED NOT NULL,  actdl_edate TIMESTAMP NOT NULL, actdl_edate_tstamp BIGINT UNSIGNED NOT NULL,  actdl_cdate TIMESTAMP NULL, actdl_cdate_tstamp BIGINT NULL, PRIMARY KEY (actdlid), CONSTRAINT fk_in_actdl_acc FOREIGN KEY(actdl_accid) REFERENCES Accounts(accid) ) ENGINE = INNODB;
/*
    Sauvegarde les informations fournies à la "suppression" d'un Compte.
    Les informations DOIVENT PERSISTER :
        -> Mme après l'annulation de la suppression
        -> Mme après la suppression effective du Compte
*/
CREATE TABLE IF NOT EXISTS AccToDel_LastLetter (
lltrid INT UNSIGNED NOT NULL AUTO_INCREMENT,
lltr_actdlid INT UNSIGNED NOT NULL,
-- HowIKnew, Code DECOTXT
lltr_HIKW CHAR(30) NOT NULL,
-- whYILeave, Code DECOTXT
lltr_YILV CHAR(30) NOT NULL,
lltr_YILV_Other TEXT(242),
-- I'LlBeBackIF
lltr_ILBBIF TEXT(242),
lltr_evdate TIMESTAMP NOT NULL,
lltr_evdate_tstamp BIGINT NOT NULL,
PRIMARY KEY (lltrid),
UNIQUE KEY UX_in_lltr_on_actdl (lltr_actdlid),
CONSTRAINT fk_in_lltr_actdl FOREIGN KEY(lltr_actdlid) REFERENCES AccToDel_Histy(actdlid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS AccToDel_LastLetter ( lltrid INT UNSIGNED NOT NULL AUTO_INCREMENT, lltr_actdlid INT UNSIGNED NOT NULL,  lltr_HIKW CHAR(30) NOT NULL,  lltr_YILV CHAR(30) NOT NULL, lltr_YILV_Other TEXT(242),  lltr_ILBBIF TEXT(242),  lltr_evdate TIMESTAMP NOT NULL, lltr_evdate_tstamp BIGINT NOT NULL,  PRIMARY KEY (lltrid), UNIQUE KEY UX_in_lltr_on_actdl (lltr_actdlid), CONSTRAINT fk_in_lltr_actdl FOREIGN KEY(lltr_actdlid) REFERENCES AccToDel_Histy(actdlid) ) ENGINE = INNODB;
source tqrvb1_accdb_test.sql;
exit;
source tqrvb1_prod_test.sql;
showw tabes;
showw tables;
show tables;
source tqrvb1_prod_test.sql;
exit;
source tqrvb1_prod_test.sql;
source tqrvb1_prod_dev.sql;
exit;
ALTER TABLE Articles
CHANGE art_creadate art_cdate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE Articles CHANGE art_creadate art_cdate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE Articles
CHANGE art_date_tstamp art_cdate_tstamp BIGINT NOT NULL;
ALTER TABLE Articles CHANGE art_date_tstamp art_cdate_tstamp BIGINT NOT NULL;
source tqrvb1_prod_prod.sql;
show databases;
drop database ycgkitcoai_pprot;
source tqrvb1_prod_prod.sql;
exit;
source tqrvb1_prod_prod.sql;
show database;
show databases;
source tqrvb1_prod_prod.sql;
show tables;
clear;
cls;
source tqrvb1_prod_prod.sql;
exit;
select count(*) from accounts;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(501,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (502,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(503,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
(601,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (602,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(603,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),  (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (501,"UAT_XART_RD","ARTICLE_READ",0,@now),  (503,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now), (601,"UAT_XRCT_RD","REACTION_READ",0,@now),  (603,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dna
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de lecture de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dna
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de lecture de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
SELECT * FROM VM_Articles_IML, VM_Articles_ITR;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
select * Postman_Reports;
select * From Postman_Reports;
select * From UserActyLogs;
select * From Postman_Reports;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
clear
clear;
cls;
Select * from UserActyLogs;
SELECT UserActyLogs.* 
FROM UAL_ActionTypes, UserActyLogs
INNER JOIN Reactions ON reactid = ualg_refobj 
INNER JOIN Articles ON react_artid = artid 
WHERE uat_id = ualg_uatid 
AND art_accid = 101 
AND ualgid NOT IN 
        (
            SELECT pmrpt_ualgid
            FROM Postman_Reports
            WHERE pmrpt_rcptuid = 101
)
AND uat_id = 600 
AND ualg_adate_tstamp >= 1 
ORDER BY ualg_adate_tstamp ASC;
SELECT UserActyLogs.*  FROM UAL_ActionTypes, UserActyLogs INNER JOIN Reactions ON reactid = ualg_refobj  INNER JOIN Articles ON react_artid = artid  WHERE uat_id = ualg_uatid  AND art_accid = 101  AND ualgid NOT IN          (             SELECT pmrpt_ualgid             FROM Postman_Reports             WHERE pmrpt_rcptuid = 101 ) AND uat_id = 600  AND ualg_adate_tstamp >= 1  ORDER BY ualg_adate_tstamp ASC;
Select * from UserActyLogs;
Select * from postman_reports;
Select * from UserActyLogs;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now)
-- USERTAG
/* NOTE : J'ai deliberement commencé à 1001 car je sens que j'aurais besoin de 1100 pour plus tard */
(1101,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now),
(1102,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now)   (1101,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now), (1102,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
DROP TABLE IF EXISTS USTGs_ARTICLE;
DROP TABLE IF EXISTS USTGs_REACTION;
DROP TABLE IF EXISTS USERTAGs;
/* Table qui regroupe l'ensemble des Tag de Compte pour un Objet donné */
CREATE TABLE IF NOT EXISTS USERTAGs (
ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustg_eid CHAR(255) NOT NULL DEFAULT "...",
-- RECEPIENT
ustg_tgtuid INT UNSIGNED NOT NULL,
-- DATATION
ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ustg_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(ustg_id),
UNIQUE INDEX ux_in_ustg_eid (ustg_eid),
UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid),
CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USERTAGs ( ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustg_eid CHAR(255) NOT NULL DEFAULT "...",  ustg_tgtuid INT UNSIGNED NOT NULL,  ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ustg_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(ustg_id), UNIQUE INDEX ux_in_ustg_eid (ustg_eid), UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid), CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE (
ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgart_ustgid BIGINT UNSIGNED NOT NULL,
ustgart_artid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgart_id),
UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid),
CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE ( ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgart_ustgid BIGINT UNSIGNED NOT NULL, ustgart_artid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgart_id), UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid), CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION (
ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgrct_ustgid BIGINT UNSIGNED NOT NULL,
ustgrct_rctid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgrct_id),
UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid),
CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_id) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION ( ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgrct_ustgid BIGINT UNSIGNED NOT NULL, ustgrct_rctid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgrct_id), UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid), CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_id) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid) ) ENGINE = INNODB;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),
-- USERTAG
/* NOTE : J'ai deliberement commencé à 1001 car je sens que j'aurais besoin de 1100 pour plus tard */
(1101,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now),
(1102,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),   (1101,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now), (1102,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
/*************************************************************** TAGMAN ****************************************************************/
DROP TABLE IF EXISTS USTGs_ARTICLE;
DROP TABLE IF EXISTS USTGs_REACTION;
DROP TABLE IF EXISTS USERTAGs;
/* Table qui regroupe l'ensemble des Tag de Compte pour un Objet donné */
CREATE TABLE IF NOT EXISTS USERTAGs (
ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustg_eid CHAR(255) NOT NULL DEFAULT "...",
-- RECEPIENT
ustg_tgtuid INT UNSIGNED NOT NULL,
-- DATATION
ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ustg_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(ustg_id),
UNIQUE INDEX ux_in_ustg_eid (ustg_eid),
UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid),
CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USERTAGs ( ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustg_eid CHAR(255) NOT NULL DEFAULT "...",  ustg_tgtuid INT UNSIGNED NOT NULL,  ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ustg_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(ustg_id), UNIQUE INDEX ux_in_ustg_eid (ustg_eid), UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid), CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE (
ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgart_ustgid BIGINT UNSIGNED NOT NULL,
ustgart_artid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgart_id),
UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid),
CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE ( ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgart_ustgid BIGINT UNSIGNED NOT NULL, ustgart_artid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgart_id), UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid), CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION (
ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgrct_ustgid BIGINT UNSIGNED NOT NULL,
ustgrct_rctid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgrct_id),
UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid),
CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_id) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION ( ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgrct_ustgid BIGINT UNSIGNED NOT NULL, ustgrct_rctid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgrct_id), UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid), CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_id) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid) ) ENGINE = INNODB;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),
-- USERTAG
/* NOTE : J'ai deliberement commencé à 1001 car je sens que j'aurais besoin de 1100 pour plus tard */
(1101,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now),
(1102,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),   (1101,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now), (1102,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
/*************************************************************** TAGMAN ****************************************************************/
DROP TABLE IF EXISTS USTGs_ARTICLE;
DROP TABLE IF EXISTS USTGs_REACTION;
DROP TABLE IF EXISTS USERTAGs;
/* Table qui regroupe l'ensemble des Tag de Compte pour un Objet donné */
CREATE TABLE IF NOT EXISTS USERTAGs (
ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustg_eid CHAR(255) NOT NULL DEFAULT "...",
-- RECEPIENT
ustg_tgtuid INT UNSIGNED NOT NULL,
-- DATATION
ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ustg_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(ustg_id),
UNIQUE INDEX ux_in_ustg_eid (ustg_eid),
UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid),
CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USERTAGs ( ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustg_eid CHAR(255) NOT NULL DEFAULT "...",  ustg_tgtuid INT UNSIGNED NOT NULL,  ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ustg_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(ustg_id), UNIQUE INDEX ux_in_ustg_eid (ustg_eid), UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid), CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE (
ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgart_ustgid BIGINT UNSIGNED NOT NULL,
ustgart_artid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgart_id),
UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid),
CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE ( ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgart_ustgid BIGINT UNSIGNED NOT NULL, ustgart_artid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgart_id), UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid), CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION (
ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgrct_ustgid BIGINT UNSIGNED NOT NULL,
ustgrct_rctid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgrct_id),
UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid),
CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_id) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION ( ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgrct_ustgid BIGINT UNSIGNED NOT NULL, ustgrct_rctid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgrct_id), UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid), CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_id) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid) ) ENGINE = INNODB;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),
-- USERTAG
/* NOTE : J'ai deliberement commencé à 1001 car je sens que j'aurais besoin de 1100 pour plus tard */
(1101,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now),
(1102,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now), (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),   (1101,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now), (1102,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
/*************************************************************** TAGMAN ****************************************************************/
DROP TABLE IF EXISTS USTGs_ARTICLE;
DROP TABLE IF EXISTS USTGs_REACTION;
DROP TABLE IF EXISTS USERTAGs;
/* Table qui regroupe l'ensemble des Tag de Compte pour un Objet donné */
CREATE TABLE IF NOT EXISTS USERTAGs (
ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustg_eid CHAR(255) NOT NULL DEFAULT "...",
-- RECEPIENT
ustg_tgtuid INT UNSIGNED NOT NULL,
-- DATATION
ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ustg_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(ustg_id),
UNIQUE INDEX ux_in_ustg_eid (ustg_eid),
UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid),
CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USERTAGs ( ustg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustg_eid CHAR(255) NOT NULL DEFAULT "...",  ustg_tgtuid INT UNSIGNED NOT NULL,  ustg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ustg_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(ustg_id), UNIQUE INDEX ux_in_ustg_eid (ustg_eid), UNIQUE INDEX ux_in_ustg_ids (ustg_id,ustg_eid), CONSTRAINT fk_in_ustg_tgt FOREIGN KEY (ustg_tgtuid) REFERENCES Proddb_Accounts(pdaccid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE (
ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgart_ustgid BIGINT UNSIGNED NOT NULL,
ustgart_artid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgart_id),
UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid),
CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_ARTICLE ( ustgart_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgart_ustgid BIGINT UNSIGNED NOT NULL, ustgart_artid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgart_id), UNIQUE INDEX ux_in_ustgart_ustgid (ustgart_ustgid), CONSTRAINT fk_in_ustgart_ustgid FOREIGN KEY (ustgart_ustgid) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgart_artid FOREIGN KEY (ustgart_artid) REFERENCES Articles(artid) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION (
ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ustgrct_ustgid BIGINT UNSIGNED NOT NULL,
ustgrct_rctid BIGINT UNSIGNED NOT NULL,
PRIMARY KEY(ustgrct_id),
UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid),
CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_rctid) REFERENCES USERTAGs(ustg_id),
CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS USTGs_REACTION ( ustgrct_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ustgrct_ustgid BIGINT UNSIGNED NOT NULL, ustgrct_rctid BIGINT UNSIGNED NOT NULL, PRIMARY KEY(ustgrct_id), UNIQUE INDEX ux_in_ustgrct_ustgid (ustgrct_ustgid), CONSTRAINT fk_in_ustgrct_ustgid FOREIGN KEY (ustgrct_rctid) REFERENCES USERTAGs(ustg_id), CONSTRAINT fk_in_ustgrct_rctid FOREIGN KEY (ustgrct_ustgid) REFERENCES Reactions(reactid) ) ENGINE = INNODB;
DROP TABLE IF EXISTS PRG_PR_Hysty;
DROP TABLE IF EXISTS Postman_Report_Groups;
DROP TABLE IF EXISTS Postman_Reports;
DROP TABLE IF EXISTS Postman_Report_Types;
DROP TABLE IF EXISTS UserActyLogs;
DROP TABLE IF EXISTS UAL_ActionNature;
DROP TABLE IF EXISTS UAL_ActionTypes;
SET @now = UNIX_TIMESTAMP()*1000;
-- Repertorie les actions au niveau de la plateforme pour éviter de passer par les LIB de WORKERS qui ne sont pas perenne dans le temps.
CREATE TABLE IF NOT EXISTS UAL_ActionTypes (
uat_id SMALLINT UNSIGNED NOT NULL,
uat_eid CHAR(50) NOT NULL,
uat_lib CHAR(50) NOT NULL,
-- Cette donnée n'est qu'un informative. Elle est destinée à une meilleure compréhension. 
uat_isNotfz INT(1) NOT NULL DEFAULT 0,
-- DATATION
uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uat_datecrea_tstamp BIGINT NOT NULL,
uat_datelmod TIMESTAMP NULL,
uat_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uat_id),
UNIQUE INDEX ux_in_uat_eid (uat_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionTypes ( uat_id SMALLINT UNSIGNED NOT NULL, uat_eid CHAR(50) NOT NULL, uat_lib CHAR(50) NOT NULL,  uat_isNotfz INT(1) NOT NULL DEFAULT 0,  uat_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uat_datecrea_tstamp BIGINT NOT NULL, uat_datelmod TIMESTAMP NULL, uat_datelmod_tstamp BIGINT,  PRIMARY KEY(uat_id), UNIQUE INDEX ux_in_uat_eid (uat_eid) ) ENGINE = INNODB;
/*
    RAPPEL : 
        -> Certains types ne sont pas utilisé pour décrire une action à proprement parlée.
           Ils peuvent aussi servir à identifier ou améliorer la compréhensions des actions au niveau d'autres modules
*/
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES 
(1,"UAT_MUTE","NOT_REGISTERED",0,@now),
/* RAPPEL : On laisse la plage 1 à 100 à : Tenqr, Legals et autres */
-- ACCOUNTS 
(100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now),
(101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),
-- SESSIONS
(200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now),
(201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),
-- RELATIONS
(300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now),
(301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now),
(302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now),
(303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now),
(304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),
-- CAPITAL
(400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now),
(401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),
/*
    RAPPEL : 
        (1) On passe de 500 à 510 car il y a plusieurs sous-types d
*/
-- ARTICLES
(500,"UAT_XART_AD","ARTICLE_ADD",1,@now), -- Moins utilisé que 900 & 1000
(510,"UAT_XART_RD","ARTICLE_READ",0,@now),
-- (520,"UAT_XART_AL","ARTICLE_ALTER",0,@now),
(530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),
-- REACTIONS
(600,"UAT_XRCT_AD","REACTION_ADD",1,@now),
-- MA : MyArticle
(601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now),
(610,"UAT_XRCT_RD","REACTION_READ",0,@now),
-- (620,"UAT_XRCT_AL","REACTION_ALTER",1,@now),
(630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),
-- EVALUATIONS
(700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),
/*
    701 : S'applique pour 
        -> J'ai evalue mon propre Article
        -> Quelqu'un a evalue mon Article. Dans ce dernier cas, il semble qu'on ait un 700 qui va se transformer en 701.
           Le changement est effectue au niveau de la zone PROCESS
*/
(701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now),
(710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),
-- IM (Instant Messaging) 
-- (800,"UAT_XIM_","",0,@now);
-- TRENDS
(900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now),
(901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now),
(902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now),
(903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),
-- MYPAGE
(1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now),
(1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),
-- USERTAG
/* NOTE : J'ai deliberement commencé à 1001 car je sens que j'aurais besoin de 1100 pour plus tard */
(1101,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now),
(1102,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now);
INSERT INTO UAL_ActionTypes (uat_id,uat_eid,uat_lib,uat_isNotfz,uat_datecrea_tstamp) VALUES  (1,"UAT_MUTE","NOT_REGISTERED",0,@now),   (100,"UAT_XACC_SGU","ACCOUNT_SIGNUP",0,@now), (101,"UAT_XACC_DRP","ACCOUNT_DROP",0,@now),  (200,"UAT_XSSN_SGI","SESSION_SIGNIN",0,@now), (201,"UAT_XSSN_LGT","SESSION_LOGOUT",0,@now),  (300,"UAT_XREL_NWAB","RELATION_NEWABO",1,@now), (301,"UAT_XREL_UNAB","RELATION_DISABO",0,@now), (302,"UAT_XREL_RQTFRD","RELATION_REQUEST_FRIEND",1,@now), (303,"UAT_XREL_RQTFRDDNY","RELATION_REQUEST_FRIEND_DENY",0,@now), (304,"UAT_XREL_RQTFRDACP","RELATION_REQUEST_FRIEND_ACCEPT",0,@now),  (400,"UAT_XCAP_IAMTQLDR","CAPITAL_IAMTRENQQLEADER",1,@now), (401,"UAT_XCAP_CAPRPT","CAPITAL_REPORT",1,@now),   (500,"UAT_XART_AD","ARTICLE_ADD",1,@now),  (510,"UAT_XART_RD","ARTICLE_READ",0,@now),  (530,"UAT_XART_DL","ARTICLE_DELETE",0,@now),  (600,"UAT_XRCT_AD","REACTION_ADD",1,@now),  (601,"UAT_XRCT_AD_oMA","REACTION_ADD_ON_MyART",1,@now), (610,"UAT_XRCT_RD","REACTION_READ",0,@now),  (630,"UAT_XRCT_DL","REACTION_DELETE",0,@now),  (700,"UAT_XEVL_GOEVL","EVALUATION_GOEVAL",1,@now),  (701,"UAT_XEVL_GOEVL_oMA","EVALUATION_GOEVAL_ON_MyART",1,@now), (710,"UAT_XEVL_UNEVL","EVALUATION_UNEVAL",0,@now),    (900,"UAT_XMTRD_NWART","MYTREND_NEWART",1,@now), (901,"UAT_XMTRD_NWABO","MYTREND_NEWABO",0,@now), (902,"UAT_XMTRD_ABOCS","MYTREND_ABOCOUNTSTAGE",0,@now), (903,"UAT_XMTRD_NWVST","MYTREND_NEWVISIT",0,@now),  (1000,"UAT_XMPG_NWART","MYPAGE_NEWART",0,@now), (1001,"UAT_XMPG_ABOCS","MYPAGE_ABOCOUNTSTAGE",0,@now),   (1101,"UAT_XUSTG_ART","USERTAG_oARTICLE",1,@now), (1102,"UAT_XUSTG_RCT","USERTAG_oREACT",1,@now);
CREATE TABLE IF NOT EXISTS UAL_ActionNature (
uan_id SMALLINT UNSIGNED NOT NULL,
uan_eid CHAR(50) NOT NULL,
uan_lib CHAR(50) NOT NULL,
-- DATATION
uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
uan_datecrea_tstamp BIGINT NOT NULL,
uan_datelmod TIMESTAMP NULL,
uan_datelmod_tstamp BIGINT,
-- KEYS
PRIMARY KEY(uan_id),
UNIQUE INDEX ux_in_uan_eid (uan_eid)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UAL_ActionNature ( uan_id SMALLINT UNSIGNED NOT NULL, uan_eid CHAR(50) NOT NULL, uan_lib CHAR(50) NOT NULL,  uan_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, uan_datecrea_tstamp BIGINT NOT NULL, uan_datelmod TIMESTAMP NULL, uan_datelmod_tstamp BIGINT,  PRIMARY KEY(uan_id), UNIQUE INDEX ux_in_uan_eid (uan_eid) ) ENGINE = INNODB;
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES 
(1,"UAN_PG","UAN_byPAGE",@now),
(2,"UAN_AX","UAN_byAJAX",@now),
(3,"UAN_CRN","UAN_byCRON",@now);
INSERT INTO UAL_ActionNature (uan_id,uan_eid,uan_lib,uan_datecrea_tstamp) VALUES  (1,"UAN_PG","UAN_byPAGE",@now), (2,"UAN_AX","UAN_byAJAX",@now), (3,"UAN_CRN","UAN_byCRON",@now);
CREATE TABLE IF NOT EXISTS UserActyLogs (
ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
ualg_actuid INT UNSIGNED NOT NULL,
ualg_ssid CHAR(32) NOT NULL,
-- WHERE
ualg_locip_str CHAR(32) NOT NULL,
ualg_locip_num INT UNSIGNED NOT NULL,
-- WHAT
ualg_useragt CHAR(255),
ualg_wkr CHAR(30) NOT NULL,
ualg_fe_url CHAR(255) NOT NULL,
ualg_srv_url CHAR(255) NOT NULL,
-- S'agit-il d'une requete de type AJAX ?
ualg_isAx INT(1) NOT NULL DEFAULT 1, 
-- DATATION
ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
ualg_adate_tstamp BIGINT NOT NULL, 
-- NEW
ualg_refobj CHAR(255) NOT NULL,
ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2,
PRIMARY KEY(ualgid),
CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id),
CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS UserActyLogs ( ualgid BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, ualg_actuid INT UNSIGNED NOT NULL, ualg_ssid CHAR(32) NOT NULL,  ualg_locip_str CHAR(32) NOT NULL, ualg_locip_num INT UNSIGNED NOT NULL,  ualg_useragt CHAR(255), ualg_wkr CHAR(30) NOT NULL, ualg_fe_url CHAR(255) NOT NULL, ualg_srv_url CHAR(255) NOT NULL,  ualg_isAx INT(1) NOT NULL DEFAULT 1,   ualg_adate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, ualg_adate_tstamp BIGINT NOT NULL,   ualg_refobj CHAR(255) NOT NULL, ualg_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1, ualg_uanid SMALLINT UNSIGNED NOT NULL DEFAULT 2, PRIMARY KEY(ualgid), CONSTRAINT fk_in_ualg_accid FOREIGN KEY (ualg_actuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_ualg_uatid FOREIGN KEY (ualg_uatid) REFERENCES UAL_ActionTypes(uat_id), CONSTRAINT fk_in_ualg_uanid FOREIGN KEY (ualg_uanid) REFERENCES UAL_ActionNature(uan_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types (
prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
prt_lib CHAR(255) NOT NULL,
-- DATATION
prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prt_datecrea_tstamp BIGINT NOT NULL,
PRIMARY KEY(prt_id),
UNIQUE INDEX ux_in_prt_lib (prt_lib)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Types ( prt_id SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, prt_lib CHAR(255) NOT NULL,  prt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prt_datecrea_tstamp BIGINT NOT NULL, PRIMARY KEY(prt_id), UNIQUE INDEX ux_in_prt_lib (prt_lib) ) ENGINE = INNODB;
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES
(1,"PRT_NOTFY",@now),
(2,"PRT_INFO",@now),
(3,"PRT_ALERT_ORG",@now),
(4,"PRT_ALERT_RED",@now),
(5,"PRT_NEWS",@now);
INSERT INTO Postman_Report_Types (prt_id,prt_lib,prt_datecrea_tstamp) VALUES (1,"PRT_NOTFY",@now), (2,"PRT_INFO",@now), (3,"PRT_ALERT_ORG",@now), (4,"PRT_ALERT_RED",@now), (5,"PRT_NEWS",@now);
CREATE TABLE IF NOT EXISTS Postman_Reports (
pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",
-- DATATION
pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
pmrpt_datecrea_tstamp BIGINT NOT NULL,
/* 
    pull : Correspond à la date selon laquelle la Notification a été acheminée vers FE pour publication. Autrement dit, FE signale qu'il a reçu les informations.
    Cette date prend son intert dans le fait que l'utilisateur peut ne pas lire une Notification tout de suite.
    De plus, les Notifications ne sont désignées comme lues que si l'utilisateur accède au module ou s'il effectue toute autre action équivalente. 
    La date "pull" peut tre très proche de celle "rgr" dans la mesure où quand la Notification est présentée, elle est lue.
*/
pmrpt_datepull TIMESTAMP,
pmrpt_datepull_tstamp BIGINT,
-- rgr : (pour RoGeR) Correspond à la date de lecture de la Notification
pmrpt_datergr TIMESTAMP,
pmrpt_datergr_tstamp BIGINT,
-- vstd : (pour ViSiTeD) Correspond à la date de visite de la Notification
pmrpt_datevstd TIMESTAMP,
pmrpt_datevstd_tstamp BIGINT,
-- RECEPIENT
pmrpt_rcptuid INT UNSIGNED NOT NULL,
-- TYPE NOTIF
pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    ACTIONTYPE (NOTIF VERSION)
    UserActyLogs a l'ActionType original. 
    Cependant, peut ou ne pas correspond au type à signifier à l'utilisateur.
*/
pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,
/*
    Une notification peut tre générée par un script automatique sans intervention de l'utilisateur. 
    Il s'agit très souvent de notifications de type INFO, ALERT ou NEWS.
*/
pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,
-- UserActyLog
pmrpt_ualgid BIGINT UNSIGNED NOT NULL,
UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid),
UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid),
PRIMARY KEY(pmrpt_id),
CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid),
CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid),
CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id),
CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Reports ( pmrpt_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, pmrpt_eid CHAR(255) NOT NULL DEFAULT "...",  pmrpt_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, pmrpt_datecrea_tstamp BIGINT NOT NULL,  pmrpt_datepull TIMESTAMP, pmrpt_datepull_tstamp BIGINT,  pmrpt_datergr TIMESTAMP, pmrpt_datergr_tstamp BIGINT,  pmrpt_datevstd TIMESTAMP, pmrpt_datevstd_tstamp BIGINT,  pmrpt_rcptuid INT UNSIGNED NOT NULL,  pmrpt_type SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_uatid SMALLINT UNSIGNED NOT NULL DEFAULT 1,  pmrpt_isAuto INT(1) NOT NULL DEFAULT 0,  pmrpt_ualgid BIGINT UNSIGNED NOT NULL, UNIQUE INDEX ux_in_pmrpt_eid (pmrpt_eid), UNIQUE INDEX ux_in_pmrpt_ual_id (pmrpt_ualgid,pmrpt_rcptuid), PRIMARY KEY(pmrpt_id), CONSTRAINT fk_in_pmrpt_ualgid FOREIGN KEY (pmrpt_ualgid) REFERENCES UserActyLogs(ualgid), CONSTRAINT fk_in_pmrpt_rcptuid FOREIGN KEY (pmrpt_rcptuid) REFERENCES Proddb_Accounts(pdaccid), CONSTRAINT fk_in_pmrpt_prtid FOREIGN KEY (pmrpt_type) REFERENCES Postman_Report_Types(prt_id), CONSTRAINT fk_in_pmrpt_uatid FOREIGN KEY (pmrpt_uatid) REFERENCES UAL_ActionTypes(uat_id) ) ENGINE = INNODB;
-- Permet de regrouper des Notifications plutot que de les publier de manière singulière
-- RAPPEL : Le Groupe ne peut appartenir qu'à un seul type de Notification.
CREATE TABLE IF NOT EXISTS Postman_Report_Groups (
prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
prg_eid CHAR(255) NOT NULL,
-- DATATION
prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
prg_datecrea_tstamp BIGINT NOT NULL,
-- KEYS
PRIMARY KEY(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS Postman_Report_Groups ( prg_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, prg_eid CHAR(255) NOT NULL,  prg_datecrea TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, prg_datecrea_tstamp BIGINT NOT NULL,  PRIMARY KEY(prg_id) ) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty (
p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
p_p_h_pmrptid BIGINT UNSIGNED NOT NULL,
p_p_h_prgid BIGINT UNSIGNED NOT NULL,
-- KEYS
PRIMARY KEY(p_p_h_id),
CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id),
CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id)
) ENGINE = INNODB;
CREATE TABLE IF NOT EXISTS PRG_PR_Hysty ( p_p_h_id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT, p_p_h_pmrptid BIGINT UNSIGNED NOT NULL, p_p_h_prgid BIGINT UNSIGNED NOT NULL,  PRIMARY KEY(p_p_h_id), CONSTRAINT fk_in_p_p_h_pmrpt FOREIGN KEY (p_p_h_pmrptid) REFERENCES Postman_Reports(pmrpt_id), CONSTRAINT fk_in_p_p_h_prg FOREIGN KEY (p_p_h_prgid) REFERENCES Postman_Report_Groups(prg_id) ) ENGINE = INNODB;
SELECT Reactions.*, artid as raid, art_eid as raeid, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn 
        FROM Reactions, Articles, Proddb_Accounts
        WHERE react_writer = pdaccid
        AND react_artid = artid 
        AND react_artid = 2
SELECT Reactions.*, artid as raid, art_eid as raeid, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn 
        FROM Reactions, Articles, Proddb_Accounts
        WHERE react_writer = pdaccid
        AND react_artid = artid 
        AND react_artid = 2
