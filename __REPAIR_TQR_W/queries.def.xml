<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE queries SYSTEM "dtd/dtd.queries.def.dtd">

<queries>   
<!-- ******************************************************************************************************************************************************** -->
<!-- ************************************************************* CONTROLLER SCOPE LEVEL l3 **************************************************************** -->
    <query id="qryl3n1">
        <query.body value="
        SELECT ipacmp_lang as iplang
        FROM IpBanEvents, IpAsCompTab
        WHERE ipban_ip = ipacmp_ip
        AND ipacmp_ip = :ipv4;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ipv4" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl3n2">
        <query.body value="
        SELECT partner_mm_cities_reference.loc_id as cityid, city_name as loc_city, countries.ctr_code as loc_ctr_code, countries.ctr_name as loc_ctr_name 
        FROM partner_mm_cities_reference
        INNER JOIN partner_mm_location_match_ipadd
        ON partner_mm_cities_reference.loc_id = partner_mm_location_match_ipadd.loc_id
        INNER JOIN Countries
        ON countries.ctr_code = partner_mm_cities_reference.ctr_code
        AND partner_mm_location_match_ipadd.start_numeral_ip &lt;= :ip_numeral1
        AND partner_mm_location_match_ipadd.end_numeral_ip &gt;= :ip_numeral2;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ip_numeral1" value="" />
            <qparam id=":ip_numeral2" value="" />
        </query.params.in>
        <query.params.out>
            <qparam id="loc_city" value="" />
            <qparam id="loc_ctr_code" value="" />
            <qparam id="loc_ctr_name" value="" />
        </query.params.out>
    </query>
    <query id="qryl3n3">
        <query.body value="
        SELECT lang as loc_ctr_lg_code, flag as loc_ctr_flag
        FROM astb_country_lang, countries
        WHERE astb_country_lang.country = countries.ctr_code
        AND astb_country_lang.country = :ctr_code 
        ORDER BY lg_level_rank ASC; " />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ctr_code" value="" />
        </query.params.in>
        <query.params.out>
            <qparam id="loc_ctr_lg_code" value="" />
            <qparam id="flag" value="" />
        </query.params.out>
    </query>
    <query id="qryl3n4">
        <query.body value="
        UPDATE Profils
        SET spoken_lang = :lg_code
        WHERE pflid = :pflid; "/>
        <query.dbname value="kx_commons_vbeta" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":lg_code" value="" />
            <qparam id=":pflid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl3n5">
        <query.body value="
        UPDATE IpAsCompTab
        SET ipacmp_lang = :lg_code, ipacmp_dmod = CURRENT_TIMESTAMP(), ipacmp_dmod_tstamp = :tstamp 
        WHERE ipacmp_ip = :ip_numeral;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":lg_code" value="" />
            <qparam id=":ip_numeral" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl3n6">
        <query.body value="
        SELECT ipacmp_lang as iplang  
        FROM IpAsCompTab
        WHERE ipacmp_ip = :ipv4;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ipv4" value="" />
        </query.params.in>
        <query.params.out>
            <qparam id="iplang" value="" />
        </query.params.out>
    </query>
<!-- ******************************************************************************************************************************************************** -->
<!-- ************************************************************* PROD_ENTITY SCOPE LEVEL l4 **************************************************************** -->

<!-- ******** COMMONS ******** -->
    <query id="qryl4comn1">
        <query.body value="
        SELECT CY.*, CN.*   
        FROM Partner_GN_Cities_5000 as CY, Countries as CN 
        WHERE CY.country_code = CN.ctr_code
        AND city_id = :cyid ;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
		<query.params.in>
			<qparam id=":cyid" value="" />
		</query.params.in>
		<query.params.out>
		</query.params.out>
    </query>

<!-- ******** ACCOUNT SCOPE (L.C) ******** -->
    <query id="qryl4accn1">
        <query.body value="
        SELECT accid as art_oid, acc_eid as art_oeid, ufullname as art_ofn, accpseudo as art_opsd, pflpic_pathTo_min as art_oppic, Accounts.todelete  
        FROM Accounts, Profils, Pflpics_history, Profilpictures
        WHERE accounts.pflid = profils.pflid
        AND Profils.pflid = Pflpics_history.pflid
        AND Pflpics_history.pflpicid = Profilpictures.pflpicid
        AND Pflpics_history.date_EndEna_tstamp IS NULL
        AND accid = :accid;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4accn2">
        <query.body value="
        SELECT accid as art_oid, acc_eid as art_oeid, ufullname as art_ofn, accpseudo as art_opsd, pflpic_pathTo_min as art_oppic, Accounts.todelete 
        FROM Accounts, Profils, Pflpics_history, Profilpictures
        WHERE accounts.pflid = profils.pflid
        AND Profils.pflid = Pflpics_history.pflid
        AND Pflpics_history.pflpicid = Profilpictures.pflpicid
        AND Pflpics_history.date_EndEna_tstamp IS NULL
        AND acc_eid = :acc_eid;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":acc_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4accn3">
        <query.body value="
        SELECT accid as trd_oid, acc_eid as trd_oeid, ufullname as trd_ofn, accpseudo as trd_opsd, pflpic_pathTo_min as trd_oppic, Accounts.todelete  
        FROM Accounts, Profils, Pflpics_history, Profilpictures
        WHERE accounts.pflid = profils.pflid
        AND Profils.pflid = Pflpics_history.pflid
        AND Pflpics_history.pflpicid = Profilpictures.pflpicid
        AND Pflpics_history.date_EndEna_tstamp IS NULL
        AND accid = :accid;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="DiffÃ©rent de qryl4accn2 sur les ALIAS pret a l'emploi pour le CALLER." />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<!-- ******** SERVER STORAGE ******** -->

    <query id="qryl4srvn1">
        <query.body value="
        SELECT * 
        FROM Server_Storage
        WHERE srvid = :srvid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":srvid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

<!-- ******** IMAGES ******** -->

    <query id="qryl4picn1">
        <query.body value="
        INSERT INTO Proddb_Pictures (pdpic_is_default,pdpic_fn,pdpic_string_b64,pdpic_height,pdpic_width,pdpic_size,pdpic_type,pdpic_realpath,pdpic_srvid,pdpic_date_tstamp) VALUES 
        (:pdpic_is_default,:pdpic_fn,:pdpic_string_b64,:pdpic_height,:pdpic_width,:pdpic_size,:pdpic_type,:pdpic_realpath,:pdpic_srvid,:pdpic_date_tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":pdpic_is_default" value="" />
            <qparam id=":pdpic_fn" value="" />
            <qparam id=":pdpic_string_b64" value="" />
            <qparam id=":pdpic_height" value="" />
            <qparam id=":pdpic_width" value="" />
            <qparam id=":pdpic_size" value="" />
            <qparam id=":pdpic_type" value="" />
            <qparam id=":pdpic_realpath" value="" />
            <qparam id=":pdpic_srvid" value="" />
            <qparam id=":pdpic_date_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4picn2">
        <query.body value="
        UPDATE Proddb_Pictures  
        SET pdpic_eid = :pdpic_eid
        WHERE pdpicid = :picid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":picid" value="" />
            <qparam id=":pdpic_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4picn3">
        <query.body value="
        UPDATE Proddb_Pictures  
        SET pdpic_prod_fn = :pdpic_prod_fn, pdpic_realpath = :pdpic_realpath, pdpic_full_ftppath = :n_ftp_fpath 
        WHERE pdpicid = :picid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":picid" value="" />
            <qparam id=":pdpic_prod_fn" value="" />
            <qparam id=":pdpic_realpath" value="" />
            <qparam id=":n_ftp_fpath" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4picn4">
        <query.body value="
        SELECT pdpic_srvid, srv_name 
        FROM artpictures AP, Proddb_Pictures PP, Server_Storage SS 
        WHERE AP.ap_pdpicid = PP.pdpicid 
        AND PP.pdpic_srvid = SS.srvid
        AND AP.ap_artid = :ap_artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ap_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4picn5">
        <query.body value="
        SELECT Proddb_Pictures.*, srvid as server_id, srv_name as server_name, srv_fam_lib as server_family   
        FROM Proddb_Pictures, server_storage, server_family   
        WHERE pdpic_srvid = srvid 
        AND srv_fam_id = srv_famid
        AND pdpic_eid = :pdpic_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":pdpic_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4picn6">
        <query.body value="
        SELECT Proddb_Pictures.*, srvid as server_id, srv_name as server_name, srv_fam_lib as server_family   
        FROM Proddb_Pictures, server_storage, server_family   
        WHERE pdpic_srvid = srvid 
        AND srv_fam_id = srv_famid
        AND pdpicid = :pdpicid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":pdpicid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4picn7">
        <query.body value="
        DELETE FROM Proddb_Pictures 
        WHERE pdpicid = :id ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<!-- ******** IMAGES ARTICLES ******** -->

    <query id="qryl4artpicn1">
        <query.body value="
        INSERT INTO ArtPictures (ap_pdpicid,ap_artid) VALUES
        (:ap_picid,:ap_artid); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ap_picid" value="" />
            <qparam id=":ap_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4artpicn2">
        <query.body value="
        DELETE FROM ArtPictures 
        WHERE ap_pdpicid = :id ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<!-- ******** IMAGES PROFIL PICTURE ******** -->

    <query id="qryl4pdppn1">
        <query.body value="
        SELECT PPP.*, PP.*, SS.* 
        FROM Pdacc_PflPics PPP, Proddb_Pictures PP, Server_Storage SS
        WHERE PPP.pdpp_pdpicid = PP.pdpicid
        AND PP.pdpic_srvid = SS.srvid
        AND pdpp_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4pdppn2">
        <query.body value="
        INSERT INTO Pdacc_PflPics (pdpp_pdpicid,pdpp_accid) VALUES 
        (:picid, :accid); "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":picid" value="" />
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdppn3">
        <query.body value="
        DELETE PPP.*, PP.* 
        FROM Pdacc_PflPics PPP, Proddb_Pictures PP
        WHERE PPP.pdpp_pdpicid = PP.pdpicid
        AND pdpp_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdppn4">
        <query.body value="
        DELETE PPP.* 
        FROM Pdacc_PflPics PPP
        WHERE pdpp_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<!-- ******** IMAGES COVER ACCOUNTS ******** -->

    <query id="qryl4acovn1">
        <query.body value="
        SELECT PC.*, PP.*, SS.* 
        FROM Pdacc_Covers PC, Proddb_Pictures PP, Server_Storage SS
        WHERE PC.acov_pdpicid = PP.pdpicid
        AND PP.pdpic_srvid = SS.srvid
        AND acov_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4acovn2">
        <query.body value="
        INSERT INTO Pdacc_Covers (acov_pdpicid,acov_accid,acov_height,acov_width,acov_top) VALUES 
        (:picid, :accid, :height, :width, :top); "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":picid" value="" />
            <qparam id=":accid" value="" />
            <qparam id=":height" value="" />
            <qparam id=":width" value="" />
            <qparam id=":top" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4acovn3">
        <query.body value="
        DELETE PC.*, PP.* 
        FROM Pdacc_Covers PC, Proddb_Pictures PP
        WHERE PC.acov_pdpicid = PP.pdpicid
        AND acov_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4acovn4">
        <query.body value="
        DELETE PC.* 
        FROM Pdacc_Covers PC
        WHERE acov_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
<!-- ******** IMAGES COVER TRENDS ******** -->

    <query id="qryl4trcovn1">
        <query.body value="
        SELECT tcovhy_id, tcovhy_crea_tstamp, trcovid, trcov_width, trcov_height, trcov_top, pdpic_srvid, srv_name, pdpicid, pdpic_realpath, pdpic_full_ftppath, pdpic_date_tstamp  
        FROM TrCover_Histy, TrCovers, Proddb_Pictures, Server_Storage 
        WHERE tcovhy_trcovid = trcovid
        AND trcov_pdpicid = pdpicid 
        AND pdpic_srvid = srvid
        AND tcovhy_trid = :trid
        AND tcovhy_endena_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4trcovn2">
        <query.body value="
        DELETE TC.*, TCH.*, PP.*   
        FROM TrCover_Histy TCH, TrCovers TC, Proddb_Pictures PP  
        WHERE tcovhy_trcovid = trcovid
        AND trcov_pdpicid = pdpicid 
        AND tcovhy_trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="Supprime TOUTES les occurrences de couverture pour la Tendance spÃ©cifiÃ©e" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <!-- Non TestÃ© en conditions rÃ©elles au 11-10-14 -->
    <query id="qryl4trcovn3">
        <query.body value="
        DELETE TC.*, TCH.*, PP.*  
        FROM TrCover_Histy TCH, TrCovers TC, Proddb_Pictures PP 
        WHERE tcovhy_trcovid = trcovid
        AND trcov_pdpicid = pdpicid 
        AND tcovhy_id = :tcovid
        AND tcovhy_trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Supprime une occurrence de couverture pour la Tendance spÃ©cifiÃ©e identifiÃ©e (TCH) par son identifiant" />
        <query.params.in>
            <qparam id=":tcovid" value="" />
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4trcovn4">
        <query.body value="
        INSERT INTO TrCovers (trcov_pdpicid,trcov_width,trcov_height,trcov_top) VALUES
        (:picid,:cov_w,:cov_h,:cov_t); "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":picid" value="" />
            <qparam id=":cov_w" value="" />
            <qparam id=":cov_h" value="" />
            <qparam id=":cov_t" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4trcovn5">
        <query.body value="
        INSERT INTO TrCover_Histy (tcovhy_trcovid,tcovhy_trid,tcovhy_creadate,tcovhy_crea_tstamp) VALUES
        (:tcovid,:trid,:date,:time); "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":tcovid" value="" />
            <qparam id=":trid" value="" />
            <qparam id=":date" value="" />
            <qparam id=":time" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4trcovn6">
        <query.body value="
        DELETE TC.*, TCH.* 
        FROM TrCover_Histy TCH, TrCovers TC 
        WHERE tcovhy_trcovid = trcovid
        AND tcovhy_trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<!-- ******** ARTICLES ******** -->

    <query id="qryl4artn1">
        <query.body value="
        INSERT INTO Articles (art_accid,art_desc,art_loc_numip,art_cdate_tstamp) VALUES
        (:accid,:art_desc,:art_loc_numip,:art_cdate_tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":art_desc" value="" />
            <qparam id=":art_loc_numip" value="" />
            <qparam id=":art_cdate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn2">
        <query.body value="
		UPDATE Articles 
        SET art_eid = :art_eid, art_prmlk = :art_prmlk
        WHERE artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":art_eid" value="" />
			<qparam id=":art_prmlk" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn3">
        <query.body value="
        SELECT AR.*, PA.pdaccid uid, PA.pdacc_eid ueid, PA.pdacc_upsd upsd, PA.pdacc_ufn ufn
        FROM Articles AR, Proddb_accounts PA 
        WHERE AR.art_accid = PA.pdaccid 
        AND art_eid = :art_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn3neo0615001">
        <query.body value="
        SELECT AR.*, PA.pdaccid uid, PA.pdacc_eid ueid, PA.pdacc_upsd upsd, PA.pdacc_ufn ufn, ASH.*
        FROM Proddb_accounts PA, Articles AR
        LEFT JOIN ArtStatesHisty ASH ON ash_aid = artid
        WHERE AR.art_accid = PA.pdaccid 
        AND ash_evedate_tstamp IS NULL 
        AND art_eid = :art_eid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn4">
        <query.body value="
        SELECT AR.*, PA.pdaccid uid, PA.pdacc_eid ueid, PA.pdacc_upsd upsd, PA.pdacc_ufn ufn 
        FROM Articles AR, Proddb_accounts PA  
        WHERE AR.art_accid = PA.pdaccid  
        AND artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn4neo0615001">
        <query.body value="
        SELECT AR.*, PA.pdaccid uid, PA.pdacc_eid ueid, PA.pdacc_upsd upsd, PA.pdacc_ufn ufn, ASH.*
        FROM Proddb_accounts PA, Articles AR
        LEFT JOIN ArtStatesHisty ASH ON ash_aid = artid
        WHERE AR.art_accid = PA.pdaccid 
        AND ash_evedate_tstamp IS NULL 
        AND artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn5">
        <query.body value="
        SELECT artid 
        FROM Articles 
        WHERE art_eid = :art_eid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="On convertit l'eid en id pour les besoins de fonctionnement du produit." />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn6">
        <query.body value="
        SELECT artid 
        FROM Articles 
        WHERE artid = :artid
        AND art_accid = :art_accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":art_accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn7">
        <query.body value="
        UPDATE Articles 
        SET art_pdpicid = :art_picid, art_pdpic_realpath = :art_pdpic_realpath 
        WHERE artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":art_picid" value="" />
            <qparam id=":art_pdpic_realpath" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn8">
        <query.body value="
        SELECT artid 
        FROM Articles 
        WHERE art_eid = :art_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn9">
        <query.body value="
        SELECT art_eid 
        FROM Articles 
        WHERE artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn10">
        <query.body value="
        SELECT * 
        FROM TrArticles 
        WHERE trart_artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn11">
        <query.body value="
        DELETE FROM Reactions 
        WHERE react_artid = :artid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn12">
        <query.body value="
        DELETE FROM kwbyart 
        WHERE kba_artid = :artid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
     <query id="qryl4artn13">
        <query.body value="
        CALL SP_DeleteArticleEvalsScope(:artid);"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="sqlproc" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artn14">
        <query.body value="
        DELETE FROM Articles 
        WHERE artid = :artid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn15">
        <query.body value="
        SELECT AR.*, PA.pdaccid uid, PA.pdacc_eid ueid, PA.pdacc_upsd upsd, PA.pdacc_ufn ufn 
        FROM Articles AR, Proddb_accounts PA  
        WHERE AR.art_accid = PA.pdaccid  
        AND art_prmlk = :prmlk; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":prmlk" value="" /> 
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn15neo0615001">
        <query.body value="
        SELECT AR.*, PA.pdaccid uid, PA.pdacc_eid ueid, PA.pdacc_upsd upsd, PA.pdacc_ufn ufn, ASH.*
        FROM Proddb_accounts PA, Articles AR 
        LEFT JOIN ArtStatesHisty ASH ON ash_aid = artid
        WHERE AR.art_accid = PA.pdaccid 
        AND ash_evedate_tstamp IS NULL 
        AND art_prmlk = :prmlk; "/> 
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":prmlk" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn16">
        <query.body value="
        DELETE USTGs_REACTION, USERTAGs 
        FROM USERTAGs, USTGs_REACTION
        INNER JOIN Reactions ON ustgrct_rctid = reactid
        WHERE ustgrct_ustgid = ustg_id 
        AND react_artid = :aid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":aid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn17">
        <query.body value="
        UPDATE ArtStatesHisty 
        SET ash_evedate = :time, ash_evedate_tstamp = :tstamp 
        WHERE ash_id = :ashid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ashid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4artn18">
        <query.body value="
        INSERT INTO ArtStatesHisty (ash_aid,ash_state,ash_evsdate,ash_evsdate_tstamp) VALUES
        (:ash_aid,:ash_state,:time,:tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ash_aid" value="" />
            <qparam id=":ash_state" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn19">
        <query.body value="
        UPDATE VM_Articles_IML 
        SET art_state = :state 
        WHERE artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":state" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn20">
        <query.body value="
        UPDATE VM_Articles_ITR 
        SET art_state = :state 
        WHERE artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":state" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn21">
        <query.body value="
        DELETE FROM ArtStatesHisty 
        WHERE ash_aid = :aid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":aid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artn22"> 
        <query.body value="
        (
			SELECT artid, art_eid 
            FROM Articles 
            WHERE art_accid = :sprt_ref1 
            AND art_cdate_tstamp &gt;= :ref_date1 
            ORDER BY art_cdate_tstamp ASC 
			LIMIT :limit1
         )
         UNION 
         (
            SELECT artid, art_eid 
            FROM Articles 
            WHERE art_accid = :sprt_ref2 
            AND art_cdate_tstamp &lt;= :ref_date2 
            ORDER BY art_cdate_tstamp DESC 
			LIMIT :limit2
         ) "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":sprt_ref1" value="" />
            <qparam id=":ref_date1" value="" />
            <qparam id=":sprt_ref2" value="" />
            <qparam id=":ref_date2" value="" />
            <qparam id=":limit1" value="" />
            <qparam id=":limit2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn23">
        <query.body value="
        (
			SELECT artid, art_eid 
            FROM Articles 
            WHERE art_accid = :sprt_ref1 
            AND artid IN ( SELECT trart_artid FROM TrArticles ) 
            AND art_cdate_tstamp &gt;= :ref_date1 
            ORDER BY art_cdate_tstamp ASC 
			LIMIT :limit1 
         )
         UNION
         (
            SELECT artid, art_eid 
            FROM Articles 
            WHERE art_accid = :sprt_ref2 
            AND artid IN ( SELECT trart_artid FROM TrArticles ) 
            AND art_cdate_tstamp &lt;= :ref_date2 
            ORDER BY art_cdate_tstamp DESC 
			LIMIT :limit2 
         ) "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":sprt_ref1" value="" />
            <qparam id=":ref_date1" value="" />
            <qparam id=":sprt_ref2" value="" />
            <qparam id=":ref_date2" value="" />
            <qparam id=":limit1" value="" />
            <qparam id=":limit2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artn24">
        <query.body value="
        (
			SELECT artid, art_eid 
            FROM Articles, TrArticles 
            WHERE artid = trart_artid 
			AND trart_trid = :sprt_ref1 
            AND art_cdate_tstamp &gt;= :ref_date1 
            ORDER BY art_cdate_tstamp ASC 
			LIMIT :limit1 
         )
         UNION
         (
			SELECT artid, art_eid 
            FROM Articles, TrArticles 
            WHERE artid = trart_artid 
			AND trart_trid = :sprt_ref2 
            AND art_cdate_tstamp &lt;= :ref_date2 
            ORDER BY art_cdate_tstamp ASC 
			LIMIT :limit2 
         ) "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":sprt_ref1" value="" />
            <qparam id=":ref_date1" value="" />
            <qparam id=":sprt_ref2" value="" />
            <qparam id=":ref_date2" value="" />
            <qparam id=":limit1" value="" />
            <qparam id=":limit2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4artn25">
        <query.body value="
        UPDATE ArtStatesHisty 
        SET ash_evedate = :time, ash_evedate_tstamp = :tstamp 
        WHERE ash_aid IN
        (
            SELECT trart_artid
            FROM TrArticles 
            WHERE trart_trid = :trid
        ) "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Permet de mettre Ã  jour des occurrences d'Ã©tat pour les Articles ITR d'une Tendance dont l'identifiant est passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn25_all">
        <query.body value="
        UPDATE ArtStatesHisty 
        SET ash_evedate = :time, ash_evedate_tstamp = :tstamp 
        WHERE ash_aid IN
        (
            SELECT artid
            FROM Articles 
            WHERE art_accid = :accid
        ) ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Permet de mettre Ã  jour des occurrences d'Ã©tat pour tous les Articles d'un Compte dont l'identifiant est passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artn26">
        <query.body value="
        INSERT INTO ArtStatesHisty (ash_aid,ash_state,ash_evsdate,ash_evsdate_tstamp) 
        SELECT trart_artid, :ash_state, :time, :tstamp 
        FROM TrArticles 
        WHERE trart_trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Permet d'ajouter des occurrences d'Ã©tat pour les Articles ITR d'une Tendance dont l'identifiant est passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":ash_state" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artn26_all">
        <query.body value="
        INSERT INTO ArtStatesHisty (ash_aid,ash_state,ash_evsdate,ash_evsdate_tstamp) 
        SELECT artid, :ash_state, :time, :tstamp 
        FROM Articles 
        WHERE art_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Permet d'ajouter des occurrences d'Ã©tat pour tous les Articles d'un Compte dont l'identifiant est passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":ash_state" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artn27">
        <query.body value="
        UPDATE VM_Articles_ITR 
        SET art_state = :state 
        WHERE art_trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":state" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artn28_iml">
        <query.body value="
        UPDATE VM_Articles_IML 
        SET art_state = :state 
        WHERE art_oid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":state" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn28_itr">
        <query.body value="
        UPDATE VM_Articles_ITR 
        SET art_state = :state 
        WHERE art_oid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":state" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn29">
        <query.body value="
        SELECT count(art_eid) cn
        FROM Articles
        LEFT JOIN ArtStatesHisty ON ash_aid = artid  
        WHERE ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL ) AND ash_evedate_tstamp IS NULL
        ) 
        AND art_accid NOT IN ( SELECT pdaccid FROM Proddb_Accounts WHERE pdacc_todelete != 0 )
        AND art_accid = :aoi
        AND art_eid != :ai
        AND art_cdate_tstamp &lt;= :at; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
        <query.note value="Le nombre d'articles crÃ©Ã©s anterieurement" />
        <query.params.in>
            <qparam id=":ai" value="" />
            <qparam id=":at" value="" />
            <qparam id=":aoi" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artn29_olytra">
        <query.body value="
        SELECT count(art_eid) cn
        FROM Trends, TrArticles, Articles
        LEFT JOIN ArtStatesHisty ON ash_aid = artid  
        WHERE trart_artid = artid
        AND trart_trid = trid
        AND ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        ) 
        AND trart_trid NOT IN ( SELECT tsh_trid FROM TrStatesHisty WHERE tsh_evedate_tstamp IS NULL )
        AND trd_owner NOT IN ( SELECT pdaccid FROM Proddb_Accounts WHERE pdacc_todelete != 0 )
        AND trid = :ti
        AND art_eid != :ai
        AND art_cdate_tstamp &lt;= :at; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="Le nombre d'articles crÃ©Ã©s anterieurement en ne considÃ©rant que les articles TR" />
        <query.params.in>
            <qparam id=":ai" value="" />
            <qparam id=":at" value="" />
            <qparam id=":ti" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
<!-- ******** ARTICLES TREND ******** -->

    <query id="qryl4trartn1">
        <query.body value="
        INSERT INTO TrArticles (trart_artid,trart_trid) VALUES
        (:trart_artid,:trart_trid); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trart_artid" value="" />
            <qparam id=":trart_trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trartn2">
        <query.body value="
        SELECT trartid, trid, trd_eid, trd_title, trd_desc, trd_title_href, trd_catgid, trd_is_public, trd_grat, trd_date_tstamp, Proddb_Accounts.*
        FROM TrArticles, Trends, Proddb_Accounts 
        WHERE trid = trart_trid 
        AND trd_owner = pdaccid
        AND trart_artid = :trart_artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trart_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trartn3">
        <query.body value="
        SELECT count(trartid) as ucontb 
        FROM TrArticles, Articles 
        WHERE trart_artid = artid 
        AND trart_trid = :trart_trid 
        AND art_accid = :art_accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trart_trid" value="" />
            <qparam id=":art_accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trartn4">
        <query.body value="
        SELECT art_eid 
        FROM TrArticles, Articles 
        WHERE trart_artid = artid 
        AND trart_trid = ( SELECT trid FROM Trends WHERE trd_eid = :trart_treid ) 
        AND art_eid != :art_eid 
        AND art_cdate_tstamp &gt;= :art_cdate_tstamp 
        GROUP BY art_cdate_tstamp DESC; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
            <qparam id=":trart_treid" value="" />
            <qparam id=":art_cdate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trartn5">
        <query.body value="
        SELECT art_eid 
        FROM TrArticles, Articles 
        WHERE trart_artid = artid 
        AND trart_trid = ( SELECT trid FROM Trends WHERE trd_eid = :trart_treid ) 
        AND art_eid != :art_eid 
        AND art_cdate_tstamp &lt;= :art_cdate_tstamp 
        GROUP BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
            <qparam id=":trart_treid" value="" />
            <qparam id=":art_cdate_tstamp" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trartn6">
        <query.body value="
        CALL SP_DeleteTrendArticle(:artid);"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="sqlproc" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	<query id="qryl4trartn7">
        <query.body value="
        SELECT Articles.*, TrArticles.*   
        FROM TrArticles, Articles 
        WHERE trart_artid = artid 
        AND art_eid = :art_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	    
<!-- ******** ARTICLES IML VM ARCHIVE ********* -->
    <query id="qryl4artwm_imln1">
        <query.body value="
        INSERT INTO VM_Articles_IML (artid,art_eid,art_picid,art_pic_rpath,art_desc,art_crea_tstamp,art_locip,art_hashs,art_rnb,art_evals,art_tot,art_oid,art_ogid,art_oeid,art_opsd,art_ofn,art_oppicid,art_oppic_rpath,art_todel) VALUES
        (
            :artid,
            :art_eid,
            :art_picid,
            :art_pic_rpath,
            :art_desc,
            :art_crea_tstamp,
            :art_locip,
            :art_hashs,
            :art_rnb,
            :art_evals,
            :art_tot,
            :art_oid,
            :art_ogid,
            :art_oeid,
            :art_opsd,
            :art_ofn,
            :art_oppicid,
            :art_oppic_rpath,
            :art_todel
        ); "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":art_eid" value="" />
            <qparam id=":art_picid" value="" />
            <qparam id=":art_pic_rpath" value="" />
            <qparam id=":art_desc" value="" />
            <qparam id=":art_crea_tstamp" value="" />
            <qparam id=":art_locip" value="" />
            <qparam id=":art_hashs" value="" />
            <qparam id=":art_rnb" value="" />
            <qparam id=":art_evals" value="" />
            <qparam id=":art_tot" value="" />
            <qparam id=":art_oid" value="" />
            <qparam id=":art_ogid" value="" />
            <qparam id=":art_oeid" value="" />
            <qparam id=":art_opsd" value="" />
            <qparam id=":art_ofn" value="" />
            <qparam id=":art_oppicid" value="" />
            <qparam id=":art_oppic_rpath" value="" />
            <qparam id=":art_todel" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artwm_imln2">
        <query.body value="
        SELECT * 
        FROM VM_Articles_IML
        WHERE art_eid = :art_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artwm_imln3">
        <query.body value="
        SELECT * 
        FROM VM_Articles_IML
        WHERE artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artwm_imln4">
        <query.body value="
        UPDATE VM_Articles_IML 
        SET 
            artid = :artid1,
            art_eid = :art_eid,
            art_picid = :art_picid,
            art_pic_rpath = :art_pic_rpath,
            art_desc = :art_desc,
            art_crea_tstamp = :art_crea_tstamp,
            art_locip = :art_locip,
            art_hashs = :art_hashs,
            art_rnb = :art_rnb,
            art_evals = :art_evals,
            art_tot = :art_tot,
            art_oid = :art_oid,
            art_ogid = :art_ogid,
            art_oeid = :art_oeid,
            art_opsd = :art_opsd,
            art_ofn = :art_ofn,
            art_oppicid = :art_oppicid,
            art_oppic_rpath = :art_oppic_rpath,
            art_todel = :art_todel
        WHERE artid = :artid2; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid1" value="" />
            <qparam id=":artid2" value="" />
            <qparam id=":art_eid" value="" />
            <qparam id=":art_picid" value="" />
            <qparam id=":art_pic_rpath" value="" />
            <qparam id=":art_desc" value="" />
            <qparam id=":art_crea_tstamp" value="" />
            <qparam id=":art_locip" value="" />
            <qparam id=":art_hashs" value="" />
            <qparam id=":art_rnb" value="" />
            <qparam id=":art_evals" value="" />
            <qparam id=":art_tot" value="" />
            <qparam id=":art_oid" value="" />
            <qparam id=":art_ogid" value="" />
            <qparam id=":art_oeid" value="" />
            <qparam id=":art_opsd" value="" />
            <qparam id=":art_ofn" value="" />
            <qparam id=":art_oppicid" value="" />
            <qparam id=":art_oppic_rpath" value="" />
            <qparam id=":art_todel" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4artwm_imln5">
        <query.body value="
        DELETE FROM VM_Articles_IML
        WHERE art_eid = :art_eid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
<!-- ******** ARTICLES ITR VM ARCHIVE ********* -->
    <query id="qryl4artwm_itrn1">
        <query.body value="
        INSERT INTO VM_Articles_ITR (artid,art_eid,art_picid,art_pic_rpath,art_desc,art_crea_tstamp,art_locip,art_trid,art_trd_eid,art_trd_title,art_trd_desc,art_trd_title_href,art_trd_catgid,art_trd_is_public,art_trd_grat,art_trd_date_tstamp,art_hashs,art_rnb,art_evals,art_tot,art_oid,art_ogid,art_oeid,art_opsd,art_ofn,art_oppicid,art_oppic_rpath,art_todel) VALUES
        (
            :artid,
            :art_eid,
            :art_picid,
            :art_pic_rpath,
            :art_desc,
            :art_crea_tstamp,
            :art_locip,
            :art_trid,
            :art_trd_eid,
            :art_trd_title,
            :art_trd_desc,
            :art_trd_title_href,
            :art_trd_catgid,
            :art_trd_is_public,
            :art_trd_grat,
            :art_trd_date_tstamp,
            :art_hashs,
            :art_rnb,
            :art_evals,
            :art_tot,
            :art_oid,
            :art_ogid,
            :art_oeid,
            :art_opsd,
            :art_ofn,
            :art_oppicid,
            :art_oppic_rpath,
            :art_todel
        ); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":art_eid" value="" />
            <qparam id=":art_picid" value="" />
            <qparam id=":art_pic_rpath" value="" />
            <qparam id=":art_desc" value="" />
            <qparam id=":art_crea_tstamp" value="" />
            <qparam id=":art_locip" value="" />
            <qparam id=":art_trid" value="" />
            <qparam id=":art_trd_eid" value="" />
            <qparam id=":art_trd_title" value="" />
            <qparam id=":art_trd_desc" value="" />
            <qparam id=":art_trd_title_href" value="" />
            <qparam id=":art_trd_catgid" value="" />
            <qparam id=":art_trd_is_public" value="" />
            <qparam id=":art_trd_grat" value="" />
            <qparam id=":art_trd_date_tstamp" value="" />
            <qparam id=":art_hashs" value="" />
            <qparam id=":art_rnb" value="" />
            <qparam id=":art_evals" value="" />
            <qparam id=":art_tot" value="" />
            <qparam id=":art_oid" value="" />
            <qparam id=":art_ogid" value="" />
            <qparam id=":art_oeid" value="" />
            <qparam id=":art_opsd" value="" />
            <qparam id=":art_ofn" value="" />
            <qparam id=":art_oppicid" value="" />
            <qparam id=":art_oppic_rpath" value="" />
            <qparam id=":art_todel" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4artwm_itrn2">
        <query.body value="
        SELECT * 
        FROM VM_Articles_ITR
        WHERE art_eid = :art_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artwm_itrn3">
        <query.body value="
        SELECT * 
        FROM VM_Articles_ITR
        WHERE artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4artwm_itrn4">
        <query.body value="
        UPDATE VM_Articles_ITR 
        SET 
            artid = :artid1,
            art_eid = :art_eid,
            art_picid = :art_picid,
            art_pic_rpath = :art_pic_rpath,
            art_desc = :art_desc,
            art_crea_tstamp = :art_crea_tstamp,
            art_locip = :art_locip,
            art_trid = :art_trid,
            art_trd_eid = :art_trd_eid,
            art_trd_title = :art_trd_title,
            art_trd_desc = :art_trd_desc,
            art_trd_title_href = :art_trd_title_href,
            art_trd_catgid = :art_trd_catgid,
            art_trd_is_public = :art_trd_is_public,
            art_trd_grat = :art_trd_grat,
            art_trd_date_tstamp = :art_trd_date_tstamp,
            art_hashs = :art_hashs,
            art_rnb = :art_rnb,
            art_evals = :art_evals,
            art_tot = :art_tot,
            art_oid = :art_oid,
            art_ogid = :art_ogid,
            art_oeid = :art_oeid,
            art_opsd = :art_opsd,
            art_ofn = :art_ofn,
            art_oppicid = :art_oppicid,
            art_oppic_rpath = :art_oppic_rpath,
            art_todel = :art_todel
        WHERE artid = :artid2; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid1" value="" />
            <qparam id=":artid2" value="" />
            <qparam id=":art_eid" value="" />
            <qparam id=":art_picid" value="" />
            <qparam id=":art_pic_rpath" value="" />
            <qparam id=":art_desc" value="" />
            <qparam id=":art_crea_tstamp" value="" />
            <qparam id=":art_locip" value="" />
            <qparam id=":art_trid" value="" />
            <qparam id=":art_trd_eid" value="" />
            <qparam id=":art_trd_title" value="" />
            <qparam id=":art_trd_desc" value="" />
            <qparam id=":art_trd_title_href" value="" />
            <qparam id=":art_trd_catgid" value="" />
            <qparam id=":art_trd_is_public" value="" />
            <qparam id=":art_trd_grat" value="" />
            <qparam id=":art_trd_date_tstamp" value="" />
            <qparam id=":art_hashs" value="" />
            <qparam id=":art_rnb" value="" />
            <qparam id=":art_evals" value="" />
            <qparam id=":art_tot" value="" />
            <qparam id=":art_oid" value="" />
            <qparam id=":art_ogid" value="" />
            <qparam id=":art_oeid" value="" />
            <qparam id=":art_opsd" value="" />
            <qparam id=":art_ofn" value="" />
            <qparam id=":art_oppicid" value="" />
            <qparam id=":art_oppic_rpath" value="" />
            <qparam id=":art_todel" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4artwm_itrn5">
        <query.body value="
        DELETE FROM VM_Articles_ITR
        WHERE art_eid = :art_eid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<!-- ******** KEWYORDS SCOPE ******** -->
    
    <query id="qryl4kwsn1">
        <query.body value="
        SELECT * 
        FROM Keywords 
        WHERE kwlib = :kwlib; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":kwlib" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4kwsn2">
        <query.body value="
        INSERT INTO Keywords (kwlib,kw_lib_ori,kw_loc_numip,kw_date_tstamp,kw_art_eid,kw_acc_eid) VALUES
        (:kwlib,:kw_lib_ori,:kw_loc_numip,:kw_date_tstamp,:kw_art_eid,:kw_acc_eid); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":kwlib" value="" />
            <qparam id=":kw_lib_ori" value="" />
            <qparam id=":kw_loc_numip" value="" />
            <qparam id=":kw_date_tstamp" value="" />
            <qparam id=":kw_art_eid" value="" />
            <qparam id=":kw_acc_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4kwsn3">
        <query.body value="
        INSERT INTO Keywords_Archive (kwarch_lib,kwarch_lib_ori,kwarch_art_eid,kwarch_loc_numip,kwarch_date_tstamp) VALUES
        (:kwarch_lib,:kwarch_lib_ori,:kwarch_art_eid,:kwarch_loc_numip,:kwarch_date_tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":kwarch_lib" value="" />
            <qparam id=":kwarch_lib_ori" value="" />
            <qparam id=":kwarch_art_eid" value="" />
            <qparam id=":kwarch_loc_numip" value="" />
            <qparam id=":kwarch_date_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4kwsn4">
        <query.body value="
        INSERT INTO KwByArt (kba_kwlib,kba_lib_ori,kba_artid,kba_date_tstamp) VALUES
        (:kba_kwlib,:kba_lib_ori,:kba_artid,:kba_date_tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":kba_kwlib" value="" />
            <qparam id=":kba_lib_ori" value="" />
            <qparam id=":kba_artid" value="" />
            <qparam id=":kba_date_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
<!-- ******** REACTIONS SCOPE ******** -->

    <query id="qryl4reactn1">
        <query.body value="
        SELECT * 
        FROM Reactions
        WHERE react_artid = :react_artid
		ORDER BY react_date_tstamp DESC
		LIMIT 20; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":react_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn2">
        <query.body value="
        SELECT Reactions.*, pdaccid as oid, pdacc_eid as oeid, pdacc_ufn as ofn, pdacc_upsd as opsd, pdacc_todelete  
        FROM Reactions, Proddb_Accounts 
        WHERE react_writer = pdaccid 
        AND reactid = :reactid
		ORDER BY react_date_tstamp DESC
		LIMIT 20; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":reactid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn3">
        <query.body value="
        INSERT INTO Reactions (react_body,react_writer,react_loc_numip,react_artid,react_date_tstamp) VALUES
        (:react_body,:react_writer,:react_loc_numip,:react_artid,:react_date_tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":react_body" value="" />
            <qparam id=":react_writer" value="" />
            <qparam id=":react_loc_numip" value="" />
            <qparam id=":react_artid" value="" />
            <qparam id=":react_date_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4reactn4">
        <query.body value="
        DELETE FROM Reactions
        WHERE reactid = :reactid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":reactid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4reactn5">
        <query.body value="
        UPDATE Reactions
        SET react_eid = :react_eid
        WHERE reactid = :reactid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":reactid" value="" />
            <qparam id=":react_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4reactn6">
        <query.body value="
		SELECT Reactions.*, artid as raid, art_eid as raeid, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn, pdacc_todelete as atdl 
		FROM Reactions, Articles, Proddb_Accounts
		WHERE react_writer = pdaccid
		AND react_artid = artid 
		AND react_artid = :react_artid
		ORDER BY react_date_tstamp DESC
		LIMIT 10;  "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":react_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn7">
        <query.body value="
        SELECT Reactions.*, art_eid as aeid, art_accid as aoid, AFAR.pdacc_todelete as aotodel, AFAR.pdacc_eid as aoeid, AFR.pdaccid as roid, AFR.pdacc_eid as roeid, AFR.pdacc_ufn as rofn, AFR.pdacc_upsd as ropsd, AFR.pdacc_todelete as rotodel   
        FROM Reactions, Articles, Proddb_Accounts AFR, Proddb_Accounts AFAR
        WHERE react_writer = AFR.pdaccid 
        AND react_artid = artid
        AND art_accid = AFAR.pdaccid
        AND react_eid = :react_eid
		ORDER BY react_date_tstamp DESC
		LIMIT 20;  "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Pareil Ã  qryl4reactn2 mais on utilise react_eid et on rÃ©cupÃ¨re des informations sur les diffÃ©rents propriÃ©taires en plus." />
        <query.params.in>
            <qparam id=":react_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4reactn8">
        <query.body value="
        DELETE FROM Reactions 
        WHERE reactid = :rid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":rid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn9">
        <query.body value="
        SELECT Reactions.*, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn 
        FROM Reactions, Articles, Proddb_Accounts
        WHERE react_writer = pdaccid
        AND react_artid = artid 
        AND react_artid = :react_artid
        AND reactid != :rid
        AND react_date_tstamp &lt;= :time
        ORDER BY react_date_tstamp DESC
        LIMIT 20; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":react_artid" value="" />
            <qparam id=":rid" value="" />
            <qparam id=":time" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn10">
        <query.body value="
        SELECT Reactions.*, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn 
        FROM Reactions, Articles, Proddb_Accounts
        WHERE react_writer = pdaccid
        AND react_artid = artid 
        AND react_artid = :react_artid
        AND reactid != :rid
        AND react_date_tstamp &gt;= :time
        ORDER BY react_date_tstamp DESC
        LIMIT 20; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":react_artid" value="" />
            <qparam id=":rid" value="" />
            <qparam id=":time" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn11">
        <query.body value="
        SELECT count(*) rnb 
        FROM Reactions, Articles 
        WHERE react_artid = artid 
        AND art_eid = :art_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":art_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn12">
        <query.body value="
        SELECT count(*) rnb 
        FROM Reactions 
        WHERE react_artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reactn13">
        <query.body value="
        SELECT count(*) rnb 
        FROM Reactions, Proddb_Accounts 
        WHERE react_writer = pdaccid
        AND pdacc_todelete = 0
        AND react_artid = :artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
<!-- ******** HASHTAGS SCOPE ******** -->

    <query id="qryl4kban1">
        <query.body value="
        SELECT * 
        FROM KwByArt
        WHERE kba_artid = :kba_artid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":kba_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<!-- ******** TRENDS SCOPE ******** -->

    <query id="qryl4trdn1">
        <query.body value="
        SELECT Trends.*, catg_decocode
        FROM Trends, TrCategories 
        WHERE trd_catgid = catgid
        AND trd_eid = :trd_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trd_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4trdn1neo0615001">
        <query.body value="
        SELECT Trends.*, catg_decocode, TSH.* 
        FROM TrCategories, Trends
        LEFT JOIN TrStatesHisty TSH ON tsh_trid = trid
        WHERE trd_catgid = catgid
        AND tsh_evedate_tstamp IS NULL 
        AND trd_eid = :trd_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trd_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4trdn2">
        <query.body value="
        SELECT Trends.*, catg_decocode
        FROM Trends, TrCategories
        WHERE trd_catgid = catgid
        AND trd_title = :trd_title; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trd_title" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4trdn3">
        <query.body value="
        INSERT INTO Trends (trd_title,trd_title_href,trd_desc,trd_is_public,trd_grat,trd_loc_numip,trd_owner,trd_catgid,trd_date_tstamp) VALUES 
        (:trd_title,:trd_title_href,:trd_desc,:trd_is_public,:trd_grat,:trd_loc_numip,:trd_owner,:trd_catgid,:trd_date_tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trd_title" value="" />
            <qparam id=":trd_title_href" value="" />
            <qparam id=":trd_desc" value="" />
            <qparam id=":trd_is_public" value="" />
            <qparam id=":trd_grat" value="" />
            <qparam id=":trd_loc_numip" value="" />
            <qparam id=":trd_owner" value="" />
            <qparam id=":trd_catgid" value="" />
            <qparam id=":trd_date_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn4">
        <query.body value="
        UPDATE Trends 
        SET trd_eid = :trd_eid
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":trd_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn5">
        <query.body value="
        INSERT INTO TrTitles_Archive (trtle_lib,trtle_loc_numip,trtle_trid,trtle_date_tstamp) VALUES 
        (:trtle_lib,:trtle_loc_numip,:trtle_trid,:trtle_date_tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trtle_lib" value="" />
            <qparam id=":trtle_loc_numip" value="" />
            <qparam id=":trtle_trid" value="" />
            <qparam id=":trtle_date_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn6">
        <query.body value="
        SELECT trid 
        FROM Trends
        WHERE trd_eid = :trd_eid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Permet de 'convertir' trd_eid en trid. " />
        <query.params.in>
            <qparam id=":trd_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- On va chercher les donnÃ©es dans TrArticles mais c'est quand mÃªme une dominante de TENDANCES -->
    <query id="qryl4trdn7">
        <query.body value="
        SELECT count(trart_artid) as tr_posts 
        FROM TrArticles
        WHERE trart_trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- On va chercher les donnÃ©es dans TrArticles mais c'est quand mÃªme une dominante de TENDANCES -->
    <query id="qryl4trdn8">
        <query.body value="
        SELECT artid, art_eid, art_accid, art_cdate_tstamp, ash_state artdl
        FROM TrArticles, Articles 
        LEFT JOIN ArtStatesHisty ON artid = ash_aid
        WHERE trart_artid = artid
        AND ash_evedate_tstamp IS NULL
        AND trart_trid = :trid 
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	<query id="qryl4trdn8_dprvr">
        <query.body value="
        SELECT artid, art_eid, art_accid, art_cdate_tstamp, ash_state artdl
        FROM trarticles, articles 
        LEFT JOIN artstateshisty ON artid = ash_aid
        WHERE trart_artid = artid
        AND ( ( ash_evedate_tstamp IS NULL AND ash_state IN (1,6) ) OR ( ash_state IS NULL ) )
        AND trart_trid = :trid 
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4trdn9">
        <query.body value="
        SELECT trd_eid 
        FROM Trends
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Permet de 'convertir' trid en trd_eid." />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn10">
        <query.body value="
        UPDATE Trends 
        SET trd_title = :trd_title, trd_title_href = :trd_title_href, trd_datemod = CURRENT_TIMESTAMP(), trd_datemod_tstamp = :trd_datemod_tstamp 
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":trd_title" value="" />
			<qparam id=":trd_title_href" value="" />
            <qparam id=":trd_datemod_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn11">
        <query.body value="
        UPDATE TrTitles_Archive 
        SET trtle_lib = :trtle_lib 
        WHERE trtle_trid = :trtle_trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trtle_trid" value="" />
            <qparam id=":trtle_lib" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn12">
        <query.body value="
        UPDATE Trends 
        SET trd_desc = :trd_desc, trd_datemod = CURRENT_TIMESTAMP(), trd_datemod_tstamp = :trd_datemod_tstamp 
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":trd_desc" value="" />
            <qparam id=":trd_datemod_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn13">
        <query.body value="
        UPDATE Trends 
        SET trd_is_public = :trd_is_public, trd_datemod = CURRENT_TIMESTAMP(), trd_datemod_tstamp = :trd_datemod_tstamp 
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":trd_is_public" value="" />
            <qparam id=":trd_datemod_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn14">
        <query.body value="
        UPDATE Trends 
        SET trd_grat = :trd_grat, trd_datemod = CURRENT_TIMESTAMP(), trd_datemod_tstamp = :trd_datemod_tstamp 
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":trd_grat" value="" />
            <qparam id=":trd_datemod_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn15">
        <query.body value="
        UPDATE Trends 
        SET trd_catgid = :trd_catgid, trd_datemod = CURRENT_TIMESTAMP(), trd_datemod_tstamp = :trd_datemod_tstamp  
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":trd_catgid" value="" />
            <qparam id=":trd_datemod_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <!-- On va chercher les donnÃ©es dans TrArticles mais c'est quand mÃªme une dominante de TENDANCES -->
    <query id="qryl4trdn16">
        <query.body value="
        SELECT trart_artid as artid 
        FROM TrArticles, Articles
        WHERE trart_artid = artid
        AND trart_trid = :trid 
        ORDER BY art_cdate DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn17">
        <query.body value="
        SELECT trart_artid as ai, art_eid as aei
        FROM Trends, TrArticles, Articles
        WHERE trid = trart_trid 
        AND trart_artid = artid
        AND trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn18">
        <query.body value="
        DELETE FROM Trends
        WHERE trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn19">
        <query.body value="
        INSERT INTO Srh_Trends (srh_tr_id,srh_tr_eid,srh_tr_tle,srh_tr_desc,srh_tr_tlehrf,srh_tr_fol,srh_tr_post,srh_tr_owid,srh_tr_oweid,srh_tr_owpsd,srh_tr_owfn) VALUES 
        (:id,:eid,:title,:desc,:tlehrf,:folr,:post,:oid,:oeid,:opsd,:ofn);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
            <qparam id=":title" value="" />
            <qparam id=":desc" value="" />
            <qparam id=":tlehrf" value="" />
            <qparam id=":folr" value="" />
            <qparam id=":post" value="" />
            <qparam id=":oid" value="" />
            <qparam id=":oeid" value="" />
            <qparam id=":opsd" value="" />
            <qparam id=":ofn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4trdn20">
        <query.body value="
        UPDATE Srh_Trends 
        SET srh_tr_tle = :title,
        srh_tr_desc = :desc,
        srh_tr_tlehrf = :tlehrf,
        srh_tr_fol = :folr,
        srh_tr_post = :post,
        srh_tr_owpsd = :opsd,
        srh_tr_owfn = :ofn
        WHERE srh_tr_id = :id;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":title" value="" />
            <qparam id=":desc" value="" />
            <qparam id=":tlehrf" value="" />
            <qparam id=":folr" value="" />
            <qparam id=":post" value="" />
            <qparam id=":opsd" value="" />
            <qparam id=":ofn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4trdn21">
        <query.body value="
        DELETE FROM Srh_Trends 
        WHERE srh_tr_id = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
		<query.note value="Utiliser dans la suppression d'une Tendance" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4trdn22">
        <query.body value="
        SELECT *   
        FROM Trends 
        WHERE trd_owner = :accid 
        AND trid != :trid 
        AND trd_date_tstamp &lt;= :time 
        ORDER BY trd_date_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":trid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4trdn23">
        <query.body value="
        SELECT *   
        FROM Trends 
        WHERE trd_owner = :accid 
        AND trid != :trid 
        AND trd_date_tstamp &gt;= :time 
        ORDER BY trd_date_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":trid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4trdn24">
        <query.body value="
        SELECT Trends.*   
        FROM TrAbo_Histy, Trends  
        WHERE trabo_trid = trid 
        AND trabo_follower = :accid 
        AND trabo_trid != :trid
        AND trabo_dateterm IS NULL
        AND trabo_dateterm_tstamp IS NULL
        AND trd_date_tstamp &lt;= :time 
        ORDER BY trd_date_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":trid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4trdn25">
        <query.body value="
        SELECT Trends.*   
        FROM TrAbo_Histy, Trends  
        WHERE trabo_trid = trid 
        AND trabo_follower = :accid 
        AND trabo_trid != :trid
        AND trabo_dateterm IS NULL
        AND trabo_dateterm_tstamp IS NULL
        AND trd_date_tstamp &gt;= :time 
        ORDER BY trd_date_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":trid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4trdn26">
        <query.body value="
        SELECT Trends.*, catg_decocode
        FROM Trends, TrCategories
        WHERE trd_catgid = catgid
        AND trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4trdn26neo0615001">
        <query.body value="
        SELECT Trends.*, catg_decocode, TSH.* 
        FROM TrCategories, Trends
        LEFT JOIN TrStatesHisty TSH ON tsh_trid = trid
        WHERE trd_catgid = catgid
        AND tsh_evedate_tstamp IS NULL 
        AND trid = :trid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4trdn27">
        <query.body value="
        UPDATE TrStatesHisty 
        SET tsh_evedate = :time, tsh_evedate_tstamp = :tstamp 
        WHERE tsh_id = :tshid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":tshid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4trdn28">
        <query.body value="
        INSERT INTO TrStatesHisty (tsh_trid,tsh_state,tsh_evsdate,tsh_evsdate_tstamp) VALUES
        (:tsh_trid,:tsh_state,:time,:tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":tsh_trid" value="" />
            <qparam id=":tsh_state" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4trdn29">
        <query.body value="
        DELETE FROM TrStatesHisty 
        WHERE tsh_trid = :trid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    
<!-- ******** TREND ABO ******** -->

    <query id="qryl4tbon1">
        <query.body value="
        INSERT INTO TrAbo_Histy (trabo_trid,trabo_follower,trabo_datecrea_tstamp) VALUES 
        (:trabo_trid,:trabo_follower,:trabo_datecrea_tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trabo_trid" value="" />
            <qparam id=":trabo_follower" value="" />
            <qparam id=":trabo_datecrea_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon2">
        <query.body value="
        SELECT trabo_follower as trabo_uid  
        FROM TrAbo_Histy 
        WHERE trabo_trid = :trid  
        AND trabo_dateterm IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="On peut s'en servir pour des suggestions, vip, ou autres" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon3">
        <query.body value="
        SELECT count(*) as trabo  
        FROM TrAbo_Histy 
        WHERE trabo_trid = :trid
        AND trabo_dateterm IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon3_wtdlo">
        <query.body value="
        SELECT count(*) as trabo  
        FROM TrAbo_Histy, Proddb_Accounts 
        WHERE trabo_follower = pdaccid
        AND pdacc_todelete = 0
        AND trabo_trid = :trid
        AND trabo_dateterm IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon4">
        <query.body value="
        DELETE FROM TrAbo_Histy 
        WHERE trabo_follower = :uid
        AND trabo_trid = :trid 
        AND trabo_dateterm IS NULL ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4tbon5">
        <query.body value="
        SELECT *  
        FROM TrAbo_Histy 
        WHERE trabo_follower = :uid
        AND trabo_trid = :trid 
        AND trabo_dateterm IS NULL
        AND trabo_dateterm_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon6">
        <query.body value="
        DELETE FROM TrAbo_Histy 
        WHERE traboid = :traboid
        AND trabo_dateterm IS NULL ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id="traboid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon7">
        <query.body value="
        SELECT trabo_follower as trabo_uid  
        FROM TrAbo_Histy 
        WHERE trabo_trid = :trid  
        AND trabo_dateterm IS NULL
        ORDER BY trabo_datecrea_tstamp DESC
        LIMIT 10; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="On peut s'en servir pour des suggestions, vips, ou autres" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon7_wtdlo">
        <query.body value="
        SELECT trabo_follower as trabo_uid  
        FROM TrAbo_Histy, Proddb_Accounts 
        WHERE trabo_follower = pdaccid
        AND pdacc_todelete = 0
        AND trabo_trid = :trid  
        AND trabo_dateterm IS NULL
        ORDER BY trabo_datecrea_tstamp DESC
        LIMIT 10; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="On peut s'en servir pour des suggestions, vips, ou autres" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tbon8">
        <query.body value="
        UPDATE TrAbo_Histy 
        SET trabo_dateterm = CURRENT_TIMESTAMP(), trabo_dateterm_tstamp = :tstamp
        WHERE traboid = :traboid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":traboid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4tbon9">
        <query.body value="
        DELETE FROM TrAbo_Histy 
        WHERE trabo_trid = :trid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Utiliser principalement pour la suppression d'une Tendance" />
        <query.params.in>
            <qparam id=":trid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
<!-- ******** CATEGORIES SCOPE ******** -->
    
    <query id="qryl4ctgn1">
        <query.body value="
        SELECT * 
        FROM TrCategories
        WHERE catg_is_shortlist = 1
        AND catgid = :catgid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="A la vbeta1 seules les catÃ©gories affichÃ©es en shortlist sont autorisÃ©es." />
        <query.params.in>
            <qparam id=":catgid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ctgn2">
        <query.body value="
        SELECT * 
        FROM TrCategories
        WHERE catg_is_shortlist = 1 
        AND catg_decocode = :catg_decocode; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="A la vbeta1 seules les catÃ©gories affichÃ©es en shortlist sont autorisÃ©es." />
        <query.params.in>
            <qparam id=":catg_decocode" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ctgn3">
        <query.body value="
        SELECT * 
        FROM TrCategories
        WHERE catg_extends = 0; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4ctgn4">
        <query.body value="
        SELECT * 
        FROM TrCategories
        WHERE catg_is_shortlist = 1; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ******** RELATION SCOPE ******** -->
    <query id="qryl4reln1">
        <query.body value="
        SELECT TableRelations.*, RelStatus.*, RelEvents.*   
        FROM TableRelations, RelStatus, RelEvents 
        WHERE tbrel_relsts = relstsid  
        AND tbrel_relevt = rlevid
        AND tbrel_dateend IS NULL
        AND tbrel_dateend_tstamp IS NULL
        AND ( ( tbrel_acc_actor = :actor1 AND tbrel_acc_targ = :target1)
        OR ( tbrel_acc_actor = :target2 AND tbrel_acc_targ = :actor2 ) ); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":target1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":target2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln2">
        <query.body value="
        SELECT *   
        FROM Proddb_Accounts 
        WHERE pdaccid = :actor
        OR pdaccid = :target; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="On vÃ©rifie si les deux protagonistes pour le traitement relatif Ã  une RELATION existe." />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":target" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln3">
        <query.body value="
        INSERT INTO RelEvents (rlev_acc_actor,rlev_acc_targ,rlev_rev_type,rlev_dateadd_tstamp) VALUES 
        (:actor,:target,:rel_type,:tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":target" value="" />
            <qparam id=":rel_type" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln4">
        <query.body value="
        INSERT INTO TableRelations (tbrel_acc_actor, tbrel_acc_targ, tbrel_relsts, tbrel_isautobuild, tbrel_relevt, tbrel_datecrea, tbrel_datecrea_tstamp) VALUES 
        (:actor, :target, :rel_type, :isautobuild, :eventid, CURRENT_TIMESTAMP(), :tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":target" value="" />
            <qparam id=":rel_type" value="" />
            <qparam id=":isautobuild" value="" />
            <qparam id=":eventid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln5">
        <query.body value="
        SELECT * , relsts_code, relsts_fecode  
        FROM TableRelations, RelStatus 
        WHERE tbrel_relsts = relstsid 
        AND tbrel_id = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln6">
        <query.body value="
        SELECT DISTINCT *   
        FROM TableRelations
        WHERE ( tbrel_acc_actor = :actor OR tbrel_acc_targ = :actor )
        AND tbrel_relsts = :frd_code 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="Par mesure de prÃ©caution on laisse CALLER rentrer le code correspondant Ã  'frd'. Cela pour prÃ©venir le cas oÃ¹ son id Ã  changer." />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":frd_code" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln7">
        <query.body value="
        SELECT DISTINCT *   
        FROM Frdqt_Events, RelEvents
        WHERE frdrqt_ask_rlevid = rlevid
        AND ( ( rlev_acc_actor = :actor1 AND rlev_acc_targ = :target1 )
        OR ( rlev_acc_actor = :target2 AND rlev_acc_targ = :actor2 ) )
        AND frdrqt_answ_rlevid IS NULL 
        AND frdrqt_answ_datetime IS NULL
        AND frdrqt_answ_datetime_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":target1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":target2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln8">
        <query.body value="
        INSERT INTO Frdqt_Events (frdrqt_ask_rlevid, frdrqt_ask_rule_used) VALUES 
        (:eventid, :rule_used);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":eventid" value="" />
            <qparam id=":rule_used" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln9">
        <query.body value="
        SELECT *   
        FROM Frdqt_Events, RelEvents 
        WHERE frdrqt_ask_rlevid = rlevid
        AND frdrqtid = :frdrqt_eventid
        AND rlev_acc_actor = :actor
        AND rlev_acc_targ = :target
        AND frdrqt_answ_rlevid IS NULL  
        AND frdrqt_answ_datetime IS NULL
        AND frdrqt_answ_datetime_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":frdrqt_eventid" value="" />
            <qparam id=":actor" value="" />
            <qparam id=":target" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln10">
        <query.body value="
        UPDATE Frdqt_Events 
        SET frdrqt_answ_rlevid = :new_evtid, frdrqt_answ_datetime = CURRENT_TIMESTAMP(), frdrqt_answ_datetime_tstamp = :tstamp  
        WHERE frdrqt_ask_rlevid = :old_evtid
        AND frdrqtid = :frdrqtid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="Permet de signaler qu'une rÃ©ponse a Ã©tÃ© donnÃ©e Ã  la demande d'ajout en Amis" />
        <query.params.in>
            <qparam id=":frdrqtid" value="" />
            <qparam id=":old_evtid" value="" />
            <qparam id=":new_evtid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln11">
        <query.body value="
        UPDATE TableRelations  
        SET tbrel_dateend = :date, tbrel_dateend_tstamp = :tstamp, tbrel_relevt = :relevt  
        WHERE ( ( tbrel_acc_actor = :actor1 AND tbrel_acc_targ = :target1 )
        OR ( tbrel_acc_actor = :target2 AND tbrel_acc_targ = :actor2 ) )
        AND tbrel_dateend IS NULL
        AND tbrel_dateend_tstamp IS NULL ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="Permet d'annuler la relation active entre deux utilisateurs. On se base les identifiants des Protas " />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":target1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":target2" value="" />
            <qparam id=":tstamp" value="" />
			<qparam id=":date" value="" />
            <qparam id=":relevt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln12">
        <query.body value="
        SELECT *   
        FROM TableRelations
        WHERE ( ( tbrel_acc_actor = :actor1 AND tbrel_acc_targ = :target1 )
        OR ( tbrel_acc_actor = :target2 AND tbrel_acc_targ = :actor2 ) )
        AND tbrel_dateend IS NOT NULL 
        AND tbrel_dateend_tstamp IS NOT NULL
        ORDER BY tbrel_datecrea DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="RÃ©cupÃ©rer les anciennes relation entre deux protagonistes dans la limite indiquÃ©e." />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":target1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":target2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4reln13">
        <query.body value="
        DELETE FE.*, RE.* FROM Frdqt_Events FE, RelEvents RE
        WHERE FE.frdrqt_ask_rlevid = RE.rlevid
        AND rlev_acc_actor = :actor  
        AND rlev_acc_targ = :target 
        AND frdrqt_answ_rlevid IS NULL 
        AND frdrqt_answ_datetime IS NULL
        AND frdrqt_answ_datetime_tstamp IS NULL ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":target" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4reln14">
        <query.body value="
        SELECT *   
        FROM Vm_Tabrels
        WHERE tbrel_id = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reln15">
        <query.body value="
        INSERT INTO Vm_Tabrels (tbrel_id, tbrel_acc_actor, tbrel_acc_targ, tbrel_relsts, tbrel_cdate_tstamp, tbrel_edate_tstamp)
        SELECT tbrel_id, tbrel_acc_actor, tbrel_acc_targ, tbrel_relsts, tbrel_datecrea_tstamp, tbrel_dateend_tstamp
        FROM TableRelations
        WHERE tbrel_id = :id;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reln16">
        <query.body value="
        UPDATE Vm_Tabrels  
        SET tbrel_edate_tstamp = ( SELECT tbrel_dateend_tstamp FROM TableRelations WHERE tbrel_id = :id1 )
        WHERE tbrel_id = :id2 ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id1" value="" />
            <qparam id=":id2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4reln17">
        <query.body value="
        DELETE FROM Vm_Tabrels 
        WHERE tbrel_id = :id ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- Non testÃ©e + Non implÃ©mentÃ©e -->
    <query id="qryl4reln18">
        <query.body value="
        DELETE FROM Vm_Tabrels 
        WHERE ( tbrel_acc_actor = :uid1 OR tbrel_acc_targ = :uid2 ) ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="Permet de supprimer toutes les occurrences oÃ¹ l'utilisateur dÃ©signÃ© est acteur  ou target. Peut etre utile pour la suppression de Compte." />
        <query.params.in>
            <qparam id=":uid1" value="" />
            <qparam id=":uid2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ***** PROD_ACCOUNT **** -->
    
    <query id="qryl4pdaccn1">
        <query.body value="
        SELECT *   
        FROM Proddb_Accounts 
        WHERE pdacc_eid = :acc_eid ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":acc_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn2">
        <query.body value="
        SELECT *   
        FROM Proddb_Accounts 
        WHERE pdaccid = :accid ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn3">
        <query.body value="
        INSERT INTO Proddb_Accounts (pdaccid, pdacc_gid, pdacc_eid, pdacc_upsd, pdacc_ufn, pdacc_gdr, pdacc_ucityid, pdacc_ucity_fn, pdacc_nocity, pdacc_ucnid, pdacc_ucn_fn, pdacc_udl, pdacc_datecrea, pdacc_datecrea_tstamp, pdacc_capital) VALUES 
        (:accid, :acc_gid, :acc_eid, :acc_upsd, :acc_ufn, :acc_ugdr, :acc_ucityid, :acc_ucity_fn, :acc_nocity, :acc_ucnid, :acc_ucn_fn, :acc_udl, :acc_datecrea, :acc_datecrea_tstamp, :acc_capital);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":acc_gid" value="" />
            <qparam id=":acc_eid" value="" />
            <qparam id=":acc_upsd" value="" />
            <qparam id=":acc_ufn" value="" />
            <qparam id=":acc_ugdr" value="" />
            <qparam id=":acc_ucityid" value="" />
            <qparam id=":acc_ucity_fn" value="" />
            <qparam id=":acc_nocity" value="" />
            <qparam id=":acc_ucnid" value="" />
            <qparam id=":acc_ucn_fn" value="" />
            <qparam id=":acc_udl" value="" />
            <qparam id=":acc_datecrea" value="" />
            <qparam id=":acc_datecrea_tstamp" value="" />
            <qparam id=":acc_capital" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn4">
        <query.body value="
        SELECT *   
        FROM Trends 
        WHERE trd_owner = :accid 
        ORDER BY trd_datecrea DESC; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn5">
        <query.body value="
        SELECT *   
        FROM TrAbo_Histy  
        WHERE trabo_follower = :accid 
        AND trabo_dateterm IS NULL
        AND trabo_dateterm_tstamp IS NULL;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out> 
    </query>
    
    <query id="qryl4pdaccn5_wopt_tdl">
        <query.body value="
        SELECT trabo_histy.*   
        FROM trabo_histy, trends, proddb_accounts  
        WHERE trabo_trid = trid
        AND trd_owner = pdaccid
        AND trabo_follower = :accid 
        AND pdacc_todelete = 0
        AND trabo_dateterm IS NULL
        AND trabo_dateterm_tstamp IS NULL ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn6">
        <query.body value="
        SELECT count(*) as artnb   
        FROM Articles  
        WHERE art_accid = :accid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn6neo0815001">
        <query.body value="
        SELECT count(*) as artnb 
        FROM Articles
        LEFT JOIN ArtStatesHisty ON ash_aid = artid  
        WHERE ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        ) 
        AND art_accid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn7">
        <query.body value="
        UPDATE Proddb_Accounts  
        SET pdacc_ctw_dsma = :action, pdacc_ctw_moddate = CURRENT_TIMESTAMP(), pdacc_ctw_moddate_tstamp = :tstamp 
        WHERE pdaccid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":action" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn8">
        <query.body value="
        SELECT * 
        FROM Articles 
        WHERE art_accid = :accid
        AND artid NOT IN ( SELECT trart_artid FROM Articles, TrArticles WHERE artid = trart_artid AND art_accid = :accid2  )
        ORDER BY art_cdate_tstamp DESC 
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":accid2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	<query id="qryl4pdaccn8neo0815001">
        <query.body value="
        SELECT * 
        FROM Articles 
        LEFT JOIN ArtStatesHisty ON ash_aid = artid 
        WHERE ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        ) 
        AND art_accid = :accid 
        AND artid NOT IN ( SELECT trart_artid FROM Articles, TrArticles WHERE artid = trart_artid AND art_accid = :accid2  ) 
        ORDER BY art_cdate_tstamp DESC 
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":accid2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn9">
        <query.body value="
        SELECT Articles.* , trid, trd_eid, trd_title, trd_title_href 
        FROM Articles, TrArticles, Trends 
        WHERE artid = trart_artid
        AND trart_trid = trid
        AND art_accid = :accid
        ORDER BY art_cdate_tstamp DESC 
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="RÃ©cupÃ¨re tous les Articles d'un utilisateur dans la limite de x. On ne rÃ©cupÃ¨re que les Articles de type TR" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	<query id="qryl4pdaccn9neo0815001">
        <query.body value="
        SELECT Articles.* , trid, trd_eid, trd_title, trd_title_href 
        FROM Trends, TrArticles, Articles 
        LEFT JOIN ArtStatesHisty ON ash_aid = artid 
        WHERE artid = trart_artid
        AND trart_trid = trid
        AND ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        ) 
        AND trart_trid NOT IN ( SELECT tsh_trid FROM TrStatesHisty WHERE tsh_evedate_tstamp IS NULL )
        AND trd_owner NOT IN ( SELECT pdaccid FROM Proddb_Accounts WHERE pdacc_todelete != 0 )
        AND art_accid = :accid
        ORDER BY art_cdate_tstamp DESC 
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="RÃ©cupÃ¨re tous les Articles d'un utilisateur dans la limite de x. On ne rÃ©cupÃ¨re que les Articles de type TR" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn10">
        <query.body value="
        SELECT * 
        FROM Proddb_Accounts 
        WHERE pdacc_upsd = :upsd; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":upsd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- 
        wacrcso : WithACcuReteCaSeOption : On recherche EXACTEMENT selon la chaine passÃ©.
        Il faut cependant que CALLER transforme la chaine sous un forma LOWER.
        [ NP 02-04-15] @BOR 
        J'ai rÃ©ussi Ã  tatons. La solution Ã©tait de convertir les deux Ã©lÃ©ments en BINARY.
        La version avec COLLATE utf8_bin ne marchait que lorsqu'on ne passait pas par PDO.    
    -->
    <query id="qryl4pdaccn10_wacrcso">
        <query.body value="
        SELECT * 
        FROM Proddb_Accounts 
        WHERE BINARY LOWER(`pdacc_upsd`) LIKE BINARY :upsd; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":upsd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn11">
        <query.body value="
        UPDATE Proddb_Accounts 
        SET pdacc_gid = :acc_gid, 
        pdacc_upsd = :acc_upsd, 
        pdacc_ufn = :acc_ufn, 
        pdacc_ucityid = :acc_ucityid, 
        pdacc_ucity_fn = :acc_ucity_fn, 
        pdacc_nocity = :acc_nocity, 
        pdacc_ucnid = :acc_ucnid, 
        pdacc_ucn_fn = :acc_ucn_fn, 
        pdacc_udl = :acc_udl,  
        pdacc_datecrea = :acc_datecrea, 
        pdacc_datecrea_tstamp = :acc_datecrea_tstamp,
        pdacc_capital = :acc_capital
        WHERE pdaccid = :accid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":acc_gid" value="" />
            <qparam id=":acc_upsd" value="" />
            <qparam id=":acc_ufn" value="" />
            <qparam id=":acc_ucityid" value="" />
            <qparam id=":acc_ucity_fn" value="" />
            <qparam id=":acc_nocity" value="" />
            <qparam id=":acc_ucnid" value="" />
            <qparam id=":acc_ucn_fn" value="" />
            <qparam id=":acc_udl" value="" />
            <qparam id=":acc_datecrea" value="" />
            <qparam id=":acc_datecrea_tstamp" value="" />
            <qparam id=":acc_capital" value="" />
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <!-- [29-08-14] OLD : Trop complexe Ã  gÃ©rer
    <query id="qryl4pdaccn12">
        <query.body value="
        SELECT TableRelations.*, ACT.pdaccid as ACT_pdaccid, ACT.pdacc_eid as ACT_pdacc_eid, ACT.pdacc_upsd as ACT_pdacc_upsd, ACT.pdacc_ufn as ACT_pdacc_ufn, ACT.pdacc_uppic as ACT_pdacc_uppic, ACT.pdacc_uppicid as ACT_pdacc_uppicid, ACT.pdacc_ucityid as ACT_pdacc_ucityid, ACT.pdacc_ucity_fn as ACT_pdacc_ucity_fn, ACT.pdacc_ucnid as ACT_pdacc_ucnid, ACT.pdacc_ucn_fn as ACT_pdacc_ucn_fn, ACT.pdacc_profilbio as ACT_pdacc_profilbio, 
        TRG.pdaccid, TRG.pdacc_eid, TRG.pdacc_upsd, TRG.pdacc_ufn, TRG.pdacc_uppic, TRG.pdacc_uppicid, TRG.pdacc_ucityid, TRG.pdacc_ucity_fn, TRG.pdacc_ucnid, TRG.pdacc_ucn_fn, TRG.pdacc_profilbio
        FROM TableRelations, Proddb_Accounts as ACT, Proddb_Accounts as TRG 
        WHERE tbrel_acc_actor = ACT.pdaccid 
        AND tbrel_acc_targ = TRG.pdaccid 
        AND ( ( tbrel_relsts = 1 AND tbrel_acc_targ = :curr_user1 ) OR ( tbrel_relsts = 2  AND ( tbrel_acc_targ = :curr_user2 OR tbrel_acc_actor = :curr_user3 ) ) ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="RÃ©cupÃ©rer les informations permettant de crÃ©er une liste de personnes qui suivent un utilisateur (Target). 'D_FOLW' fait qu'il faudra finir le traitement au niveau de la couche Metier." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    -->
    
    <!-- [29-08-14] OLD : Trop complexe Ã  gÃ©rer
    <query id="qryl4pdaccn13">
        <query.body value="
        SELECT TableRelations.*, ACT.pdaccid as ACT_pdaccid, ACT.pdacc_eid as ACT_pdacc_eid, ACT.pdacc_upsd as ACT_pdacc_upsd, ACT.pdacc_ufn as ACT_pdacc_ufn, ACT.pdacc_uppic as ACT_pdacc_uppic, ACT.pdacc_uppicid as ACT_pdacc_uppicid, ACT.pdacc_ucityid as ACT_pdacc_ucityid, ACT.pdacc_ucity_fn as ACT_pdacc_ucity_fn, ACT.pdacc_ucnid as ACT_pdacc_ucnid, ACT.pdacc_ucn_fn as ACT_pdacc_ucn_fn, ACT.pdacc_profilbio as ACT_pdacc_profilbio,     
        TRG.pdaccid, TRG.pdacc_eid, TRG.pdacc_upsd, TRG.pdacc_ufn, TRG.pdacc_uppic, TRG.pdacc_uppicid, TRG.pdacc_ucityid, TRG.pdacc_ucity_fn, TRG.pdacc_ucnid, TRG.pdacc_ucn_fn, TRG.pdacc_profilbio
        FROM TableRelations, Proddb_Accounts as ACT, Proddb_Accounts as TRG 
        WHERE tbrel_acc_actor = ACT.pdaccid 
        AND tbrel_acc_targ = TRG.pdaccid 
        AND ( ( tbrel_relsts = 1 AND tbrel_acc_actor = :curr_user1 )  OR ( tbrel_relsts = 2  AND ( tbrel_acc_targ = :curr_user2 OR tbrel_acc_actor = :curr_user3 ) ) ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="RÃ©cupÃ©rer les informations permettant de crÃ©er une liste de personnes que suit un utilisateur (Actor). 'D_FOLW' fait qu'il faudra finir le traitement au niveau de la couche Metier." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    -->
    <query id="qryl4pdaccn12">
        <query.body value="
        SELECT TableRelations.*
        FROM TableRelations 
        WHERE ( ( tbrel_relsts = 1 AND tbrel_acc_targ = :curr_user1 ) OR ( tbrel_relsts = 2  AND ( tbrel_acc_targ = :curr_user2 OR tbrel_acc_actor = :curr_user3 ) ) ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="RÃ©cupÃ©rer les informations permettant de crÃ©er une liste de personnes qui suivent un utilisateur (Target). 'D_FOLW' fait qu'il faudra finir le traitement au niveau de la couche Metier." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn12_cnver"> 
        <query.body value="
        SELECT count(*) as followers
        FROM TableRelations 
        WHERE ( ( tbrel_relsts = 1 AND tbrel_acc_targ = :curr_user1 ) OR ( tbrel_relsts = 2  AND ( tbrel_acc_targ = :curr_user2 OR tbrel_acc_actor = :curr_user3 ) ) ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="RÃ©cupÃ¨re le nombre de personnes qui suivent l'utilsiateur de rÃ©fÃ©rence. Ce nombre prend en compte les cas 'D_FOLW'." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4pdaccn12_cnver_wtdlo">
        <query.body value="
        SELECT count(*) as followers
        FROM TableRelations 
        INNER JOIN Proddb_Accounts PA1 ON tbrel_acc_actor = PA1.pdaccid
        INNER JOIN Proddb_Accounts PA2 ON tbrel_acc_targ = PA2.pdaccid
        WHERE ( 
            ( tbrel_relsts = 1 AND tbrel_acc_targ = :curr_user1 AND PA1.pdacc_todelete = 0 ) 
            OR 
            ( 
                tbrel_relsts = 2  
                AND (
                    ( tbrel_acc_targ = :curr_user2 AND PA1.pdacc_todelete = 0 )
                    OR ( tbrel_acc_actor = :curr_user3 AND PA2.pdacc_todelete = 0 ) 
                )
            ) 
        ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="RÃ©cupÃ¨re le nombre de personnes qui suivent l'utilsiateur de rÃ©fÃ©rence. Ce nombre prend en compte les cas 'D_FOLW'." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn13">
        <query.body value="
        SELECT TableRelations.*
        FROM TableRelations
        WHERE ( ( tbrel_relsts = 1 AND tbrel_acc_actor = :curr_user1 )  OR ( tbrel_relsts = 2  AND ( tbrel_acc_targ = :curr_user2 OR tbrel_acc_actor = :curr_user3 ) ) ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="RÃ©cupÃ©rer les informations permettant de crÃ©er une liste de personnes que suit un utilisateur (Actor). 'D_FOLW' fait qu'il faudra finir le traitement au niveau de la couche Metier." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn13_cnver">
        <query.body value="
        SELECT count(*) as following
        FROM TableRelations
        WHERE ( ( tbrel_relsts = 1 AND tbrel_acc_actor = :curr_user1 )  OR ( tbrel_relsts = 2  AND ( tbrel_acc_targ = :curr_user2 OR tbrel_acc_actor = :curr_user3 ) ) ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="RÃ©cupÃ¨re le nombre de personnes suivies par l'utilsiateur de rÃ©fÃ©rence. Ce nombre prend en compte les cas 'D_FOLW'." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn13_cnver_wtdlo">
        <query.body value="
        SELECT count(*) as following
        FROM TableRelations
        INNER JOIN Proddb_Accounts PA1 ON tbrel_acc_actor = PA1.pdaccid
        INNER JOIN Proddb_Accounts PA2 ON tbrel_acc_targ = PA2.pdaccid
        WHERE ( 
            ( tbrel_relsts = 1 AND tbrel_acc_actor = :curr_user1 AND PA2.pdacc_todelete = 0 )  
            OR 
            ( 
                tbrel_relsts = 2  AND 
                ( ( tbrel_acc_targ = :curr_user2 AND PA1.pdacc_todelete = 0 ) OR ( tbrel_acc_actor = :curr_user3 AND PA2.pdacc_todelete = 0 ) )
            ) 
        ) 
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="RÃ©cupÃ¨re le nombre de personnes suivies par l'utilsiateur de rÃ©fÃ©rence. Ce nombre prend en compte les cas 'D_FOLW'." />
        <query.params.in>
            <qparam id=":curr_user1" value="" />
            <qparam id=":curr_user2" value="" />
            <qparam id=":curr_user3" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn14">
        <query.body value="
        SELECT frdrqtid, frdrqt_ask_rule_used, far_code, rlev_datecrea, rlev_dateadd_tstamp, rlev_rev_type, pdaccid, pdacc_gid, pdacc_eid, pdacc_upsd, pdacc_ufn, pdacc_ucityid, pdacc_ucity_fn, pdacc_ucnid, pdacc_ucn_fn, pdacc_udl 
        FROM Frdqt_Events, Frdrqt_Ask_Rules, Proddb_Accounts, Relevents 
        WHERE Frdqt_Events.frdrqt_ask_rlevid = RelEvents.rlevid 
        AND Frdqt_Events.frdrqt_ask_rule_used = Frdrqt_Ask_Rules.farid 
        AND rlev_acc_actor = pdaccid
        AND frdrqt_answ_datetime IS NULL 
        AND frdrqt_answ_datetime_tstamp IS NULL
        AND frdrqt_answ_rlevid IS NULL
        AND rlev_acc_targ = :actor; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="RÃ©cupÃ©rer les informations permettant de crÃ©er une liste des demandes d'amis pour l'utilisateur dÃ©signÃ©. L'utilisateur est ici la cible." />
        <query.params.in>
            <qparam id=":actor" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn15">
        <query.body value="
        SELECT tbrel_id, tbrel_acc_actor, tbrel_acc_targ, tbrel_datecrea, tbrel_datecrea_tstamp, Proddb_Accounts.*
        FROM TableRelations, Proddb_Accounts 
        WHERE ( ( tbrel_acc_actor = :actor1 AND tbrel_acc_targ = pdaccid )
        OR ( ( tbrel_acc_targ = :actor2 AND tbrel_acc_actor = pdaccid ) ) )
        AND tbrel_relsts = 3
        AND tbrel_dateend IS NULL 
        AND tbrel_dateend_tstamp IS NULL; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="RÃ©cupÃ©rer les informations permettant de crÃ©er une liste contenant les amis pour l'utilisateur dÃ©signÃ©." />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn16">
        <query.body value="
        UPDATE Proddb_Accounts  
        SET pdacc_profilbio = :bio 
        WHERE pdaccid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":bio" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn17">
        <query.body value="
        SELECT art_eid
        FROM TrArticles, Articles
        WHERE trart_artid = artid
        AND art_accid = :accid
        AND art_eid != :last_artid
        AND art_cdate_tstamp &lt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Les articles TREND anterieurs Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4pdaccn17neo0815001">
        <query.body value="
        SELECT art_eid
        FROM Trends, TrArticles, Articles
        LEFT JOIN ArtStatesHisty ON ash_aid = artid  
        WHERE trart_artid = artid
        AND trart_trid = trid
        AND ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        ) 
        AND trart_trid NOT IN ( SELECT tsh_trid FROM TrStatesHisty WHERE tsh_evedate_tstamp IS NULL )
        AND trd_owner NOT IN ( SELECT pdaccid FROM Proddb_Accounts WHERE pdacc_todelete != 0 )
        AND art_accid = :accid
        AND art_eid != :last_artid
        AND art_cdate_tstamp &lt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Les articles TREND anterieurs Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn18">
        <query.body value="
        SELECT art_eid
        FROM Articles
        WHERE art_accid = :accid
        AND art_eid != :last_artid
        AND artid NOT IN (SELECT trart_artid FROM TrArticles)
        AND art_cdate_tstamp &lt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Les articles std anterieurs Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4pdaccn18neo0815001">
        <query.body value="
        SELECT art_eid
        FROM Articles
         LEFT JOIN ArtStatesHisty ON ash_aid = artid  
        WHERE ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        )
        AND art_accid = :accid
        AND art_eid != :last_artid
        AND artid NOT IN (SELECT trart_artid FROM TrArticles)
        AND art_cdate_tstamp &lt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Les articles std anterieurs Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn19">
        <query.body value="
        SELECT art_eid
        FROM TrArticles, Articles
        WHERE trart_artid = artid
        AND art_accid = :accid
        AND art_eid != :last_artid
        AND art_cdate_tstamp &gt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Les articles TREND ULTERIEURS Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4pdaccn19neo0815001">
        <query.body value="
        SELECT art_eid
        FROM Trends, TrArticles, Articles
        LEFT JOIN ArtStatesHisty ON ash_aid = artid  
        WHERE trart_artid = artid
        AND trart_trid = trid
        AND ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        ) 
        AND trart_trid NOT IN ( SELECT tsh_trid FROM TrStatesHisty WHERE tsh_evedate_tstamp IS NULL )
        AND trd_owner NOT IN ( SELECT pdaccid FROM Proddb_Accounts WHERE pdacc_todelete != 0 )
        AND art_accid = :accid
        AND art_eid != :last_artid
        AND art_cdate_tstamp &gt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Les articles TREND ULTERIEURS Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn20">
        <query.body value="
        SELECT art_eid
        FROM Articles
        WHERE art_accid = :accid
        AND art_eid != :last_artid
        AND artid NOT IN (SELECT trart_artid FROM TrArticles)
        AND art_cdate_tstamp &gt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="Les articles std ULTERIEURS Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4pdaccn20neo0815001">
        <query.body value="
        SELECT art_eid
        FROM Articles
        LEFT JOIN ArtStatesHisty ON ash_aid = artid  
        WHERE ( 
            ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
            AND ash_evedate_tstamp IS NULL
        ) 
        AND art_accid = :accid
        AND art_eid != :last_artid
        AND artid NOT IN (SELECT trart_artid FROM TrArticles)
        AND art_cdate_tstamp &gt;= :last_time
        ORDER BY art_cdate_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Les articles std ULTERIEURS Ã  celui pivot pour l'Article dÃ©signÃ© et dans la limte mentionnÃ©e" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":last_artid" value="" />
            <qparam id=":last_time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn21">
        <query.body value="
        SELECT SUM(capor_amount) as capital
        FROM CapOper
        WHERE capor_target = :accid ; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Calcule le capital dun compte en prennant en compte les opÃ©rations oÃ¹ il apparait Ãªtre le destinataire." />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	<query id="qryl4pdaccn21neo0815001">
        <query.body value="
        SELECT IFNULL(SUM(capor_amount),0) as capital 
        FROM CapOper Co, Prod_Events EV 
		INNER JOIN Table_Evals TE ON TE.tbevl_start_evtid = EV.pdevtid 
		INNER JOIN Articles ART ON TE.tbevl_artid = ART.artid 
        LEFT JOIN Artstateshisty ASH ON ASH.ash_aid = ART.artid 
		WHERE CO.capor_evtid = EV.pdevtid 
        AND ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
        AND ash_evedate_tstamp IS NULL 
        AND capor_target = :accid ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Calcule le capital d'un compte en prennant en compte les opÃ©rations oÃ¹ il apparait comme destinataire." />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	<query id="qryl4pdaccn21neo0915001">
        <query.body value="
        SELECT IFNULL(SUM(capor_amount),0) as capital 
        FROM CapOper Co, Proddb_Accounts PA, Prod_Events EV 
		INNER JOIN Table_Evals TE ON TE.tbevl_start_evtid = EV.pdevtid 
		INNER JOIN Articles ART ON TE.tbevl_artid = ART.artid 
        LEFT JOIN Artstateshisty ASH ON ASH.ash_aid = ART.artid 
		WHERE CO.capor_evtid = EV.pdevtid 
        AND pdevt_acc_actor = pdaccid
        AND pdacc_todelete = 0
        AND ( ash_state NOT IN (2,3,4,5) OR ash_state IS NULL )
        AND ash_evedate_tstamp IS NULL 
        AND capor_target = :accid ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Calcule le capital d'un compte en prennant en compte les opÃ©rations oÃ¹ il apparait comme destinataire. Le Compte de l'acteur doit Ãªtre actif." />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn22">
        <query.body value="
        SELECT *
        FROM VM_Tabrels
        WHERE (
            ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :actor1 OR tbrel_acc_targ = :actor2 ) )
            OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :actor3 OR tbrel_acc_targ = :actor4 ) ) 
            OR ( tbrel_relsts = 1 AND tbrel_acc_actor = :actor5  )
        )
        AND tbrel_edate_tstamp IS NULL ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":actor3" value="" />
            <qparam id=":actor4" value="" />
            <qparam id=":actor5" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn22_wopt_tdl">
        <query.body value="
        SELECT VM_Tabrels.*
        FROM VM_Tabrels
        INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
        INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
        WHERE (
            ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :actor1 OR tbrel_acc_targ = :actor2 ) )
            OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :actor3 OR tbrel_acc_targ = :actor4 ) ) 
            OR ( tbrel_relsts = 1 AND tbrel_acc_actor = :actor5  )
        )
        AND tbrel_edate_tstamp IS NULL 
        AND PA_A.pdacc_todelete = 0
        AND PA_T.pdacc_todelete = 0 ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":actor3" value="" />
            <qparam id=":actor4" value="" />
            <qparam id=":actor5" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn23">
        <query.body value="
        UPDATE Proddb_Accounts  
        SET pdacc_todelete = :istodel 
        WHERE pdaccid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":istodel" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn24">
        <query.body value="
        UPDATE Proddb_Accounts 
        SET pdacc_gid = :acc_gid, 
        pdacc_upsd = :acc_upsd, 
        pdacc_ufn = :acc_ufn, 
        pdacc_gdr = :acc_gdr,
        pdacc_ucityid = :acc_ucityid, 
        pdacc_ucity_fn = :acc_ucity_fn, 
        pdacc_ucnid = :acc_ucnid, 
        pdacc_ucn_fn = :acc_ucn_fn, 
        pdacc_udl = :acc_udl
        WHERE pdaccid = :accid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":acc_gid" value="" />
            <qparam id=":acc_upsd" value="" />
            <qparam id=":acc_ufn" value="" />
            <qparam id=":acc_gdr" value="" />
            <qparam id=":acc_ucityid" value="" />
            <qparam id=":acc_ucity_fn" value="" />
            <qparam id=":acc_ucnid" value="" />
            <qparam id=":acc_ucn_fn" value="" />
            <qparam id=":acc_udl" value="" />
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pdaccn25">
        <query.body value="
        UPDATE Srh_Profiles 
        SET srh_pfl_ufn = :ufn, 
        srh_pfl_upsd = :upsd, 
        srh_pfl_ppic = :ppic, 
        srh_pfl_ufols = :ufols,
        srh_pfl_ucap = :ucap
        WHERE srh_pfl_uid = :uid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ufn" value="" />
            <qparam id=":upsd" value="" />
            <qparam id=":ppic" value="" />
            <qparam id=":ufols" value="" />
            <qparam id=":ucap" value="" />
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn26">
        <query.body value="
        UPDATE Srh_Trends 
        SET srh_tr_owfn = :ufn, 
        srh_tr_owpsd = :upsd 
        WHERE srh_tr_owid = :uid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ufn" value="" />
            <qparam id=":upsd" value="" />
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn27">
        <query.body value="
        UPDATE VM_Articles_IML 
        SET art_ogid = :ugid,
        art_ofn = :ufn, 
        art_opsd = :upsd, 
        art_oppicid = :ppicid,
        art_oppic_rpath = :ppic,
        art_todel = :todel
        WHERE art_oid = :uid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ugid" value="" />
            <qparam id=":ufn" value="" />
            <qparam id=":upsd" value="" />
            <qparam id=":ppicid" value="" />
            <qparam id=":ppic" value="" />
            <qparam id=":todel" value="" />
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn28">
        <query.body value="
        UPDATE VM_Articles_ITR 
        SET art_ogid = :ugid,
        art_ofn = :ufn, 
        art_opsd = :upsd, 
        art_oppicid = :ppicid,
        art_oppic_rpath = :ppic,
        art_todel = :todel
        WHERE art_oid = :uid;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ugid" value="" />
            <qparam id=":ufn" value="" />
            <qparam id=":upsd" value="" />
            <qparam id=":ppicid" value="" />
            <qparam id=":ppic" value="" />
            <qparam id=":todel" value="" />
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn29">
        <query.body value="
        UPDATE Proddb_Accounts  
        SET pdacc_website = :wbst 
        WHERE pdaccid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":wbst" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn30">
        <query.body value="
        UPDATE Srh_Profiles 
        SET srh_pfl_ppic = :prpath
        WHERE srh_pfl_uid = :uid;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":prpath" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4pdaccn31">
        <query.body value="
        UPDATE Proddb_Accounts  
        SET pdacc_todelete = :istodel, pdacc_tdl_deaddate = :date, pdacc_tdl_deaddate_tstamp = :tstamp 
        WHERE pdaccid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":istodel" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdaccn32">
        <query.body value="
        UPDATE Proddb_Accounts  
        SET pdacc_todelete = 2 
        WHERE pdacc_todelete = 1
        AND pdacc_tdl_deaddate_tstamp &lt;= :now_tstamp; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":now_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ******** PRODUCT EVENT SCOPE ******** -->
    
    <query id="qryl4pdevtn1">
        <query.body value="
        SELECT PE.*, PET.evtyp_code, PET.evtyp_code_fe, PET.evtyp_lib, CR.caprl_amount as amount, PA.pdaccid uid, PA.pdacc_gid ugid, PA.pdacc_eid ueid, PA.pdacc_upsd upsd, PA.pdacc_ufn ufn
        FROM Prod_Events as PE, Proddb_Accounts as PA, Prod_EventTypes as PET  
        INNER JOIN CapRules as CR 
        ON CR.caprl_ev_type = PET.evtypid 
        WHERE PE.pdevt_acc_actor = PA.pdaccid
        AND PE.pdevt_ev_type = PET.evtypid
        AND PE.pdevtid = :evtid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":evtid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pdevtn2">
        <query.body value="
        INSERT INTO Prod_Events (pdevt_acc_actor, pdevt_ev_type, pdevt_is_autobuild, pdevt_datecrea, pdevt_datecrea_tstamp) VALUES 
        (:actor, :evtype, :ev_is_ab, CURRENT_TIMESTAMP(), :tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":evtype" value="" />
            <qparam id=":ev_is_ab" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******** CAPITAL_OPERATIONS SCOPE ******** -->
    
    <query id="qryl4capern1">
        <query.body value="
        INSERT INTO CapOper (capor_amount, capor_target, capor_evtid) VALUES 
        (:amount, :target, :eventid);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":amount" value="" />
            <qparam id=":target" value="" />
            <qparam id=":eventid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4capern2">
        <query.body value="
        SELECT CO.*, PE.*, RC.pdaccid actor_uid, RC.pdacc_gid actor_ugid, RC.pdacc_eid actor_ueid, RC.pdacc_upsd actor_upsd, RC.pdacc_ufn actor_ufn,
        TG.pdaccid recept_uid, TG.pdacc_gid recept_ugid, TG.pdacc_eid recept_ueid, TG.pdacc_upsd recept_upsd, TG.pdacc_ufn recept_ufn
        FROM CapOper as CO, Proddb_Accounts as TG, Prod_Events as PE, Proddb_Accounts as RC  
        WHERE CO.capor_target = RC.pdaccid
        AND CO.capor_evtid = PE.pdevtid 
        AND PE.pdevt_acc_actor = TG.pdaccid
        AND CO.caporid = :operid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":operid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4capern3">
        <query.body value="
        UPDATE Proddb_Accounts    
        SET pdacc_capital = :capital 
        WHERE pdaccid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":capital" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******** EVALUATIONS SCOPE ******** -->
    <query id="qryl4evaln1">
        <query.body value="
        SELECT TE.*, ET.evltp_code, ET.evltp_code_fe as evtype_fe, evltp_lib as eval_lib, art_eid  
        FROM Table_Evals TE, EvalTypes ET, Prod_Events PE, Articles AR 
        WHERE TE.tbevl_start_evtid = PE.pdevtid 
        AND TE.tbevl_evltpid = ET.evltpid 
        AND TE.tbevl_artid = AR.artid
        AND TE.tbevl_end_evtid IS NULL 
        AND TE.tbevl_artid = :artid
        AND PE.pdevt_acc_actor = :actor; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln2">
        <query.body value="
        UPDATE Table_Evals   
        SET tbevl_end_evtid = :end_evtid  
        WHERE tbevlid = :tbevlid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":end_evtid" value="" />
            <qparam id=":tbevlid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln3">
        <query.body value="
        INSERT INTO Table_Evals (tbevl_artid, tbevl_evltpid, tbevl_start_evtid, is_autobuild) VALUES 
        (:artid, :evltpid, :start_evtid, :eval_is_ab);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":evltpid" value="" />
            <qparam id=":start_evtid" value="" />
            <qparam id=":eval_is_ab" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln4">
        <query.body value="
        SELECT TE.*, ET.evltp_code, ET.evltp_code_fe as evtype_fe, evltp_lib as eval_lib, art_eid  
        FROM Table_Evals TE, EvalTypes ET, Prod_Events PE, Articles AR 
        WHERE TE.tbevl_start_evtid = PE.pdevtid 
        AND TE.tbevl_evltpid = ET.evltpid 
        AND TE.tbevl_artid = AR.artid
        AND TE.tbevl_end_evtid IS NULL 
        AND TE.tbevlid = :tbevlid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":tbevlid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln4_wtdlo">
        <query.body value="
        SELECT TE.*, ET.evltp_code, ET.evltp_code_fe as evtype_fe, evltp_lib as eval_lib, art_eid  
        FROM Table_Evals TE, EvalTypes ET, Prod_Events PE, Proddb_Accounts PA, Articles AR 
        WHERE TE.tbevl_start_evtid = PE.pdevtid 
        AND TE.tbevl_evltpid = ET.evltpid 
        AND TE.tbevl_artid = AR.artid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND pdacc_todelete = 0
        AND TE.tbevl_end_evtid IS NULL 
        AND TE.tbevlid = :tbevlid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":tbevlid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4evaln5">
        <query.body value="
        SELECT count(pdaccid) as eval_tot 
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA   
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND TE.tbevl_evltpid != 4
        AND TE.tbevl_end_evtid IS NULL 
        AND TE.tbevl_artid = :artid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="Le nombre total de Comptes ayant evaluer (actif) l'Article" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln5_wtdlo">
        <query.body value="
        SELECT count(pdaccid) as eval_tot 
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA   
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND pdacc_todelete = 0
        AND TE.tbevl_evltpid != 4
        AND TE.tbevl_end_evtid IS NULL 
        AND TE.tbevl_artid = :artid; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":artid" value="Le nombre total de Comptes ayant evaluer (actif) l'Article" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4evaln6">
        <query.body value="
        SELECT count(tbevlid) as evltp_nb
        FROM Table_Evals TE   
        WHERE TE.tbevl_end_evtid IS NULL 
        AND tbevl_evltpid = :evltpid
        AND TE.tbevl_artid = :artid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="Nombre d'evaluations pour un Article selon l'Evaluationde type fourni" />
        <query.params.in>
            <qparam id=":evltpid" value="" />
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln6_wtdlo">
        <query.body value="
        SELECT count(tbevlid) as evltp_nb
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA   
        WHERE tbevl_start_evtid = pdevtid
        AND pdevt_acc_actor = pdaccid
		AND pdacc_todelete = 0
        AND TE.tbevl_end_evtid IS NULL 
        AND tbevl_evltpid = :evltpid
        AND TE.tbevl_artid = :artid; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Nombre d'evaluations pour un Article selon l'Evaluationde type fourni" />
        <query.params.in>
            <qparam id=":evltpid" value="" />
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4evaln7">
        <query.body value="
        SELECT SUM(capor_amount) as art_evalval
        FROM Table_Evals TE, Prod_Events PE
        INNER JOIN CapOper CO ON CO.capor_evtid = PE.pdevtid    
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND tbevl_artid = :artid
        GROUP BY tbevl_artid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="Calcul la valeur de l'Article en termes de points" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln7_wtdlo">
        <query.body value="
        SELECT SUM(capor_amount) as art_evalval
        FROM Table_Evals TE, Proddb_Accounts PA, Prod_Events PE
        INNER JOIN CapOper CO ON CO.capor_evtid = PE.pdevtid    
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND pdacc_todelete = 0
        AND tbevl_artid = :artid
        GROUP BY tbevl_artid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="Calcul la valeur de l'Article en termes de points" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4evaln8">
        <query.body value="
        SELECT DISTINCT pdaccid as uid, pdacc_gid as ugid, pdacc_eid as ueid, pdacc_upsd as upsd, pdacc_ufn as ufn, evltp_code, evltp_code_fe, pdevt_datecrea_tstamp as evtdate  
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA, EvalTypes EV  
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND TE.tbevl_evltpid = EV.evltpid
        AND EV.evltpid != 4
        AND (
            ( pdacc_ucityid = :ucityid1 AND pdacc_udl = :udl1 )
            OR ( pdacc_ucnid = :ucnid1 AND pdacc_udl = :udl2 )
            OR ( pdacc_ucityid = :ucityid2 AND pdacc_udl != :udl3 )
            OR ( pdacc_ucnid = :ucnid2 AND pdacc_udl != :udl4 )
            OR ( pdacc_udl = :udl5 AND pdacc_ucityid != :ucityid3 AND pdacc_ucnid != :ucnid3 )
            OR ( pdacc_udl != :udl6 AND pdacc_ucityid != :ucityid4 AND pdacc_ucnid != :ucnid4 )
        )
        AND TE.tbevl_end_evtid IS NULL 
        AND tbevl_artid = :artid
        AND pdevt_acc_actor != :owner
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 3; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Lister trois Comptes qui ont EvaluÃ© l'Article" />
        <query.params.in>
            <qparam id=":owner" value="" />
            <qparam id=":artid" value="" />
            <qparam id=":udl1" value="" />
            <qparam id=":udl2" value="" />
            <qparam id=":udl3" value="" />
            <qparam id=":udl4" value="" />
            <qparam id=":udl5" value="" />
            <qparam id=":udl6" value="" />
            <qparam id=":ucityid1" value="" />
            <qparam id=":ucityid2" value="" />
            <qparam id=":ucityid3" value="" />
            <qparam id=":ucityid4" value="" />
            <qparam id=":ucnid1" value="" />
            <qparam id=":ucnid2" value="" />
            <qparam id=":ucnid3" value="" />
            <qparam id=":ucnid4" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln8_wtdlo">
        <query.body value="
        SELECT DISTINCT pdaccid as uid, pdacc_gid as ugid, pdacc_eid as ueid, pdacc_upsd as upsd, pdacc_ufn as ufn, evltp_code, evltp_code_fe, pdevt_datecrea_tstamp as evtdate  
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA, EvalTypes EV  
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND TE.tbevl_evltpid = EV.evltpid
        AND EV.evltpid != 4
        AND (
            ( pdacc_ucityid = :ucityid1 AND pdacc_udl = :udl1 )
            OR ( pdacc_ucnid = :ucnid1 AND pdacc_udl = :udl2 )
            OR ( pdacc_ucityid = :ucityid2 AND pdacc_udl != :udl3 )
            OR ( pdacc_ucnid = :ucnid2 AND pdacc_udl != :udl4 )
            OR ( pdacc_udl = :udl5 AND pdacc_ucityid != :ucityid3 AND pdacc_ucnid != :ucnid3 )
            OR ( pdacc_udl != :udl6 AND pdacc_ucityid != :ucityid4 AND pdacc_ucnid != :ucnid4 )
        )
        AND TE.tbevl_end_evtid IS NULL 
        AND tbevl_artid = :artid
        AND pdevt_acc_actor != :owner
        AND pdacc_todelete = 0
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 3; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Lister trois Comptes qui ont EvaluÃ© l'Article" />
        <query.params.in>
            <qparam id=":owner" value="" />
            <qparam id=":artid" value="" />
            <qparam id=":udl1" value="" />
            <qparam id=":udl2" value="" />
            <qparam id=":udl3" value="" />
            <qparam id=":udl4" value="" />
            <qparam id=":udl5" value="" />
            <qparam id=":udl6" value="" />
            <qparam id=":ucityid1" value="" />
            <qparam id=":ucityid2" value="" />
            <qparam id=":ucityid3" value="" />
            <qparam id=":ucityid4" value="" />
            <qparam id=":ucnid1" value="" />
            <qparam id=":ucnid2" value="" />
            <qparam id=":ucnid3" value="" />
            <qparam id=":ucnid4" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4evaln9">
        <query.body value="
        SELECT DISTINCT pdaccid as uid, pdacc_gid as ugid, pdacc_eid as ueid, pdacc_upsd as upsd, pdacc_ufn as ufn, evltp_code, evltp_code_fe, pdevt_datecrea_tstamp as evtdate 
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA, EvalTypes EV  
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND TE.tbevl_evltpid = EV.evltpid
        AND EV.evltpid != 4
        AND ( pdacc_ucityid = :ucityid1 OR pdacc_ucnid = :ucnid1 OR pdacc_ucityid != :ucityid2 OR pdacc_ucnid != :ucnid2  )
        AND TE.tbevl_end_evtid IS NULL 
        AND tbevl_artid = :artid
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 3; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Lister trois Comptes qui ont Evalue l'Article" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":ucityid1" value="" />
            <qparam id=":ucnid1" value="" />
            <qparam id=":ucityid2" value="" />
            <qparam id=":ucnid2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4evaln9_wtdlo">
        <query.body value="
        SELECT DISTINCT pdaccid as uid, pdacc_gid as ugid, pdacc_eid as ueid, pdacc_upsd as upsd, pdacc_ufn as ufn, evltp_code, evltp_code_fe, pdevt_datecrea_tstamp as evtdate 
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA, EvalTypes EV  
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND TE.tbevl_evltpid = EV.evltpid
        AND EV.evltpid != 4
        AND ( pdacc_ucityid = :ucityid1 OR pdacc_ucnid = :ucnid1 OR pdacc_ucityid != :ucityid2 OR pdacc_ucnid != :ucnid2  )
        AND TE.tbevl_end_evtid IS NULL 
        AND tbevl_artid = :artid
        AND pdacc_todelete = 0
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 3; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Lister trois Comptes qui ont Evalue l'Article" />
        <query.params.in>
            <qparam id=":artid" value="" />
            <qparam id=":ucityid1" value="" />
            <qparam id=":ucnid1" value="" />
            <qparam id=":ucityid2" value="" />
            <qparam id=":ucnid2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln10">
        <query.body value="
        SELECT DISTINCT pdaccid as uid, pdacc_gid as ugid, pdacc_eid as ueid, pdacc_upsd as upsd, pdacc_ufn as ufn, evltp_code, evltp_code_fe, pdevt_datecrea_tstamp as evtdate 
        FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA, EvalTypes EV  
        WHERE TE.tbevl_start_evtid = PE.pdevtid
        AND PE.pdevt_acc_actor = PA.pdaccid
        AND TE.tbevl_evltpid = EV.evltpid
        AND EV.evltpid != 4
        AND TE.tbevl_end_evtid IS NULL 
        AND tbevl_artid = :artid
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 3; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Lister trois Comptes qui ont Evalue l'Article" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4evaln10_wtdlo">
        <query.body value="
            SELECT DISTINCT pdaccid as uid, pdacc_gid as ugid, pdacc_eid as ueid, pdacc_upsd as upsd, pdacc_ufn as ufn, evltp_code, evltp_code_fe, pdevt_datecrea_tstamp as evtdate 
            FROM Table_Evals TE, Prod_Events PE, Proddb_Accounts PA, EvalTypes EV  
            WHERE TE.tbevl_start_evtid = PE.pdevtid
            AND PE.pdevt_acc_actor = PA.pdaccid
            AND TE.tbevl_evltpid = EV.evltpid
            AND EV.evltpid != 4
            AND TE.tbevl_end_evtid IS NULL 
            AND tbevl_artid = :artid
            AND pdacc_todelete = 0
            ORDER BY pdevt_datecrea_tstamp DESC
            LIMIT 3; 
        "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Lister trois Comptes qui ont Evalue l'Article" />
        <query.params.in>
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4evaln11">
        <query.body value="
        SELECT art_eid, Table_Evals.*, EvalTypes.*, pdevt_acc_actor, pdevt_datecrea_tstamp, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn 
        FROM Table_Evals, Prod_Events, EvalTypes, Articles, Proddb_Accounts
        WHERE Table_Evals.tbevl_start_evtid = pdevtid 
        AND pdevt_acc_actor = pdaccid 
        AND Table_Evals.tbevl_evltpid = evltpid 
        AND Table_Evals.tbevl_artid = artid 
        AND is_autobuild != 1
        AND tbevl_evltpid != 4
        AND tbevl_end_evtid IS NULL 
        AND artid = :eval_artid 
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 20;  "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="RÃ©cupÃ©rer la liste des Evaluations et les donnÃ©es liÃ©es pour un Article passÃ© en paramÃ¨tre via id" />
        <query.params.in>
            <qparam id=":eval_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4evaln11_wtdlo">
        <query.body value="
        SELECT art_eid, Table_Evals.*, EvalTypes.*, pdevt_acc_actor, pdevt_datecrea_tstamp, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn 
        FROM Table_Evals, Prod_Events, EvalTypes, Articles, Proddb_Accounts
        WHERE Table_Evals.tbevl_start_evtid = pdevtid 
        AND pdevt_acc_actor = pdaccid 
        AND Table_Evals.tbevl_evltpid = evltpid 
        AND Table_Evals.tbevl_artid = artid 
        AND is_autobuild != 1
        AND tbevl_evltpid != 4
        AND tbevl_end_evtid IS NULL 
        AND artid = :eval_artid 
        AND pdacc_todelete = 0
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 20;  "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="RÃ©cupÃ©rer la liste des Evaluations et les donnÃ©es liÃ©es pour un Article passÃ© en paramÃ¨tre via id" />
        <query.params.in>
            <qparam id=":eval_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4evaln12">
        <query.body value="
        SELECT art_eid, Table_Evals.*, EvalTypes.*, pdevt_acc_actor, art_accid as aoid, pdaccid as oid, pdacc_eid as oeid, pdacc_upsd as opsd, pdacc_ufn as ofn 
        FROM Table_Evals, Prod_Events, EvalTypes, Articles, Proddb_Accounts
        WHERE Table_Evals.tbevl_start_evtid = pdevtid 
        AND pdevt_acc_actor = pdaccid 
        AND Table_Evals.tbevl_evltpid = evltpid 
        AND Table_Evals.tbevl_artid = artid 
        AND is_autobuild != 1
        AND tbevl_end_evtid IS NULL 
        AND artid = :eval_artid 
        ORDER BY pdevt_datecrea_tstamp DESC
        LIMIT 20;  "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="RÃ©cupÃ©rer la liste des Evaluations et les donnÃ©es liÃ©es pour un Article passÃ© en paramÃ¨tre via eid" />
        <query.params.in>
            <qparam id=":eval_artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ******** SEARCHBOX SCOPE ******** -->
    <query id="qryl4srbxn1">
        <query.body value="
        SELECT *
        FROM SRH_Profiles
        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
        AND srh_pfl_uid IN 
        ( 
            SELECT tbrel_acc_targ as kw_uid 
            FROM VM_TabRels 
            WHERE ( tbrel_relsts = 1 OR tbrel_relsts = 2 OR tbrel_relsts = 3 )
            AND tbrel_acc_actor = :pvt_uid1
            AND tbrel_edate_tstamp IS NULL
            UNION
            SELECT tbrel_acc_actor as kw_uid 
            FROM VM_TabRels 
            WHERE tbrel_relsts = 3 
            AND tbrel_acc_targ = :pvt_uid2
            AND tbrel_edate_tstamp IS NULL
        )
        LIMIT :limit_kw 
        UNION
        SELECT *
        FROM SRH_Profiles
        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy2 IN BOOLEAN MODE)
        AND srh_pfl_uid != :pvt_uid3
        ORDER BY srh_pfl_ufols DESC, srh_pfl_ucap DESC
        LIMIT :limit_pop; 
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="Rechercher untilisateur en mixant les utilisateurs connus de ceux qui sont populaires" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":limit_kw" value="" />
            <qparam id=":limit_pop" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4srbxn2">
        <query.body value="
        (
            SELECT srh_pfl_uid, srh_pfl_upsd as upsd, srh_pfl_ufn as ufn, srh_pfl_ppic as uppic, srh_pfl_ufols as ufols, srh_pfl_ucap as ucap, 
            IFNULL( ( 
                SELECT tbrel_relsts 
                FROM VM_TabRels 
                WHERE ( 
                    ( tbrel_acc_actor = srh_pfl_uid AND tbrel_acc_targ = :pvt_uid4 )  
                    OR 
                    ( tbrel_acc_actor = :pvt_uid5 AND tbrel_acc_targ = srh_pfl_uid )
                )
                AND tbrel_edate_tstamp IS NULL
            ),0 ) as urel, pdacc_todelete as acctdl 
            FROM SRH_Profiles
			INNER JOIN Proddb_Accounts ON pdaccid = srh_pfl_uid
            WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_pfl_uid IN 
            ( 
                SELECT tbrel_acc_targ as kw_uid 
                FROM VM_TabRels 
                WHERE ( tbrel_relsts = 1 OR tbrel_relsts = 2 OR tbrel_relsts = 3 )
                AND tbrel_acc_actor = :pvt_uid1
                AND tbrel_edate_tstamp IS NULL
                UNION
                SELECT tbrel_acc_actor as kw_uid 
                FROM VM_TabRels 
                WHERE tbrel_relsts = 3 
                AND tbrel_acc_targ = :pvt_uid2
                AND tbrel_edate_tstamp IS NULL
            )
            LIMIT :limit_kw 
        )
        UNION
        (
            SELECT srh_pfl_uid, srh_pfl_upsd as upsd, srh_pfl_ufn as ufn, srh_pfl_ppic as uppic, srh_pfl_ufols as ufols, srh_pfl_ucap as ucap, 
            IFNULL( ( 
                SELECT tbrel_relsts 
                FROM VM_TabRels 
                WHERE ( 
                    ( tbrel_acc_actor = srh_pfl_uid AND tbrel_acc_targ = :pvt_uid6 )  
                    OR 
                    ( tbrel_acc_actor = :pvt_uid7 AND tbrel_acc_targ = srh_pfl_uid )
                )
                AND tbrel_edate_tstamp IS NULL
            ),0 ) as urel, pdacc_todelete as acctdl 
            FROM SRH_Profiles
			INNER JOIN Proddb_Accounts ON pdaccid = srh_pfl_uid
            WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy2 IN BOOLEAN MODE)
            AND srh_pfl_uid != :pvt_uid3
            ORDER BY ufols DESC, ucap DESC
            LIMIT :limit_pop 
        )
        LIMIT :limit_tot;
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="Rechercher untilisateur en mixant les utilisateurs connus de ceux qui sont populaires" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":limit_kw" value="" />
            <qparam id=":limit_pop" value="" />
			<qparam id=":limit_tot" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<!-- PFL : HEAVY CONNUS -->
    <query id="qryl4srbxn4">
        <query.body value="
        SELECT srh_pfl_uid, srh_pfl_upsd as upsd, srh_pfl_ufn as ufn, srh_pfl_ppic as uppic, srh_pfl_ufols as ufols, srh_pfl_ucap as ucap, 
        IFNULL( ( 
            SELECT tbrel_relsts 
            FROM VM_TabRels 
            WHERE ( 
                ( tbrel_acc_actor = srh_pfl_uid AND tbrel_acc_targ = :pvt_uid1 )  
                OR 
                ( tbrel_acc_actor = :pvt_uid2 AND tbrel_acc_targ = srh_pfl_uid )
            )
            AND tbrel_edate_tstamp IS NULL
        ),0 ) as urel 
        FROM SRH_Profiles
        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
        AND srh_pfl_uid IN 
        ( 
            SELECT tbrel_acc_targ as kw_uid 
            FROM VM_TabRels 
            WHERE ( tbrel_relsts = 1 OR tbrel_relsts = 2 OR tbrel_relsts = 3 )
            AND tbrel_acc_actor = :pvt_uid3
            AND tbrel_edate_tstamp IS NULL
            UNION
            SELECT tbrel_acc_actor as kw_uid 
            FROM VM_TabRels 
            WHERE tbrel_relsts = 3 
            AND tbrel_acc_targ = :pvt_uid4
            AND tbrel_edate_tstamp IS NULL
        )
        LIMIT :lmt_kw_ofs, :lmt_kw_lmt
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="Rechercher untilisateur en mixant les utilisateurs connus de ceux qui sont populaires" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":lmt_kw_ofs" value="" />
            <qparam id=":lmt_kw_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- PFL : HEAVY POPUPLAIRE (AVEC CUPVT)-->
    <query id="qryl4srbxn5">
        <query.body value="
        SELECT srh_pfl_uid, srh_pfl_upsd as upsd, srh_pfl_ufn as ufn, srh_pfl_ppic as uppic, srh_pfl_ufols as ufols, srh_pfl_ucap as ucap, 
            IFNULL( ( 
                SELECT tbrel_relsts 
                FROM VM_TabRels 
                WHERE ( 
                    ( tbrel_acc_actor = srh_pfl_uid AND tbrel_acc_targ = :pvt_uid1 )  
                    OR 
                    ( tbrel_acc_actor = :pvt_uid2 AND tbrel_acc_targ = srh_pfl_uid )
                )
                AND tbrel_edate_tstamp IS NULL
            ),0 ) as urel 
            FROM SRH_Profiles
            WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_pfl_uid != :pvt_uid3
            ORDER BY ufols DESC, ucap DESC
            LIMIT :lmt_pop_ofs, :lmt_pop_lmt 
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":lmt_pop_ofs" value="" />
            <qparam id=":lmt_pop_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- 
        PFL : HEAVY INCONNUS(TOUT LE MONDE) (AVEC CUPVT)
        Tout le monde SAUF MOI et MES RELATIONS 
    -->
    <query id="qryl4srbxn6">
        <query.body value="
        SELECT srh_pfl_uid, srh_pfl_upsd as upsd, srh_pfl_ufn as ufn, srh_pfl_ppic as uppic, srh_pfl_ufols as ufols, srh_pfl_ucap as ucap 
        FROM SRH_Profiles
        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
        AND srh_pfl_uid NOT IN 
        ( 
            SELECT tbrel_acc_targ as kw_uid 
            FROM VM_TabRels 
            WHERE ( tbrel_relsts = 1 OR tbrel_relsts = 2 OR tbrel_relsts = 3 )
            AND tbrel_acc_actor = :pvt_uid1
            AND tbrel_edate_tstamp IS NULL
            UNION
            SELECT tbrel_acc_actor as kw_uid 
            FROM VM_TabRels 
            WHERE tbrel_relsts = 3 
            AND tbrel_acc_targ = :pvt_uid2
            AND tbrel_edate_tstamp IS NULL
        )
        AND srh_pfl_uid != :pvt_uid3
        ORDER BY ufols DESC, ucap DESC
        LIMIT :lmt_uk_ofs, :lmt_uk_lmt 
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":lmt_uk_ofs" value="" />
            <qparam id=":lmt_uk_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- 
        PFL : HEAVY POPUPLAIRE (SANS CUPVT) 
        ReservÃ© au mode Hors-Ligne
    -->
    <query id="qryl4srbxn7">
        <query.body value="
            SELECT srh_pfl_uid, srh_pfl_upsd as upsd, srh_pfl_ufn as ufn, srh_pfl_ppic as uppic, srh_pfl_ufols as ufols, srh_pfl_ucap as ucap 
            FROM SRH_Profiles
            WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
            ORDER BY ufols DESC, ucap DESC
            LIMIT :lmt_pop_ofs, :lmt_pop_lmt 
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":lmt_pop_ofs" value="" />
            <qparam id=":lmt_pop_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- 
        PFL : HEAVY INCONNUS(TOUT LE MONDE) (SANS CUPVT, SANS UPVT)
        Tout le monde TRIER ALEATOIREMENT !
        RÃ©servÃ© au mode Hors-Ligne
    -->
    <query id="qryl4srbxn8">
        <query.body value="
        SELECT srh_pfl_uid, srh_pfl_upsd as upsd, srh_pfl_ufn as ufn, srh_pfl_ppic as uppic, srh_pfl_ufols as ufols, srh_pfl_ucap as ucap 
        FROM SRH_Profiles
        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
        LIMIT :lmt_uk_ofs, :lmt_uk_lmt 
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":lmt_uk_ofs" value="" />
            <qparam id=":lmt_uk_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- MARGE -->
    
    <!-- TRD : AUTO -->
	<query id="qryl4srbxn10">
        <query.body value="
        (
            SELECT *,( 
                CASE 
                    WHEN srh_tr_owid = :pvt_uid4 THEN 'me'
                    WHEN 
                        ( 
                            srh_tr_id IN (
                                SELECT trabo_trid as trid
                                FROM TrAbo_Histy
                                WHERE trabo_follower = :pvt_uid5
                                AND trabo_dateterm_tstamp IS NULL
                            )
                        )
                        THEN 'fl'
                    ELSE 'nn'
                END
            ) as trel
            FROM SRH_Trends
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_tr_id IN 
            (
                SELECT trid
                FROM Trends
                WHERE trd_owner = :pvt_uid1
                UNION
                SELECT trabo_trid as trid
                FROM TrAbo_Histy
                WHERE trabo_follower = :pvt_uid2
                AND trabo_dateterm_tstamp IS NULL
            )
            LIMIT :lmt_kw_me
        )
        UNION
        (
            SELECT ST.*,( 
                CASE 
                    WHEN srh_tr_owid = :pvt_uid6 THEN 'me'
                    WHEN 
                        ( 
                            srh_tr_id IN (
                                SELECT trabo_trid as trid
                                FROM TrAbo_Histy
                                WHERE trabo_follower = :pvt_uid7
                                AND trabo_dateterm_tstamp IS NULL
                            )
                        )
                        THEN 'fl'
                    ELSE 'nn'
                END
            ) as trel
            FROM SRH_Trends ST
            LEFT JOIN Trends TR ON TR.trid = ST.srh_tr_id
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy2 IN BOOLEAN MODE)
            AND trd_owner != :pvt_uid3
            ORDER BY srh_tr_fol DESC, srh_tr_post DESC
            LIMIT :lmt_pop
        )
        LIMIT :lmt_tot; 
        "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Rechercher une Tendance mixant les Tendances du pivot et celles suivies." />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":lmt_kw_me" value="" />
            <qparam id=":lmt_pop" value="" />
            <qparam id=":lmt_tot" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4srbxn10neo0815001">
        <query.body value="
        (
            SELECT SRH_Trends.*,( 
                CASE 
                    WHEN srh_tr_owid = :pvt_uid4 THEN 'me'
                    WHEN 
                        ( 
                            srh_tr_id IN (
                                SELECT trabo_trid as trid
                                FROM TrAbo_Histy
                                WHERE trabo_follower = :pvt_uid5
                                AND trabo_dateterm_tstamp IS NULL
                            )
                        )
                        THEN 'fl'
                    ELSE 'nn'
                END
            ) as trel, pdacc_todelete as acctdl
            FROM SRH_Trends
			INNER JOIN Proddb_Accounts ON pdaccid = srh_tr_owid
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_tr_id IN 
            (
                SELECT trid
                FROM Trends
                WHERE trd_owner = :pvt_uid1
                UNION
                SELECT trabo_trid as trid
                FROM TrAbo_Histy
                WHERE trabo_follower = :pvt_uid2
                AND trabo_dateterm_tstamp IS NULL
            )
			AND srh_tr_id NOT IN (
				SELECT tsh_trid 
				FROM TrStatesHisty 
				WHERE tsh_state IN (2,3,5) 
				AND tsh_evedate_tstamp IS NULL
			)
            LIMIT :lmt_kw_me
        )
        UNION
        (
            SELECT ST.*,( 
                CASE 
                    WHEN srh_tr_owid = :pvt_uid6 THEN 'me'
                    WHEN 
                        ( 
                            srh_tr_id IN (
                                SELECT trabo_trid as trid
                                FROM TrAbo_Histy
                                WHERE trabo_follower = :pvt_uid7
                                AND trabo_dateterm_tstamp IS NULL
                            )
                        )
                        THEN 'fl'
                    ELSE 'nn'
                END
            ) as trel, pdacc_todelete as acctdl
            FROM SRH_Trends ST 
            LEFT JOIN Trends TR ON TR.trid = ST.srh_tr_id 
			INNER JOIN Proddb_Accounts ON pdaccid = srh_tr_owid
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy2 IN BOOLEAN MODE) 
            AND trd_owner != :pvt_uid3 
            AND ST.srh_tr_id NOT IN (
				SELECT tsh_trid 
				FROM TrStatesHisty 
				WHERE tsh_state IN (2,3,5) 
				AND tsh_evedate_tstamp IS NULL 
			)
            ORDER BY srh_tr_fol DESC, srh_tr_post DESC 
            LIMIT :lmt_pop 
        )
        LIMIT :lmt_tot; 
        "/>
       <query.dbname value="tqr_product_vb1_prod" /> 
       <query.type value="get" />
		<query.note value="Rechercher une Tendance mixant les Tendances du pivot et celles suivies." />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":lmt_kw_me" value="" />
            <qparam id=":lmt_pop" value="" />
            <qparam id=":lmt_tot" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- TRD : HEAVY CONNUS -->
    <query id="qryl4srbxn11">
        <query.body value="
            SELECT *,( 
                CASE 
                    WHEN srh_tr_owid = :pvt_uid3 THEN 'me'
                    WHEN 
                        ( 
                            srh_tr_id IN (
                                SELECT trabo_trid as trid
                                FROM TrAbo_Histy
                                WHERE trabo_follower = :pvt_uid4
                                AND trabo_dateterm_tstamp IS NULL
                            )
                        )
                        THEN 'fl'
                    ELSE 'nn'
                END
            ) as trel
            FROM SRH_Trends
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_tr_id IN 
            (
                SELECT trid
                FROM Trends
                WHERE trd_owner = :pvt_uid1
                UNION
                SELECT trabo_trid as trid
                FROM TrAbo_Histy
                WHERE trabo_follower = :pvt_uid2
                AND trabo_dateterm_tstamp IS NULL
            )
            LIMIT :lmt_kw_me_ofs, :lmt_kw_me_lmt
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":lmt_kw_me_ofs" value="" />
            <qparam id=":lmt_kw_me_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- PFL : HEAVY POPUPLAIRE (AVEC CUPVT) -->
    <query id="qryl4srbxn12">
        <query.body value="
            SELECT ST.*,( 
                CASE 
                    WHEN srh_tr_owid = :pvt_uid2 THEN 'me'
                    WHEN 
                        ( 
                            srh_tr_id IN (
                                SELECT trabo_trid as trid
                                FROM TrAbo_Histy
                                WHERE trabo_follower = :pvt_uid3
                                AND trabo_dateterm_tstamp IS NULL
                            )
                        )
                        THEN 'fl'
                    ELSE 'nn'
                END
            ) as trel
            FROM SRH_Trends ST
            LEFT JOIN Trends TR
            ON TR.trid = ST.srh_tr_id
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND trd_owner != :pvt_uid1
            ORDER BY srh_tr_fol DESC, srh_tr_post DESC
            LIMIT :lmt_pop_ofs, :lmt_pop_lmt
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":lmt_pop_ofs" value="" />
            <qparam id=":lmt_pop_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <!-- 
        PFL : HEAVY INCONNUS(TOUT LE MONDE) (AVEC CUPVT)
        Toutes les Tendances SAUF LES MIENNES et CELLES AUX QUELLES JE SUIS CONNEXTES 
    -->
    <query id="qryl4srbxn13">
        <query.body value="
            SELECT *
            FROM SRH_Trends
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_tr_id NOT IN 
            (
                SELECT trid
                FROM Trends
                WHERE trd_owner = :pvt_uid1
                UNION
                SELECT trabo_trid as trid
                FROM TrAbo_Histy
                WHERE trabo_follower = :pvt_uid2
                AND trabo_dateterm_tstamp IS NULL
            )
            LIMIT :lmt_uk_ofs, :lmt_uk_lmt
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":lmt_uk_ofs" value="" />
            <qparam id=":lmt_uk_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- 
        PFL : HEAVY POPUPLAIRE (SANS CUPVT) 
        ReservÃ© au mode Hors-Ligne
    -->
    <query id="qryl4srbxn14">
        <query.body value="
            SELECT ST.*
            FROM SRH_Trends ST
            LEFT JOIN Trends TR
            ON TR.trid = ST.srh_tr_id
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy1 IN BOOLEAN MODE)
            ORDER BY srh_tr_fol DESC, srh_tr_post DESC
            LIMIT :lmt_pop_ofs, :lmt_pop_lmt
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":lmt_pop_ofs" value="" />
            <qparam id=":lmt_pop_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    
    <!-- 
        PFL : HEAVY INCONNUS(TOUT LE MONDE) (SANS CUPVT, SANS UPVT)
        Tout le monde TRI HERITE !
        RÃ©servÃ© au mode Hors-Ligne
    -->
    <query id="qryl4srbxn15">
        <query.body value="
            SELECT *
            FROM SRH_Trends
            WHERE MATCH(srh_tr_tle, srh_tr_desc) AGAINST (:sqy1 IN BOOLEAN MODE)
            LIMIT :lmt_uk_ofs, :lmt_uk_lmt
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":lmt_uk_ofs" value="" />
            <qparam id=":lmt_uk_lmt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******** SEARCHBOX SCOPE ******** -->
    
    <query id="qryl4srlgn1">
        <query.body value="
        INSERT INTO SRH_Logs (srhlg_qry, srhlg_cat, srhlg_fil, srhlg_uid, srhlg_ueid, srhlg_date_tstamp, srhlg_locip) VALUES 
        (:sqy, :cat, :fil, :uid, :ueid, :time, :locip);" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":sqy" value="" />
            <qparam id=":cat" value="" />
            <qparam id=":fil" value="" />
            <qparam id=":uid" value="" />
            <qparam id=":ueid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":locip" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<!-- ********************************************************************************************************************************************* -->
    <!-- ************************************************************ ACCOUNT_DB ********************************************************************* -->
    <!-- ********************************************************************************************************************************************* -->
    
    <!-- 
        Base de donnÃ©es remplacant l'ancienne base qui faisait partie du prototype.
    -->
    <!-- ************************** L3 LAYER ************************** -->
    <query id="qryl3accdbn1">
        <query.body value="
        UPDATE Accounts
        SET acc_lang = :lg_code, acc_lang_dmod = CURRENT_TIMESTAMP(), acc_lang_dmod_stamp = :tstamp
        WHERE accid = :accid; "/>
        <query.dbname value="kx_commons_vbeta" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":lg_code" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ************************** L4 LAYER ************************** -->
    
    <!-- ***** INSCRIIPTION **** -->
    <query id="qryl4insn1">
        <query.body value="
            SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop cypop, count(*) as copies
            FROM CitySearch
            WHERE MATCH(asciiname) AGAINST (:sqy IN BOOLEAN MODE)
            GROUP BY asciiname, country_code; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":sqy" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn2">
        <query.body value="
        (
            SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop, count(*) as copies
            FROM CitySearch
            WHERE MATCH(asciiname) AGAINST (:sqy1 IN BOOLEAN MODE)
            GROUP BY asciiname, country_code
            ORDER BY city_pop DESC
        )
        UNION
        (
            SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop, count(*) as copies
            FROM CitySearch
            WHERE MATCH(asciiname) AGAINST (:sqy2 IN BOOLEAN MODE)
            GROUP BY asciiname, country_code
            ORDER BY city_pop DESC
        )
        LIMIT :limit;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4insn3">
        <query.body value="
        (
            SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop, count(*) as copies
            FROM CitySearch
            WHERE MATCH(asciiname) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND country_code = :cn_code11
            GROUP BY asciiname, country_code
            ORDER BY city_pop DESC
        )
        UNION
        (
            SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop, count(*) as copies
            FROM CitySearch
            WHERE MATCH(asciiname) AGAINST (:sqy2 IN BOOLEAN MODE)
            AND country_code = :cn_code12
            GROUP BY asciiname, country_code
            ORDER BY city_pop DESC
        ) "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":cn_code11" value="" />
            <qparam id=":cn_code12" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn4">
        <query.body value="
            SELECT *
            FROM
            (
                SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop, count(*) as copies
                FROM CitySearch
                WHERE MATCH(asciiname) AGAINST (:sqy11 IN BOOLEAN MODE)
                GROUP BY asciiname,country_code
                UNION
                SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop, count(*) as copies
                FROM CitySearch
                WHERE MATCH(asciiname) AGAINST (:sqy12 IN BOOLEAN MODE)
                GROUP BY asciiname,country_code
                UNION
                SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop,  count(*) as copies
                FROM CitySearch
                WHERE MATCH(asciiname) AGAINST (:sqy21 IN BOOLEAN MODE)
                AND country_code = :cn_code1
                GROUP BY asciiname,country_code 
                UNION
                SELECT city_id as cyid, asciiname as cynm, country_code as cycn, city_pop as cypop,  count(*) as copies
                FROM CitySearch
                WHERE MATCH(asciiname) AGAINST (:sqy22 IN BOOLEAN MODE)
                AND country_code = :cn_code2
                GROUP BY asciiname,country_code 
            ) a
            ORDER BY cypop DESC
            LIMIT :limit
            "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="La recherche se fait avec deux chaines recherches (precise,imprecise) pour de meilleures rÃ©sultats plus le code du pays." />
        <query.params.in>
            <qparam id=":sqy11" value="" />
            <qparam id=":sqy12" value="" />
            <qparam id=":sqy21" value="" />
            <qparam id=":sqy22" value="" />
            <qparam id=":cn_code1" value="" />
            <qparam id=":cn_code2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4insn5">
        <query.body value="
            SELECT city_id AS cyid, asciiname AS cynm, country_code AS cycn, city_pop AS cypop
            FROM CitySearch
            WHERE asciiname LIKE :sqy 
            AND country_code = :cn_code;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":sqy" value="" />
            <qparam id=":cn_code" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4insn6">
        <query.body value="
            SELECT *
            FROM SRH_Profiles
            WHERE srh_pfl_upsd LIKE :sqy;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":sqy" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn7">
        <query.body value="
            SELECT srh_emlraw as email
            FROM SRH_EmailTab
            WHERE srh_emlraw LIKE :sqy;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":sqy" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn7_vplus">
        <query.body value="
            SELECT *
            FROM SRH_EmailTab
            WHERE srh_emlraw LIKE :sqy;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":sqy" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4insn8">
        <query.body value="
            SELECT *
            FROM BanEmlDomTab
            WHERE bedom_dom LIKE :dom;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":dom" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn9">
        <query.body value="
            SELECT *
            FROM CitySearch
            WHERE city_id = :id ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	
    <query id="qryl4insn10">
        <query.body value="
        INSERT INTO EmailArchive (emailraw,email_login,email_dom,email_dcrea,email_dcrea_tstamp) VALUES
        (:eml_raw,:eml_login,:eml_dom,CURRENT_TIMESTAMP(),:tstamp); "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":eml_raw" value="" />
            <qparam id=":eml_login" value="" />
            <qparam id=":eml_dom" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn11">
        <query.body value="
        INSERT INTO Accounts (pfl_fn, pfl_bdate, pfl_bdate_tstamp, pfl_lvcity, pfl_gender, acc_psd, acc_lang, acc_pwd, acc_crea_locip, acc_dcrea_tstamp) VALUES 
        (:ufn, :udb, :ubd_stp, :ulvcty, :ugdr, :upsd, :ulng, :upwd, :clocip, :cdate_stp);" />
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":ufn" value="" />
            <qparam id=":udb" value="" />
            <qparam id=":ubd_stp" value="" />
            <qparam id=":ulvcty" value="" />
            <qparam id=":ugdr" value="" />
            <qparam id=":upsd" value="" />
            <qparam id=":ulng" value="" />
            <qparam id=":upwd" value="" />
            <qparam id=":clocip" value="" />
            <qparam id=":cdate_stp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn12">
        <query.body value="
        UPDATE Accounts
        SET acc_eid = :ueid
        WHERE accid = :uid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":ueid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn13">
        <query.body value="
        INSERT INTO Email_histy (emhy_email,emhy_accid,emhy_dEnaFrom_tstamp) VALUES
        (:eml_raw,:accid,:tstamp); "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":eml_raw" value="" />
            <qparam id=":accid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn14">
        <query.body value="
        INSERT INTO SRH_EmailTab (srh_emlraw,srh_eml_login,srh_eml_dom,srh_eml_dadd_tstamp,srh_eml_uid,srh_eml_ueid,srh_eml_ufn,srh_eml_upsd) VALUES
        (:eml_raw,:eml_login,:eml_dom,:tstamp,:uid,:ueid,:ufn,:upsd); "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":eml_raw" value="" />
            <qparam id=":eml_login" value="" />
            <qparam id=":eml_dom" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":uid" value="" />
            <qparam id=":ueid" value="" />
            <qparam id=":ufn" value="" />
            <qparam id=":upsd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn15">
        <query.body value="
        INSERT INTO SRH_Profiles (srh_pfl_uid,srh_pfl_ueid,srh_pfl_ufn,srh_pfl_upsd,srh_pfl_ppic) VALUES
        (:uid,:ueid,:ufn,:upsd,:uppic); "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":ueid" value="" />
            <qparam id=":ufn" value="" />
            <qparam id=":upsd" value="" />
            <qparam id=":uppic" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn16">
        <query.body value="
            SELECT *
            FROM Reserved_Pseudos
            WHERE rsvpsd_psd LIKE :psd;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":psd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn17">
        <query.body value="
            INSERT INTO Abo_Grp_Histy (abogrp_accid,abogrp_gid,abogrp_stdate_tstamp) VALUES
            (:uid,:gid,:tstamp) ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":gid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn18">
        <query.body value="
            SELECT *
            FROM Denied_PsdWords ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4insn19">
        <query.body value="
            SELECT *
            FROM Denied_PsdWords
            WHERE dnypsd_psd LIKE :psd;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":psd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4insn20">
        <query.body value="
            SELECT *
            FROM Denied_FnWords ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ************** TQR_ACCOUNT ************** -->
    <query id="qryl4tqraccn1">
        <query.body value="
            SELECT *
            FROM Accounts
            WHERE accid = :uid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn2">
        <query.body value="
            SELECT *
            FROM Accounts
            WHERE acc_eid = :ueid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":ueid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn3">
        <query.body value="
            SELECT *
            FROM SRH_EmailTab
            WHERE srh_emlraw LIKE :email;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":email" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn4">
        <query.body value="
            SELECT *
            FROM EmailArchive
            WHERE emailraw LIKE :email;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":email" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn5">
        <query.body value="
            SELECT *
            FROM Email_histy
            WHERE ( emhy_dEnaEnd IS NULL AND emhy_dEnaEnd_tstamp IS NULL )
            AND emhy_accid = :uid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn6">
        <query.body value="
            SELECT *
            FROM Abo_Grp_Histy
            WHERE ( abogrp_enddate IS NULL AND abogrp_enddate_tstamp IS NULL )
            AND abogrp_accid = :uid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn7">
        <query.body value="
            SELECT AC.*, EH.*, ( 
                CASE 
                    WHEN actdlid IS NULL THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &lt; actdl_edate_tstamp ) THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &gt;= actdl_edate_tstamp ) THEN -1
                    WHEN :now &lt; actdl_edate_tstamp THEN 1
                    ELSE 2
                END) as acc_todelete
            FROM Email_histy EH, Accounts AC
            LEFT JOIN AccToDel_Histy AH 
            ON  actdl_accid = accid
            WHERE emhy_accid = accid 
            AND emhy_dEnaEnd IS NULL 
            AND emhy_dEnaEnd_tstamp IS NULL 
            AND emhy_email = :login
            ORDER BY actdl_sdate_tstamp DESC
            LIMIT 1; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":login" value="" />
            <qparam id=":now" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn8">
        <query.body value="
            SELECT AC.*, EH.*, ( 
                CASE 
                    WHEN actdlid IS NULL THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &lt; actdl_edate_tstamp ) THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &gt;= actdl_edate_tstamp ) THEN -1
                    WHEN :now &lt; actdl_edate_tstamp THEN 1
                    ELSE 2
                END) as acc_todelete
            FROM Email_histy EH, Accounts AC
            LEFT JOIN AccToDel_Histy AH 
            ON  actdl_accid = accid
            WHERE emhy_accid = accid 
            AND emhy_dEnaEnd IS NULL 
            AND emhy_dEnaEnd_tstamp IS NULL 
            AND acc_psd = :login
            ORDER BY actdl_sdate_tstamp DESC
            LIMIT 1; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":login" value="" />
            <qparam id=":now" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn9">
        <query.body value="
            SELECT AC.*, EH.*, PC.asciiname as pfl_lvcity_name, PC.country_code as pfl_lvcity_cncode, ( 
                CASE 
                    WHEN actdlid IS NULL THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &lt; actdl_edate_tstamp ) THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &gt;= actdl_edate_tstamp ) THEN -1
                    WHEN :now &lt; actdl_edate_tstamp THEN 1
                    ELSE 2
                END) as acc_todelete
            FROM Email_histy EH, Accounts AC
            LEFT JOIN AccToDel_Histy AH 
            ON  actdl_accid = accid
            LEFT JOIN Partner_GN_Cities_5000 PC 
            ON city_id = pfl_lvcity
            WHERE emhy_accid = accid 
            AND emhy_dEnaEnd IS NULL 
            AND emhy_dEnaEnd_tstamp IS NULL 
            AND accid = :uid
            ORDER BY actdl_sdate_tstamp DESC
            LIMIT 1; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":now" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn10">
        <query.body value="
            SELECT AC.*, EH.*, PC.asciiname as pfl_lvcity_name, PC.country_code as pfl_lvcity_cncode, ( 
                CASE 
                    WHEN actdlid IS NULL THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &lt; actdl_edate_tstamp ) THEN 0
                    WHEN ( actdl_cdate_tstamp IS NOT NULL AND actdl_cdate_tstamp &gt;= actdl_edate_tstamp ) THEN -1
                    WHEN :now &lt; actdl_edate_tstamp THEN 1
                    ELSE 2
                END) as acc_todelete
            FROM Email_histy EH, Accounts AC
            LEFT JOIN AccToDel_Histy AH 
            ON actdl_accid = accid
            LEFT JOIN Partner_GN_Cities_5000 PC 
            ON city_id = pfl_lvcity
            WHERE emhy_accid = accid 
            AND emhy_dEnaEnd IS NULL 
            AND emhy_dEnaEnd_tstamp IS NULL 
            AND acc_eid = :ueid
            ORDER BY actdl_sdate_tstamp DESC
            LIMIT 1; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":ueid" value="" />
            <qparam id=":now" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn11">
        <query.body value="
        INSERT INTO AccToDel_Histy (actdl_accid,actdl_sdate_tstamp,actdl_edate,actdl_edate_tstamp) VALUES 
        (:accid,:tstamp,:edate,:edate_tstamp); "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":edate" value="" />
            <qparam id=":edate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn12">
        <query.body value="
        UPDATE AccToDel_Histy 
        SET actdl_cdate = CURRENT_TIMESTAMP(), actdl_cdate_tstamp = :tstamp
        WHERE actdl_accid = :accid
        AND actdl_cdate_tstamp IS NULL; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn13">
        <query.body value="
        UPDATE Accounts  
        SET acc_pwd = :hpwd, acc_pwd_mod_precid = :precid, acc_pwd_dmod = :date, acc_pwd_dmod_tstamp = :tstamp
        WHERE accid = :accid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":hpwd" value="" />
            <qparam id=":precid" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tqraccn14">
        <query.body value="
        UPDATE Accounts 
        SET pfl_fn = :pfl_fn, pfl_bdate = :pfl_bdy, pfl_bdate_tstamp = :pfl_bdy_tstamp, pfl_bdate_mod_rem = :pfl_bdy_rmn, pfl_lvcity = :pfl_city, 
            pfl_gender = :pfl_gdr, pfl_gender_mod_rem = :pfl_gdr_rmn, pfl_dmod = :now, pfl_dmod_tstamp = :tstamp
        WHERE accid = :accid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":pfl_fn" value="" />
            <qparam id=":pfl_bdy" value="" />
            <qparam id=":pfl_bdy_tstamp" value="" />
            <qparam id=":pfl_bdy_rmn" value="" />
            <qparam id=":pfl_city" value="" />
            <qparam id=":pfl_gdr" value="" />
            <qparam id=":pfl_gdr_rmn" value="" />
            <qparam id=":now" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn15">
        <query.body value="
        UPDATE Srh_Profiles 
        SET srh_pfl_ufn = :pfl_fn
        WHERE srh_pfl_uid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":pfl_fn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn16">
        <query.body value="
        UPDATE Email_histy 
        SET emhy_dEnaEnd = :now, emhy_dEnaEnd_tstamp = :tstamp
        WHERE emhy_email = :email
        AND emhy_accid = :accid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":email" value="" />
            <qparam id=":now" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn17">
        <query.body value="
        DELETE FROM Srh_Emailtab 
        WHERE srh_emlraw = :email
        AND srh_eml_uid = :accid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":email" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn18">
        <query.body value="
        UPDATE Accounts 
        SET acc_psd = :acc_psd, acc_psd_dmod = :now1, acc_psd_dmod_tstamp = :tstamp1, acc_lang = :acc_lng, acc_lang_dmod = :now2, acc_lang_dmod_tstamp = :tstamp2
        WHERE accid = :accid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":acc_psd" value="" />
            <qparam id=":now1" value="" />
            <qparam id=":tstamp1" value="" />
            <qparam id=":acc_lng" value="" />
            <qparam id=":now2" value="" />
            <qparam id=":tstamp2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn19">
        <query.body value="
        UPDATE Srh_Profiles 
        SET srh_pfl_upsd = :upsd
        WHERE srh_pfl_uid = :accid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":upsd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn20">
        <query.body value="
        UPDATE Accounts  
        SET secu_coWithPsdEna = :ecwpsd
        WHERE accid = :accid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":ecwpsd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tqraccn21">
        <query.body value="
        INSERT INTO AccToDel_LastLetter (lltr_actdlid,lltr_HIKW,lltr_YILV,lltr_YILV_Other,lltr_ILBBIF,lltr_evdate,lltr_evdate_tstamp) VALUES 
        (:id,:hikw,:yilv,:yilv_ot,:ilbbif,:now,:tstamp); "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":hikw" value="" />
            <qparam id=":yilv" value="" />
            <qparam id=":yilv_ot" value="" />
            <qparam id=":ilbbif" value="" />
            <qparam id=":now" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tqraccn22">
        <query.body value="
            SELECT ATDLL.*, ATDHY.*
            FROM acctodel_lastletter ATDLL, acctodel_histy ATDHY
            WHERE lltr_actdlid = actdlid 
            AND actdl_accid = :uid
            AND actdl_cdate_tstamp IS NULL
            ORDER BY actdl_sdate_tstamp DESC
            LIMIT 1; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- CONFIRM ACCOUNT -->
    
    <query id="qryl4tqraccn23_lmt">
        <query.body value="
        SELECT * 
        FROM CNFRM_EMAIL 
        WHERE cnfeml_uid = :uid 
        AND cnfeml_rsltdt_tstamp IS NOT NULL 
        ORDER BY cnfeml_rsltdt_tstamp DESC
        LIMIT :limit;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn24">
        <query.body value="
        SELECT *
        FROM CNFRM_EMAIL 
        WHERE cnfeml_uid = :uid
        AND cnfeml_email = :eml
        AND cnfeml_rsltdt_tstamp IS NOT NULL
        ORDER BY cnfeml_rsltdt_tstamp DESC
        LIMIT 1 ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":eml" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn25">
        <query.body value="
        UPDATE CNFRM_EMAIL 
        SET cnfeml_result = :result, cnfeml_rsltdt = :ce_date, cnfeml_rsltdt_tstamp = :ce_tstamp 
        WHERE cnfeml_id = :ce_id; " />
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ce_id" value="" />
            <qparam id=":result" value="" />
            <qparam id=":ce_date" value="" />
            <qparam id=":ce_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
    
    <query id="qryl4tqraccn26">
        <query.body value="
        INSERT INTO CNFRM_EMAIL (cnfeml_key, cnfeml_code, cnfeml_email, cnfeml_uid, cnfeml_ssid, cnfeml_locip, cnfeml_uagnt, cnfeml_purpose, cnfeml_sntdate, cnfeml_sntdate_tstamp)
        VALUES (:ce_key, :ce_code, :ce_email, :ce_accid, :ce_ssid, :ce_locip, :ce_uagent, :ce_purpz, :ce_date, :ce_tstamp);"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ce_key" value="" />
            <qparam id=":ce_code" value="" />
            <qparam id=":ce_email" value="" />
            <qparam id=":ce_accid" value="" />
            <qparam id=":ce_purpz" value="" />
            <qparam id=":ce_ssid" value="" />
            <qparam id=":ce_locip" value="" />
            <qparam id=":ce_uagent" value="" />
            <qparam id=":ce_date" value="" />
            <qparam id=":ce_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn27">
        <query.body value="
        SELECT *
        FROM CNFRM_EMAIL 
        WHERE cnfeml_key = :key
        AND cnfeml_code = :code
        AND cnfeml_email = :eml
        AND cnfeml_uid = :uid
        AND cnfeml_ssid = :ssid
        AND cnfeml_sntdate_tstamp = :tstamp 
        AND cnfeml_rsltdt_tstamp IS NULL" />
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":key" value="" />
            <qparam id=":code" value="" />
            <qparam id=":eml" value="" />
            <qparam id=":uid" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn28">
        <query.body value="
        SELECT *
        FROM CNFRM_EMAIL 
        WHERE cnfeml_uid = :uid
        AND cnfeml_rsltdt_tstamp IS NULL
        ORDER BY cnfeml_rsltdt_tstamp DESC
        LIMIT 1 ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn29">
        <query.body value="
        SELECT *
        FROM CNFRM_EMAIL 
        WHERE cnfeml_key = :key;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":key" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqraccn30">
        <query.body value="
        UPDATE CNFRM_EMAIL 
        SET cnfeml_infodt = :ce_date, cnfeml_infodt_tstamp = :ce_tstamp
        WHERE cnfeml_id = :ce_id;" />
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":ce_id" value="" />
            <qparam id=":ce_date" value="" />
            <qparam id=":ce_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    
    <!-- ************** TQR_CNX ************** -->
    
    <query id="qryl4tqrcnxn1">
        <query.body value="
            SELECT *
            FROM ShelledAccountsTable, Login_Attempts 
            WHERE sat_atpt = atptid 
            AND sat_accid = :uid 
            AND sat_sdate_tstamp &lt;= :now1 
            AND sat_edate_tstamp &gt;= :now2
            AND sat_obslt_date_tstamp IS NULL;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":now1" value="" />
            <qparam id=":now2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn2">
        <query.body value="
            SELECT secu_coWithPsdEna as cwp
            FROM Accounts 
            WHERE accid = :uid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn3">
        <query.body value="
            INSERT INTO Login_Attempts (atpt_accid,atpt_gvn_login,atpt_gvn_pwd,atpt_locip,atpt_ssid,atpt_result,atpt_result_rpt,atpt_date_tstamp,atpt_comment) VALUES
            (:uid,:login,:pwd,:locip,:ssid,:result,:res_rprt,:tstamp,:comment);"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":login" value="" />
            <qparam id=":pwd" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":result" value="" />
            <qparam id=":res_rprt" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":comment" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn4">
        <query.body value="
            SELECT * 
            FROM Login_Attempts  
            WHERE atpt_accid = :uid
            AND atpt_ssid = :ssid 
            ORDER BY atpt_date_tstamp DESC
            LIMIT :limit;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn5">
        <query.body value="
            SELECT *
            FROM ShelledAccountsTable, Login_Attempts 
            WHERE sat_atpt = atptid 
            AND sat_accid = :uid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn6">
        <query.body value="
            SELECT *
            FROM ShelledAccountsTable, Login_Attempts 
            WHERE sat_atpt = atptid 
            AND sat_obslt_date_tstamp IS NULL  
            AND sat_accid = :uid 
            ORDER BY sat_sdate_tstamp DESC;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn7">
        <query.body value="
            INSERT INTO ShelledAccountsTable (sat_accid,sat_coef,sat_sdate_tstamp,sat_edate,sat_edate_tstamp,sat_atpt) VALUES
            (:accid,:coef,:sdate_tstamp,:edate,:edate_tstamp,:atpt) ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":coef" value="" />
            <qparam id=":sdate_tstamp" value="" />
            <qparam id=":edate" value="" />
            <qparam id=":edate_tstamp" value="" />
            <qparam id=":atpt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn8">
        <query.body value="
        UPDATE ShelledAccountsTable 
        SET sat_obslt_date = CURRENT_TIMESTAMP(), sat_obslt_date_tstamp = :tstamp
        WHERE sat_accid = :accid
        AND sat_obslt_date_tstamp IS NULL; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn9">
        <query.body value="
            SELECT *
            FROM ShelledAccountsTable, Login_Attempts 
            WHERE sat_atpt = atptid 
            AND sat_obslt_date_tstamp IS NULL  
            AND sat_accid = :uid 
            ORDER BY sat_sdate_tstamp DESC 
            LIMIT :limit;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn10">
        <query.body value="
            INSERT INTO Login_Logs (llog_atpt,llog_stdate_tstamp) VALUES
            (:atptid,:tstamp) ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":atptid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn11">
        <query.body value="
            SELECT LL.*
            FROM Login_Attempts LA, Login_Logs LL 
            WHERE atptid = llog_atpt 
            AND llog_enddate_tstamp IS NULL  
            AND atpt_accid = :uid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrcnxn12">
        <query.body value="
            UPDATE Login_Logs 
            SET llog_enddate = CURRENT_TIMESTAMP(), llog_enddate_tstamp = :tstamp, llog_endtype = :lotid
            WHERE llog_psid = :psid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":psid" value="" />
            <qparam id=":lotid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4tqrcnxn13">
        <query.body value="
            UPDATE Login_Logs 
            SET llog_enddate = CURRENT_TIMESTAMP(), llog_enddate_tstamp = :tstamp, llog_endtype = :lotid
            WHERE llog_atpt IN (
                SELECT atptid
                FROM Login_Attempts
                WHERE atpt_ssid = :ssid 
                AND atpt_accid = :uid 
            )
            AND llog_enddate_tstamp IS NULL; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":lotid" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
<!--    
    <query id="qryl4tqrcnxn14">
        <query.body value="
            SELECT LL.*, LOT.*
            FROM Login_Attempts LA, Login_Logs LL 
            INNER JOIN LogOut_Types LOT
            ON lotid = llog_endtype
            WHERE atptid = llog_atpt 
            AND llog_enddate_tstamp IS NOT NULL  
            AND atpt_accid = :uid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>-->
	
    <query id="qryl4tqrcnxn15">
        <query.body value="
            SELECT LL.*
            FROM Login_Attempts LA, Login_Logs LL 
            WHERE atptid = llog_atpt 
            AND llog_enddate_tstamp IS NULL  
            AND atpt_ssid = :ssid
            AND atpt_accid = :uid 
            ORDER BY atpt_date_tstamp DESC
            LIMIT 1 ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="Contrairement Ã  qryl4tqrcnxn11, qryl4tqrcnxn15 ne rÃ©cupÃ¨re que la derniÃ¨re connexion en fonction de SID et UID." />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":ssid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ************** PWD RECOVERY ************** -->
    <query id="qryl4tqrrecn1">
        <query.body value="
            INSERT INTO PwdRecoveries (prec_accid,prec_ssid,prec_key,prec_code_vald,prec_locip,prec_eml_used,pred_evdate,pred_evdate_tstamp,pred_xdate,pred_xdate_tstamp) VALUES
            (:prec_accid,:prec_ssid,:prec_key,:prec_code_vald,:prec_locip,:prec_eml_used,:pred_evdate,:pred_evdate_tstamp,:pred_xdate,:pred_xdate_tstamp);"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":prec_accid" value="" />
            <qparam id=":prec_ssid" value="" />
            <qparam id=":prec_key" value="" />
            <qparam id=":prec_code_vald" value="" />
            <qparam id=":prec_locip" value="" />
            <qparam id=":prec_eml_used" value="" />
            <qparam id=":pred_evdate" value="" />
            <qparam id=":pred_evdate_tstamp" value="" />
            <qparam id=":pred_xdate" value="" />
            <qparam id=":pred_xdate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrrecn2">
        <query.body value="
            UPDATE PwdRecoveries 
            SET prec_eid = :eid
            WHERE precid = :id; "/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrrecn3">
        <query.body value="
            SELECT *
            FROM PwdRecoveries 
            WHERE prec_accid = :uid 
            AND pred_udate IS NULL  
            AND pred_udate_tstamp IS NULL 
            AND pred_xdate_tstamp >= :now 
            AND precid NOT IN ( SELECT prccl_precid FROM PwdRec_Ccl );"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":now" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrrecn4">
        <query.body value="
            INSERT INTO PwdRec_Ccl (prccl_precid,prccl_cdate,prccl_cdate_tstamp) VALUES
            (:precid,:cdate,:cdate_tstamp);"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":precid" value="" />
            <qparam id=":cdate" value="" />
            <qparam id=":cdate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tqrrecn5">
        <query.body value="
            SELECT *
            FROM PwdRecoveries 
            WHERE prec_eid = :prec_eid 
            AND precid NOT IN ( SELECT prccl_precid FROM PwdRec_Ccl );"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":prec_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tqrrecn6">
        <query.body value="
            SELECT *
            FROM PwdRecoveries 
            WHERE prec_eid = :prec_eid 
            AND pred_xdate_tstamp >= :now  
            AND precid NOT IN ( SELECT prccl_precid FROM PwdRec_Ccl );"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":prec_eid" value="" />
            <qparam id=":now" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrrecn7">
        <query.body value="
            SELECT * 
            FROM PwdRec_Ccl
            WHERE prccl_precid = :precid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":precid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrrecn8">
        <query.body value="
        UPDATE PwdRecoveries  
        SET pred_udate = :date, pred_udate_tstamp = :tstamp
        WHERE precid = :precid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /> <!-- get, set, update, delete, sqlproc, sqlproc_r --> 
	<query.note value="" />
        <query.params.in>
            <qparam id=":precid" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ************** EMAILAC ************** -->
    <query id="qryl4emlacn1">
        <query.body value="
            INSERT INTO EmailActv_Logs (emaclg_exp_eml,emaclg_rcpt_eml,emaclg_rcpt_uid,emaclg_subj,emaclg_type,emaclg_mdlid,emaclg_sdate_tstamp,emaclg_catg) VALUES
            (:exp,:rcpt,:rcpt_uid,:subj,:type,:mdlid,:tstamp,:catg);"/>
        <query.dbname value="tqr_account_vb1_prod" />
        <query.type value="set" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":exp" value="" />
            <qparam id=":rcpt" value="" />
            <qparam id=":rcpt_uid" value="" />
            <qparam id=":subj" value="" />
            <qparam id=":type" value="" />
            <qparam id=":mdlid" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":catg" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ************** ERROR LOG ************** -->
    <query id="qryl4errlgn1">
        <query.body value="
            INSERT INTO ErrorLogs (errlg_code,errlg_msg,errlg_ssid,errlg_uid,errlg_ueid,errlg_upsd,errlg_srvip,errlg_srvname,errlg_file,errlg_class,errlg_func,errlg_line,errlg_uri,errlg_referer,errlg_locip,errlg_user_agent,errlg_trace,errlg_evdate,errlg_evdate_tstamp) VALUES
			(:err_code, :err_msg, :err_ssid, :err_uid, :err_ueid, :err_upsd, :err_srvip, :err_srvname, :err_file, :err_class, :err_func, :err_line, :err_uri, :err_referer, :err_locip, :err_user_agent, :err_trace, CURRENT_TIMESTAMP(), :tstamp) ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":err_code" value="" />
            <qparam id=":err_msg" value="" />
			
            <qparam id=":err_ssid" value="" />
            <qparam id=":err_uid" value="" />
            <qparam id=":err_ueid" value="" />
            <qparam id=":err_upsd" value="" />
			<qparam id=":err_locip" value="" />
			
            <qparam id=":err_srvip" value="" />
            <qparam id=":err_srvname" value="" />
            <qparam id=":err_file" value="" />
            <qparam id=":err_class" value="" />
            <qparam id=":err_func" value="" />
            <qparam id=":err_line" value="" />
			
            <qparam id=":err_uri" value="" />
            <qparam id=":err_referer" value="" />
            <qparam id=":err_user_agent" value="" />
            <qparam id=":err_trace" value="" />
			
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4errlgn2">
        <query.body value="
            UPDATE ErrorLogs 
            SET errlg_eid = :eid
            WHERE errlgid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ************** TRENQR VERSIONS ************** -->
	
    <query id="qryl4tqrvern1">
        <query.body value="
            SELECT * 
            FROM TrenqrVersions
            WHERE tqrver_tabid = :verid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":verid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ************** BUGZY SCOPE ************** -->
    
    <query id="qryl4bgzyn1">
        <query.body value="
        INSERT INTO Bugzy_Reports (bgzyr_accid,bgzyr_type,bgzyr_fgvn_where,bgzyr_fgvn_when,bgzyr_message,bgzyr_lang,bgzyr_url,bgzyr_scrn_w,bgzyr_scrn_h,bgzyr_ssid,bgzyr_srvip,bgzyr_srvname,bgzyr_user_agent,bgzyr_locip,bgzyr_evdate,bgzyr_evdate_tstamp) VALUES 
        (:accid,:type,:fgvn_where,:fgvn_when,:message,:lang,:url,:scrn_w,:scrn_h,:ssid,:srvip,:srvname,:user_agent,:locip,:now,:tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":type" value="" />
            <qparam id=":fgvn_where" value="" />
            <qparam id=":fgvn_when" value="" />
            <qparam id=":message" value="" />
            <qparam id=":lang" value="" />
            <qparam id=":url" value="" />
            <qparam id=":scrn_w" value="" />
            <qparam id=":scrn_h" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":srvip" value="" />
            <qparam id=":srvname" value="" />
            <qparam id=":user_agent" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":now" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ************** CHATBOX_CONF SCOPE ************** -->
    <!--
        Le scope prend en compte les requetes inhÃ©rentes Ã  la configuration ChatBox mais aussi des statut et autres modules annexes
    -->
    <query id="qryl4chbxn1">
        <query.body value="
        SELECT *
	FROM ChatBox 
        WHERE chbx_uid = :uid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxn2">
        <query.body value="
        SELECT *
	FROM CB_UserSts, ChatBox 
        WHERE cb_ustst_chbx = chbxid
        AND chbx_uid = :uid
        ORDER BY cb_usts_sdate_tstamp DESC
        LIMIT :limit; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxn3">
        <query.body value="
            SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, conv_actor, conv_target, srh_pfl_uid as tgt_uid, srh_pfl_ueid as tgt_ueid, srh_pfl_upsd as tgt_upsd, srh_pfl_ufn as tgt_ufn, pdacc_gdr as tgt_ugdr, srh_pfl_ppic as tgt_uppic, pdacc_todelete as tgt_todel, srh_pfl_ufols as tgt_ufols, srh_pfl_ucap as tgt_ucap, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
            FROM ChatBox_Messages, ChatBox_Conversations, SRH_Profiles, Proddb_Accounts
            WHERE 
            (
                ( chmsg_actor = :pvt_uid1 AND chmsg_target IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                    WHEN tbrel_acc_actor = :pvt_uid2 THEN tbrel_acc_targ
                                    ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid3 OR tbrel_acc_targ = :pvt_uid4 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                ) 
                OR 
                ( chmsg_target = :pvt_uid5 AND chmsg_actor IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy2 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                        WHEN tbrel_acc_actor = :pvt_uid6 THEN tbrel_acc_targ
                                        ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid7 OR tbrel_acc_targ = :pvt_uid8 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                )
            )
            AND chmsg_convid = convid
            AND srh_pfl_uid = ( 
            CASE 
                WHEN conv_actor = :pvt_uid9 THEN conv_target
                ELSE conv_actor
            END )
            AND pdaccid = ( 
            CASE 
                WHEN conv_actor = :pvt_uid10 THEN conv_target
                ELSE conv_actor
            END )
            HAVING chmsg_fe_cdate_tstamp IN (SELECT MAX(chmsg_fe_cdate_tstamp) FROM ChatBox_Messages GROUP BY chmsg_convid)
            ORDER BY chmsg_fe_cdate_tstamp DESC
            LIMIT :offset, :limit;
        "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="Rechercher une conversation" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":pvt_uid8" value="" />
            <qparam id=":pvt_uid9" value="" />
            <qparam id=":pvt_uid10" value="" />
            <qparam id=":offset" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxn4">
        <query.body value="
            SELECT srh_pfl_uid as tgt_uid, srh_pfl_ueid as tgt_ueid, srh_pfl_upsd as tgt_upsd, srh_pfl_ufn as tgt_ufn, pdacc_gdr as tgt_ugdr, srh_pfl_ppic as tgt_uppic, pdacc_todelete as tgt_todel, srh_pfl_ufols as tgt_ufols, srh_pfl_ucap as tgt_ucap
            FROM SRH_Profiles
            INNER JOIN Proddb_Accounts ON srh_pfl_uid = pdaccid
            WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_pfl_uid IN 
            ( 
                SELECT (
                    CASE 
                        WHEN tbrel_acc_actor = :pvt_uid1 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                    END ) as uid 
                FROM VM_TabRels 
                WHERE tbrel_relsts = 3 
                AND ( tbrel_acc_actor = :pvt_uid2 OR tbrel_acc_targ = :pvt_uid3 )
                AND tbrel_edate_tstamp IS NULL
            )
            AND srh_pfl_uid NOT IN (
                SELECT ( CASE 
                    WHEN conv_actor = :pvt_uid4 THEN conv_target
                    ELSE conv_actor
                END ) as uid
                FROM ChatBox_Conversations
                WHERE ( conv_actor = :pvt_uid5 OR conv_target = :pvt_uid6 )
            )
            ORDER BY srh_pfl_upsd ASC
            LIMIT :offset, :limit;"/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":offset" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxn5">
        <query.body value="
            SELECT convid, conv_eid, conv_actor, conv_target, srh_pfl_uid as tgt_uid, srh_pfl_ueid as tgt_ueid, srh_pfl_upsd as tgt_upsd, srh_pfl_ufn as tgt_ufn, pdacc_gdr as tgt_ugdr, srh_pfl_ppic as tgt_uppic, pdacc_todelete as tgt_todel, srh_pfl_ufols as tgt_ufols, srh_pfl_ucap as tgt_ucap 
            FROM ChatBox_Conversations, SRH_Profiles, Proddb_Accounts
            WHERE 
            (
                ( conv_actor = :pvt_uid1 AND conv_target IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                    WHEN tbrel_acc_actor = :pvt_uid2 THEN tbrel_acc_targ
                                    ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid3 OR tbrel_acc_targ = :pvt_uid4 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                ) 
                OR 
                ( conv_target = :pvt_uid5 AND conv_actor IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy2 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                        WHEN tbrel_acc_actor = :pvt_uid6 THEN tbrel_acc_targ
                                        ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid7 OR tbrel_acc_targ = :pvt_uid8 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                )
            )
            AND srh_pfl_uid = 
            ( 
                CASE 
                    WHEN conv_actor = :pvt_uid9 THEN conv_target
                    ELSE conv_actor
                END 
            )
            AND pdaccid = 
            ( 
                CASE 
                    WHEN conv_actor = :pvt_uid10 THEN conv_target
                    ELSE conv_actor
                END 
            )
            AND convid NOT IN (
                SELECT DISTINCT chmsg_convid
                FROM ChatBox_Messages 
            )
            LIMIT :offset, :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":pvt_uid8" value="" />
            <qparam id=":pvt_uid9" value="" />
            <qparam id=":pvt_uid10" value="" />
            <qparam id=":offset" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4chbxn6">
        <query.body value="
            SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, conv_actor, conv_target, srh_pfl_uid as tgt_uid, srh_pfl_ueid as tgt_ueid, srh_pfl_upsd as tgt_upsd, srh_pfl_ufn as tgt_ufn, pdacc_gdr as tgt_ugdr, srh_pfl_ppic as tgt_uppic, pdacc_todelete as tgt_todel, srh_pfl_ufols as tgt_ufols, srh_pfl_ucap as tgt_ucap, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
            FROM ChatBox_Messages, ChatBox_Conversations, SRH_Profiles, Proddb_Accounts
            WHERE 
            (
                ( chmsg_actor = :pvt_uid1 AND chmsg_target IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                    WHEN tbrel_acc_actor = :pvt_uid2 THEN tbrel_acc_targ
                                    ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid3 OR tbrel_acc_targ = :pvt_uid4 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                ) 
                OR 
                ( chmsg_target = :pvt_uid5 AND chmsg_actor IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy2 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                        WHEN tbrel_acc_actor = :pvt_uid6 THEN tbrel_acc_targ
                                        ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid7 OR tbrel_acc_targ = :pvt_uid8 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                )
            )
            AND chmsg_convid = convid
            AND srh_pfl_uid = ( 
            CASE 
                WHEN conv_actor = :pvt_uid9 THEN conv_target
                ELSE conv_actor
            END )
            AND pdaccid = ( 
            CASE 
                WHEN conv_actor = :pvt_uid10 THEN conv_target
                ELSE conv_actor
            END )
            AND ( chmsg_nxtdldate_tstamp IS NULL AND chmsg_sd_date_tstamp IS NULL ) 
            AND conv_nxtdldate_tstamp IS NULL
            HAVING chmsg_fe_cdate_tstamp IN (
                SELECT MAX(chmsg_fe_cdate_tstamp) 
                FROM ChatBox_Messages 
                WHERE (
                    ( chmsg_actor = :pvt_uid11 AND chmsg_ad_date_tstamp IS NULL ) OR ( chmsg_target = :pvt_uid12 AND chmsg_td_date_tstamp IS NULL )
                )
                GROUP BY chmsg_convid
            )
            ORDER BY chmsg_fe_cdate_tstamp DESC
            LIMIT :offset, :limit;
        "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Rechercher une conversation" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":pvt_uid8" value="" />
            <qparam id=":pvt_uid9" value="" />
            <qparam id=":pvt_uid10" value="" />
            <qparam id=":pvt_uid11" value="" />
            <qparam id=":pvt_uid12" value="" />
            <qparam id=":offset" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4chbxn6_rdm"> 
        <query.body value="
            SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, conv_actor, conv_target, srh_pfl_uid as tgt_uid, srh_pfl_ueid as tgt_ueid, srh_pfl_upsd as tgt_upsd, srh_pfl_ufn as tgt_ufn, pdacc_gdr as tgt_ugdr, srh_pfl_ppic as tgt_uppic, pdacc_todelete as tgt_todel, srh_pfl_ufols as tgt_ufols, srh_pfl_ucap as tgt_ucap, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
            FROM ChatBox_Messages, ChatBox_Conversations, SRH_Profiles, Proddb_Accounts
            WHERE 
            (
                ( chmsg_actor = :pvt_uid1 AND chmsg_target IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
                    )
                ) 
                OR 
                ( chmsg_target = :pvt_uid5 AND chmsg_actor IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy2 IN BOOLEAN MODE)
                    )
                )
            )
            AND chmsg_convid = convid
            AND srh_pfl_uid = ( 
            CASE 
                WHEN conv_actor = :pvt_uid9 THEN conv_target
                ELSE conv_actor
            END )
            AND pdaccid = ( 
            CASE 
                WHEN conv_actor = :pvt_uid10 THEN conv_target
                ELSE conv_actor
            END )
            AND ( chmsg_nxtdldate_tstamp IS NULL AND chmsg_sd_date_tstamp IS NULL ) 
            AND conv_nxtdldate_tstamp IS NULL
            HAVING chmsg_fe_cdate_tstamp IN (
                SELECT MAX(chmsg_fe_cdate_tstamp) 
                FROM ChatBox_Messages 
                WHERE (
                    ( chmsg_actor = :pvt_uid11 AND chmsg_ad_date_tstamp IS NULL ) OR ( chmsg_target = :pvt_uid12 AND chmsg_td_date_tstamp IS NULL )
                )
                GROUP BY chmsg_convid
            )
            ORDER BY chmsg_fe_cdate_tstamp DESC
            LIMIT :offset, :limit;
        "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
        <query.note value="Rechercher une conversation mÃªme si les deux protagonistes ne sont plus amis" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid9" value="" />
            <qparam id=":pvt_uid10" value="" />
            <qparam id=":pvt_uid11" value="" />
            <qparam id=":pvt_uid12" value="" />
            <qparam id=":offset" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxn7">
        <query.body value="
            SELECT srh_pfl_uid as tgt_uid, srh_pfl_ueid as tgt_ueid, srh_pfl_upsd as tgt_upsd, srh_pfl_ufn as tgt_ufn, pdacc_gdr as tgt_ugdr, srh_pfl_ppic as tgt_uppic, pdacc_todelete as tgt_todel, srh_pfl_ufols as tgt_ufols, srh_pfl_ucap as tgt_ucap
            FROM SRH_Profiles
            INNER JOIN Proddb_Accounts ON srh_pfl_uid = pdaccid
            WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
            AND srh_pfl_uid IN 
            ( 
                SELECT (
                    CASE 
                        WHEN tbrel_acc_actor = :pvt_uid1 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                    END ) as uid 
                FROM VM_TabRels 
                WHERE tbrel_relsts = 3 
                AND ( tbrel_acc_actor = :pvt_uid2 OR tbrel_acc_targ = :pvt_uid3 )
                AND tbrel_edate_tstamp IS NULL
            )
            AND srh_pfl_uid NOT IN 
            (
                SELECT DISTINCT ( 
                    CASE 
                        WHEN conv_actor = :pvt_uid4 THEN conv_target
                        ELSE conv_actor
                    END 
                ) as uid
                FROM ChatBox_Conversations 
                LEFT JOIN ChatBox_Messages ON convid = chmsg_convid
                WHERE ( conv_actor = :pvt_uid5 OR conv_target = :pvt_uid6 )
                AND
                (
                    ( chmsg_convid IS NULL )
                    OR
                    (
                        ( 
                            ( chmsg_actor = :pvt_uid7 AND chmsg_ad_date_tstamp IS NULL )
                            OR
                            ( chmsg_target = :pvt_uid8 AND chmsg_td_date_tstamp IS NULL )
                        )
                    )
                )
                AND ( conv_nxtdldate_tstamp IS NULL )
            )
            ORDER BY srh_pfl_upsd ASC
            LIMIT :offset, :limit;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":pvt_uid8" value="" />
            <qparam id=":offset" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxn8">
        <query.body value="
            SELECT convid, conv_eid, conv_actor, conv_target, srh_pfl_uid as tgt_uid, srh_pfl_ueid as tgt_ueid, srh_pfl_upsd as tgt_upsd, srh_pfl_ufn as tgt_ufn, pdacc_gdr as tgt_ugdr, srh_pfl_ppic as tgt_uppic, pdacc_todelete as tgt_todel, srh_pfl_ufols as tgt_ufols, srh_pfl_ucap as tgt_ucap 
            FROM ChatBox_Conversations, SRH_Profiles, Proddb_Accounts
            WHERE 
            (
                ( conv_actor = :pvt_uid1 AND conv_target IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy1 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                    WHEN tbrel_acc_actor = :pvt_uid2 THEN tbrel_acc_targ
                                    ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid3 OR tbrel_acc_targ = :pvt_uid4 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                ) 
                OR 
                ( conv_target = :pvt_uid5 AND conv_actor IN 
                    (
                        SELECT srh_pfl_uid
                        FROM SRH_Profiles
                        WHERE MATCH(srh_pfl_ufn, srh_pfl_upsd) AGAINST (:sqy2 IN BOOLEAN MODE)
                        AND srh_pfl_uid IN 
                        ( 
                            SELECT (
                                CASE 
                                        WHEN tbrel_acc_actor = :pvt_uid6 THEN tbrel_acc_targ
                                        ELSE tbrel_acc_actor
                                END ) as kw_uid 
                            FROM VM_TabRels 
                            WHERE tbrel_relsts = 3 
                            AND ( tbrel_acc_actor = :pvt_uid7 OR tbrel_acc_targ = :pvt_uid8 )
                            AND tbrel_edate_tstamp IS NULL
                        )
                    )
                )
            )
            AND srh_pfl_uid = 
            ( 
                CASE 
                    WHEN conv_actor = :pvt_uid9 THEN conv_target
                    ELSE conv_actor
                END 
            )
            AND pdaccid = 
            ( 
                CASE 
                    WHEN conv_actor = :pvt_uid10 THEN conv_target
                    ELSE conv_actor
                END 
            )
            AND convid NOT IN (
                SELECT DISTINCT chmsg_convid
                FROM ChatBox_Messages 
            )
            AND conv_nxtdldate_tstamp IS NULL
            LIMIT :offset, :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":sqy1" value="" />
            <qparam id=":sqy2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":pvt_uid3" value="" />
            <qparam id=":pvt_uid4" value="" />
            <qparam id=":pvt_uid5" value="" />
            <qparam id=":pvt_uid6" value="" />
            <qparam id=":pvt_uid7" value="" />
            <qparam id=":pvt_uid8" value="" />
            <qparam id=":pvt_uid9" value="" />
            <qparam id=":pvt_uid10" value="" />
            <qparam id=":offset" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- ************** CHATBOX_CONVERSATIONS SCOPE ************** -->
    
    <query id="qryl4chbxcvn1">
        <query.body value="
        SELECT CV.*, 
	PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
	PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
	FROM ChatBox_Conversations CV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE conv_actor = PA_ACT.pdaccid AND conv_target = PA_TGT.pdaccid 
        AND convid = :cvid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn2">
        <query.body value="
        SELECT CV.*, 
		PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
		PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
		FROM ChatBox_Conversations CV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE conv_actor = PA_ACT.pdaccid AND conv_target = PA_TGT.pdaccid 
        AND conv_eid = :cveid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":cveid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn3">
        <query.body value="
        SELECT CV.*, 
		PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
		PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
		FROM ChatBox_Conversations CV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE conv_actor = PA_ACT.pdaccid AND conv_target = PA_TGT.pdaccid 
        AND (
            ( conv_actor = :actor1 AND conv_target = :target1 )
            OR
            ( conv_actor = :target2 AND conv_target = :actor2 )
        )
        ORDER BY conv_cdate_tstamp DESC
        LIMIT 10; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":target1" value="" />
            <qparam id=":target2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn4"> 
        <query.body value="
        INSERT INTO ChatBox_Conversations (conv_actor,conv_target,conv_locip,conv_useragt,conv_cdate,conv_cdate_tstamp) VALUES 
        (:actor,:target,:locip,:useragt,:cdate, :cdate_tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":actor" value="" />
            <qparam id=":target" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":useragt" value="" />
            <qparam id=":cdate" value="" />
            <qparam id=":cdate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn5">
        <query.body value="
            UPDATE ChatBox_Conversations 
            SET conv_eid = :eid
            WHERE convid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn6">
        <query.body value="
        SELECT CBM.*, conv_eid chmsg_conveid
		FROM ChatBox_Messages CBM, ChatBox_Conversations
        WHERE CBM.chmsg_convid = convid 
        AND convid = :cvid
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- J'avoue que j'ai du chercher longtemps avant de trouver la solution. Cette requete mÃ©rite d'Ãªtre bichonnÃ© -->
    <query id="qryl4chbxcvn7">
        <query.body value="
        SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, chmsg_target, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
		FROM ChatBox_Messages, ChatBox_Conversations  
        WHERE ( chmsg_actor = :actor1 OR chmsg_target = :actor2 ) 
        AND chmsg_convid = convid
        HAVING chmsg_fe_cdate_tstamp IN (SELECT MAX(chmsg_fe_cdate_tstamp) FROM ChatBox_Messages GROUP BY chmsg_convid)
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="Liste les conversations en les triant par date d'ajout du dernier message. On rÃ©cupÃ¨re par la mÃªme occasion la date de lecture" />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn8">
        <query.body value="
        DELETE FROM ChatBox_Conversations 
        WHERE convid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn9">
        <query.body value="
        UPDATE ChatBox_Conversations
        SET conv_ad_date = :date,
        conv_ad_date_tstamp = :tstamp,
        conv_ad_rsncaz = :rsn
        WHERE convid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
            <qparam id=":rsn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn10">
        <query.body value="
        UPDATE ChatBox_Conversations
        SET conv_td_date = :date,
        conv_td_date_tstamp = :tstamp,
        conv_td_rsncaz = :rsn
        WHERE convid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
            <qparam id=":rsn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn11">
        <query.body value="
        UPDATE ChatBox_Conversations
        SET conv_sd_date = :date,
        conv_sd_date_tstamp = :tstamp,
        conv_sd_rsncaz = :rsn
        WHERE convid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
            <qparam id=":rsn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn12">
        <query.body value="
        UPDATE ChatBox_Conversations
        SET conv_nxtdldate = :date,
        conv_nxtdldate_tstamp = :tstamp
        WHERE convid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn13">
        <query.body value="
        SELECT chmsgid, chmsg_eid, chmsg_actor, chmsg_ad_date_tstamp, chmsg_target, chmsg_td_date_tstamp 
		FROM ChatBox_Messages 
        WHERE chmsg_convid = :cvid 
        AND chmsg_fe_cdate_tstamp &lt;= :time 
        AND 
        (
            ( chmsg_actor = :uid1 AND chmsg_ad_date_tstamp IS NULL ) 
            OR
            ( chmsg_target = :uid2 AND chmsg_td_date_tstamp IS NULL )
        ); "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid1" value="" />
            <qparam id=":uid2" value="" />
            <qparam id=":cvid" value="" />
            <qparam id=":time" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn14">
        <query.body value="
        SELECT CBM.*, conv_eid chmsg_conveid
		FROM ChatBox_Messages CBM, ChatBox_Conversations
        WHERE CBM.chmsg_convid = convid 
        AND convid = :cvid 
        AND chmsg_nxtdldate_tstamp IS NULL 
        ORDER BY chmsg_fe_cdate_tstamp DESC 
        LIMIT :limit; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn15">
        <query.body value="
        SELECT CV.*, 
		PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
		PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
		FROM ChatBox_Conversations CV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE conv_actor = PA_ACT.pdaccid AND conv_target = PA_TGT.pdaccid 
        AND conv_nxtdldate_tstamp IS NULL 
        AND conv_eid = :cveid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cveid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn16">
        <query.body value="
        SELECT CV.*, 
		PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
		PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
		FROM ChatBox_Conversations CV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE conv_actor = PA_ACT.pdaccid AND conv_target = PA_TGT.pdaccid 
        AND conv_nxtdldate_tstamp IS NULL 
        AND convid = :cvid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- DÃ©rivÃ©e de qryl4chbxcvn7 -->
    <query id="qryl4chbxcvn17">
        <query.body value="
        SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, chmsg_target, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
		FROM ChatBox_Messages, ChatBox_Conversations  
        WHERE ( chmsg_actor = :actor1 OR chmsg_target = :actor2 ) 
        AND chmsg_convid = convid
        AND conv_nxtdldate_tstamp IS NULL AND conv_sd_date_tstamp IS NULL
        HAVING chmsg_fe_cdate_tstamp IN (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages
            WHERE chmsg_nxtdldate_tstamp IS NULL AND chmsg_sd_date_tstamp IS NULL
            AND (
                ( chmsg_actor = :pvt_uid1 AND chmsg_ad_date_tstamp IS NULL )
                OR
                ( chmsg_target = :pvt_uid2 AND chmsg_td_date_tstamp IS NULL )
            )
            GROUP BY chmsg_convid
        )
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
	<query.note value="Liste les conversations en les triant par date d'ajout du dernier message. On rÃ©cupÃ¨re par la mÃªme occasion la date de lecture" />
        <query.params.in>
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn18">
        <query.body value="
        SELECT CBM.*, conv_eid, 
	PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
	PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
	FROM ChatBox_Messages CBM, ChatBox_Conversations CCV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE chmsg_convid = CCV.convid
        AND chmsg_actor = PA_ACT.pdaccid 
        AND chmsg_target = PA_TGT.pdaccid
        AND convid = :convid
        AND ( chmsg_ad_date_tstamp IS NULL OR chmsg_td_date_tstamp IS NULL ); "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":convid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn19">
        <query.body value="
        UPDATE ChatBox_Conversations
        SET 
        conv_ad_date = NULL, conv_ad_date_tstamp = NULL, conv_ad_rsncaz = NULL,
        conv_td_date = NULL, conv_td_date_tstamp = NULL, conv_td_rsncaz = NULL,
        conv_sd_date = NULL, conv_sd_date_tstamp = NULL,
        conv_nxtdldate = NULL, conv_nxtdldate_tstamp = NULL
        WHERE convid = :convid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":convid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn20">
        <query.body value="
        UPDATE ChatBox_Conversations
        SET conv_ad_date = NULL, conv_ad_date_tstamp = NULL, conv_ad_rsncaz = NULL
        WHERE convid = :convid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":convid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn21">
        <query.body value="
        UPDATE ChatBox_Conversations
        SET conv_td_date = NULL, conv_td_date_tstamp = NULL, conv_td_rsncaz = NULL
        WHERE convid = :convid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":convid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn22">
        <query.body value="
        SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, chmsg_target, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
		FROM ChatBox_Messages, ChatBox_Conversations  
        WHERE ( chmsg_actor = :actor1 OR chmsg_target = :actor2 ) 
        AND chmsg_convid = convid
        AND convid != :pvt_cvid1
        AND chmsg_fe_cdate_tstamp &lt;= (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages
            WHERE chmsg_convid = :pvt_cvid2
        )
        HAVING chmsg_fe_cdate_tstamp IN (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages 
            GROUP BY chmsg_convid
        )
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Liste les conversations en les triant par date d'ajout du dernier message. On rÃ©cupÃ¨re par la mÃªme occasion la date de lecture" />
        <query.params.in>
            <qparam id=":pvt_cvid1" value="" />
            <qparam id=":pvt_cvid2" value="" />
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn23">
        <query.body value="
        SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, chmsg_target, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
		FROM ChatBox_Messages, ChatBox_Conversations  
        WHERE ( chmsg_actor = :actor1 OR chmsg_target = :actor2 ) 
        AND chmsg_convid = convid
        AND convid != :pvt_cvid1
        AND chmsg_fe_cdate_tstamp &gt;= (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages
            WHERE chmsg_convid = :pvt_cvid2
        )
        HAVING chmsg_fe_cdate_tstamp IN (SELECT MAX(chmsg_fe_cdate_tstamp) FROM ChatBox_Messages GROUP BY chmsg_convid)
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Liste les conversations en les triant par date d'ajout du dernier message. On rÃ©cupÃ¨re par la mÃªme occasion la date de lecture" />
        <query.params.in>
            <qparam id=":pvt_cvid1" value="" />
            <qparam id=":pvt_cvid2" value="" />
            <qparam id=":time" value="" />
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn24">
        <query.body value="
        SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, chmsg_target, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
		FROM ChatBox_Messages, ChatBox_Conversations  
        WHERE ( chmsg_actor = :actor1 OR chmsg_target = :actor2 ) 
        AND chmsg_convid = convid
        AND conv_nxtdldate_tstamp IS NULL AND conv_sd_date_tstamp IS NULL
        AND convid != :pvt_cvid1
        AND chmsg_fe_cdate_tstamp &lt;= (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages
            WHERE chmsg_convid = :pvt_cvid2
        )
        HAVING chmsg_fe_cdate_tstamp IN (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages
            WHERE chmsg_nxtdldate_tstamp IS NULL AND chmsg_sd_date_tstamp IS NULL
            AND (
                ( chmsg_actor = :pvt_uid1 AND chmsg_ad_date_tstamp IS NULL )
                OR
                ( chmsg_target = :pvt_uid2 AND chmsg_td_date_tstamp IS NULL )
            )
            GROUP BY chmsg_convid
        )
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="Liste les conversations en les triant par date d'ajout du dernier message. On rÃ©cupÃ¨re par la mÃªme occasion la date de lecture" />
        <query.params.in>
            <qparam id=":pvt_cvid1" value="" />
            <qparam id=":pvt_cvid2" value="" />
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxcvn25">
        <query.body value="
        SELECT chmsg_convid, conv_eid, chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, chmsg_target, chmsg_cdate_tstamp, chmsg_fe_cdate_tstamp, chmsg_rdate_tstamp 
		FROM ChatBox_Messages, ChatBox_Conversations  
        WHERE ( chmsg_actor = :actor1 OR chmsg_target = :actor2 ) 
        AND chmsg_convid = convid
        AND conv_nxtdldate_tstamp IS NULL AND conv_sd_date_tstamp IS NULL
        AND convid != :pvt_cvid
        AND chmsg_fe_cdate_tstamp &gt;= (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages
            WHERE chmsg_convid = :pvt_cvid2
        )
        HAVING chmsg_fe_cdate_tstamp IN (
            SELECT MAX(chmsg_fe_cdate_tstamp) 
            FROM ChatBox_Messages
            WHERE chmsg_nxtdldate_tstamp IS NULL AND chmsg_sd_date_tstamp IS NULL
            AND (
                ( chmsg_actor = :pvt_uid1 AND chmsg_ad_date_tstamp IS NULL )
                OR
                ( chmsg_target = :pvt_uid2 AND chmsg_td_date_tstamp IS NULL )
            )
            GROUP BY chmsg_convid
        )
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="Liste les conversations en les triant par date d'ajout du dernier message. On rÃ©cupÃ¨re par la mÃªme occasion la date de lecture" />
        <query.params.in>
            <qparam id=":pvt_cvid1" value="" />
            <qparam id=":pvt_cvid2" value="" />
            <qparam id=":actor1" value="" />
            <qparam id=":actor2" value="" />
            <qparam id=":pvt_uid1" value="" />
            <qparam id=":pvt_uid2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ************** CHATBOX_MESSAGES SCOPE ************** -->
 
    <query id="qryl4chbxmsgn1">
        <query.body value="
        SELECT CBM.*, conv_eid, 
		PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
		PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
		FROM ChatBox_Messages CBM, ChatBox_Conversations CCV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE chmsg_convid = CCV.convid
        AND chmsg_actor = PA_ACT.pdaccid 
        AND chmsg_target = PA_TGT.pdaccid
        AND chmsgid = :cbmid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":cbmid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn2">
        <query.body value="
        SELECT CBM.*, conv_eid, 
		PA_ACT.pdaccid actid, PA_ACT.pdacc_eid acteid, PA_ACT.pdacc_gid actgid, PA_ACT.pdacc_ufn actfn, PA_ACT.pdacc_upsd actpsd, PA_ACT.pdacc_gdr actgdr, PA_ACT.pdacc_todelete acttodl,
		PA_TGT.pdaccid tgtid, PA_TGT.pdacc_eid tgteid, PA_TGT.pdacc_gid tgtgid, PA_TGT.pdacc_ufn tgtfn, PA_TGT.pdacc_upsd tgtpsd, PA_TGT.pdacc_gdr tgtgdr, PA_TGT.pdacc_todelete tgttodl
		FROM ChatBox_Messages CBM, ChatBox_Conversations CCV, Proddb_Accounts PA_ACT, Proddb_Accounts PA_TGT
        WHERE chmsg_convid = CCV.convid
        AND chmsg_actor = PA_ACT.pdaccid 
        AND chmsg_target = PA_TGT.pdaccid 
        AND chmsg_eid = :cbmeid; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
	<query.note value="" />
        <query.params.in>
            <qparam id=":cbmeid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn3"> 
        <query.body value="
        INSERT INTO ChatBox_Messages (chmsg_convid,chmsg_msg,chmsg_actor,chmsg_target,chmsg_fe_cdate,chmsg_fe_cdate_tstamp,chmsg_locip,chmsg_useragt,chmsg_cdate,chmsg_cdate_tstamp) VALUES 
        (:convid,:message,:actor,:target,:fetime,:fetime_tstamp,:locip,:useragt,:cdate,:cdate_tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":convid" value="" />
            <qparam id=":message" value="" />
            <qparam id=":actor" value="" />
            <qparam id=":target" value="" />
            <qparam id=":fetime" value="" />
            <qparam id=":fetime_tstamp" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":useragt" value="" />
            <qparam id=":cdate" value="" />
            <qparam id=":cdate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn4">
        <query.body value="
            UPDATE ChatBox_Messages 
            SET chmsg_eid = :eid
            WHERE chmsgid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn5">
        <query.body value="
            DELETE FROM ChatBox_Messages 
            WHERE chmsgid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4chbxmsgn6">
        <query.body value="
        SELECT chmsgid, chmsg_eid 
		FROM ChatBox_Messages 
        WHERE chmsg_convid = :cvid 
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn7">
        <query.body value="
        SELECT chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, PA_A.pdacc_eid chmsg_acteid, chmsg_target, PA_T.pdacc_eid chmsg_tgteid, chmsg_cdate, chmsg_cdate_tstamp, chmsg_fe_cdate, chmsg_fe_cdate_tstamp, chmsg_rdate, chmsg_rdate_tstamp, chmsg_ad_date, chmsg_ad_date_tstamp, chmsg_td_date, chmsg_td_date_tstamp  
		FROM ChatBox_Messages, Proddb_Accounts PA_A, Proddb_Accounts PA_T
        WHERE PA_A.pdaccid = chmsg_actor 
        AND PA_T.pdaccid = chmsg_target 
        AND chmsg_convid = :cvid 
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn8">
        <query.body value="
        (
            SELECT chmsgid, chmsg_eid 
            FROM ChatBox_Messages 
            WHERE chmsg_convid = :cvid1 
            AND chmsg_fe_cdate_tstamp &gt;= :pvt_tm1
            AND chmsgid != :pvt_cmid1
            ORDER BY chmsg_fe_cdate_tstamp DESC
            LIMIT :limit_gt
        )
        UNION
        (
            SELECT chmsgid, chmsg_eid 
            FROM ChatBox_Messages 
            WHERE chmsg_convid = :cvid2 
            AND chmsg_fe_cdate_tstamp &lt;= :pvt_tm2
            AND chmsgid != :pvt_cmid2
            ORDER BY chmsg_fe_cdate_tstamp DESC
            LIMIT :limit_lt
        )
        ORDER BY chmsg_fe_cdate_tstamp DESC;"/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid1" value="" />
            <qparam id=":cvid2" value="" />
            <qparam id=":pvt_tm1" value="" />
            <qparam id=":pvt_tm2" value="" />
            <qparam id=":pvt_cmid1" value="" />
            <qparam id=":pvt_cmid2" value="" />
            <qparam id=":limit_gt" value="" />
            <qparam id=":limit_lt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
	<query id="qryl4chbxmsgn9">
        <query.body value="
        (
            SELECT chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, PA_A.pdacc_eid chmsg_acteid, chmsg_target, PA_T.pdacc_eid chmsg_tgteid, chmsg_cdate, chmsg_cdate_tstamp, chmsg_fe_cdate, chmsg_fe_cdate_tstamp, chmsg_rdate, chmsg_rdate_tstamp, chmsg_ad_date, chmsg_ad_date_tstamp, chmsg_td_date, chmsg_td_date_tstamp, chmsg_sd_date, chmsg_sd_date_tstamp, chmsg_nxtdldate, chmsg_nxtdldate_tstamp  
            FROM ChatBox_Messages, Proddb_Accounts PA_A, Proddb_Accounts PA_T 
            WHERE PA_A.pdaccid = chmsg_actor 
            AND PA_T.pdaccid = chmsg_target 
            AND chmsg_convid = :cvid1 
            AND chmsg_fe_cdate_tstamp &gt;= :pvt_tm1
            AND chmsgid != :pvt_cmid1
            ORDER BY chmsg_fe_cdate_tstamp DESC
            LIMIT :limit_gt
        )
        UNION
        (
            SELECT chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, PA_A.pdacc_eid chmsg_acteid, chmsg_target, PA_T.pdacc_eid chmsg_tgteid, chmsg_cdate, chmsg_cdate_tstamp, chmsg_fe_cdate, chmsg_fe_cdate_tstamp, chmsg_rdate, chmsg_rdate_tstamp, chmsg_ad_date, chmsg_ad_date_tstamp, chmsg_td_date, chmsg_td_date_tstamp, chmsg_sd_date, chmsg_sd_date_tstamp, chmsg_nxtdldate, chmsg_nxtdldate_tstamp  
            FROM ChatBox_Messages, Proddb_Accounts PA_A, Proddb_Accounts PA_T 
            WHERE PA_A.pdaccid = chmsg_actor 
            AND PA_T.pdaccid = chmsg_target 
            AND chmsg_convid = :cvid2 
            AND chmsg_fe_cdate_tstamp &lt;= :pvt_tm2
            AND chmsgid != :pvt_cmid2
            ORDER BY chmsg_fe_cdate_tstamp DESC
            LIMIT :limit_lt
        )
        ORDER BY chmsg_fe_cdate_tstamp DESC; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid1" value="" />
            <qparam id=":cvid2" value="" />
            <qparam id=":pvt_cmid1" value="" />
            <qparam id=":pvt_cmid2" value="" />
            <qparam id=":pvt_tm1" value="" />
            <qparam id=":pvt_tm2" value="" />
            <qparam id=":limit_gt" value="" />
            <qparam id=":limit_lt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn10">
        <query.body value="
        UPDATE ChatBox_Messages
        SET chmsg_ad_date = :date,
        chmsg_ad_date_tstamp = :tstamp,
        chmsg_ad_rsncaz = :rsn
        WHERE chmsgid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
            <qparam id=":rsn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn11">
        <query.body value="
        UPDATE ChatBox_Messages
        SET chmsg_td_date = :date,
        chmsg_td_date_tstamp = :tstamp,
        chmsg_td_rsncaz = :rsn
        WHERE chmsgid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
            <qparam id=":rsn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn12">
        <query.body value="
        UPDATE ChatBox_Messages
        SET chmsg_sd_date = :date,
        chmsg_sd_date_tstamp = :tstamp,
        chmsg_sd_rsncaz = :rsn
        WHERE chmsgid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
            <qparam id=":rsn" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn13">
        <query.body value="
        UPDATE ChatBox_Messages
        SET chmsg_nxtdldate = :date,
        chmsg_nxtdldate_tstamp = :tstamp
        WHERE chmsgid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn14">
        <query.body value="
        SELECT chmsgid, chmsg_eid, chmsg_msg, chmsg_actor, PA_A.pdacc_eid chmsg_acteid, chmsg_target, PA_T.pdacc_eid chmsg_tgteid, chmsg_cdate, chmsg_cdate_tstamp, chmsg_fe_cdate, chmsg_fe_cdate_tstamp, chmsg_rdate, chmsg_rdate_tstamp, chmsg_ad_date, chmsg_ad_date_tstamp, chmsg_td_date, chmsg_td_date_tstamp, chmsg_sd_date, chmsg_sd_date_tstamp, chmsg_nxtdldate, chmsg_nxtdldate_tstamp  
        FROM ChatBox_Messages, Proddb_Accounts PA_A, Proddb_Accounts PA_T 
        WHERE PA_A.pdaccid = chmsg_actor 
        AND PA_T.pdaccid = chmsg_target 
        AND chmsg_convid = :cvid 
        AND chmsg_fe_cdate_tstamp &lt;= :pvt_tm
        AND chmsgid != :pvt_cmid
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
            <qparam id=":pvt_cmid" value="" />
            <qparam id=":pvt_tm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4chbxmsgn15">
        <query.body value="
        SELECT chmsgid, chmsg_eid 
        FROM ChatBox_Messages 
        WHERE chmsg_convid = :cvid 
        AND chmsg_fe_cdate_tstamp &lt;= :pvt_tm
        AND chmsgid != :pvt_cmid
        ORDER BY chmsg_fe_cdate_tstamp DESC
        LIMIT :limit "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":cvid" value="" />
            <qparam id=":pvt_tm" value="" />
            <qparam id=":pvt_cmid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4chbxmsgn16">
        <query.body value="
        SELECT count(chmsgid) cn  
        FROM ChatBox_Messages 
        WHERE chmsg_target = :uid 
        AND chmsg_rdate_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    	
    <query id="qryl4chbxmsgn16_gpby">
        <query.body value="
        SELECT count(DISTINCT chmsg_convid) cn  
        FROM ChatBox_Messages 
        WHERE chmsg_target = :uid 
        AND chmsg_rdate_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4chbxmsgn17">
        <query.body value="
        SELECT count(chmsgid) cn  
        FROM ChatBox_Messages 
        WHERE chmsg_target = :uid 
        AND chmsg_convid != :cpi 
        AND chmsg_rdate_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":cpi" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4chbxmsgn17_gpby">
        <query.body value="
        SELECT count(DISTINCT chmsg_convid) cn  
        FROM ChatBox_Messages 
        WHERE chmsg_target = :uid 
        AND chmsg_convid != :cpi 
        AND chmsg_rdate_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":cpi" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn18">
        <query.body value="
        SELECT count(chmsgid) cn  
        FROM ChatBox_Messages 
        WHERE chmsg_target = :uid 
        AND chmsg_convid = :cpi 
        AND chmsg_rdate_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":cpi" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn18_gpby">
        <query.body value="
        SELECT count(DISTINCT chmsg_convid) cn  
        FROM ChatBox_Messages 
        WHERE chmsg_target = :uid 
        AND chmsg_convid = :cpi 
        AND chmsg_rdate_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":cpi" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4chbxmsgn19">
        <query.body value="
        SELECT *  
        FROM URL_IN_CNTTS 
        INNER JOIN CHATBOX_MESSAGES ON uic_ucid = chmsgid
        WHERE chmsg_eid = uic_uceid 
        AND uic_uceid = :ceid 
        AND uic_uctp = 5; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":ceid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
        
        
    <!-- ************** USER_ACTIVTY_LOGS ************** -->
    
    <query id="qryl4ualgn1"> 
        <query.body value="
        INSERT INTO UserActyLogs (ualg_actuid,ualg_ssid,ualg_locip_str,ualg_locip_num,ualg_useragt,ualg_wkr,ualg_fe_url,ualg_srv_url,ualg_isax,ualg_adate,ualg_adate_tstamp,ualg_refobj,ualg_uatid,ualg_uanid) VALUES 
        (:uid,:ssid,:locip_str,:locip_num,:useragt,:wkr,:fe_url,:srv_url,:isax,:adate,:adate_tstamp,:refobj,:uatid,:uanid);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":locip_str" value="" />
            <qparam id=":locip_num" value="" />
            <qparam id=":useragt" value="" />
            <qparam id=":wkr" value="" />
            <qparam id=":fe_url" value="" />
            <qparam id=":srv_url" value="" />
            <qparam id=":isax" value="" />
            <qparam id=":adate" value="" />
            <qparam id=":adate_tstamp" value="" />
            <qparam id=":refobj" value="" />
            <qparam id=":uatid" value="" />
            <qparam id=":uanid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ualgn2">
        <query.body value="
        SELECT * 
		FROM UserActyLogs 
        WHERE ualg_actuid = :uid 
        AND ualg_adate_tstamp &lt;= :now
        AND ualg_adate_tstamp &gt;= :minus
        ORDER BY ualg_adate_tstamp DESC
        LIMIT :limit; "/>
		<query.dbname value="tqr_product_vb1_prod" />
		<query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":now" value="" />
            <qparam id=":minus" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- REACTIONS -->
    
    <query id="qryl4ualg_rctn1">
        <query.body value = "
        SELECT UserActyLogs.* 
		FROM UAL_ActionTypes, UserActyLogs
		INNER JOIN Reactions ON reactid = ualg_refobj 
		INNER JOIN Articles ON react_artid = artid
		WHERE uat_id = ualg_uatid 
		AND art_accid = :ref_uid1
		AND ualgid NOT IN (
				SELECT pmrpt_ualgid
				FROM Postman_Reports
				WHERE pmrpt_rcptuid = :ref_uid2
		)
		AND uat_id &gt;= 600 
		AND ualg_adate_tstamp &gt;= :ref_time 
		ORDER BY ualg_adate_tstamp ASC; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
       <query.note value="RÃ©cupÃ¨rer les activitÃ©s relatives Ã  l'ajout d'une REACTION sur un Article appartenant au compte pivot." />
       <query.params.in>
            <qparam id=":ref_uid1" value="" />
            <qparam id=":ref_uid2" value="" />
            <qparam id=":ref_time" value="" />
       </query.params.in>
       <query.params.out>
       </query.params.out>
    </query>
    
    <!-- EVALUATIONS -->
    <!-- 
        [NOTE 10-04-15] @BOR
        Je change le modÃ¨le standard pour des raisons de commoditÃ©s mais aussi pour des raisons expÃ©rimentales.
        J'ai besoin des donnÃ©es sur le propriÃ©taire de l'Article pour pouvoir vÃ©rifier dans quel cas nous nous trouvons.
    -->
    <query id="qryl4ualg_evln1">
        <query.body value = "
        SELECT UserActyLogs.*, artid aid, pdaccid aoid, pdacc_eid aoeid  
		FROM UAL_ActionTypes, UserActyLogs
		INNER JOIN Table_Evals ON tbevlid = ualg_refobj 
		INNER JOIN Articles ON tbevl_artid = artid
		INNER JOIN Proddb_Accounts ON art_accid = pdaccid
		WHERE uat_id = ualg_uatid 
		AND art_accid = :ref_uid1
		AND ualgid NOT IN (
				SELECT pmrpt_ualgid
				FROM Postman_Reports
				WHERE pmrpt_rcptuid = :ref_uid2
		)
		AND uat_id IN (700,701)  
		AND ualg_adate_tstamp &gt;= :ref_time 
		ORDER BY ualg_adate_tstamp ASC; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
       <query.note value="RÃ©cupÃ¨rer les activitÃ©s relatives Ã  l'ajout d'un EVALUATION sur un Article appartenant au compte pivot." />
       <query.params.in>
            <qparam id=":ref_uid1" value="" />
            <qparam id=":ref_uid2" value="" />
            <qparam id=":ref_time" value="" />
       </query.params.in>
       <query.params.out>
       </query.params.out>
    </query>
    
    <!-- USERTAGS -->
    
    <query id="qryl4ualg_ustgn1">
        <query.body value = "
        SELECT UserActyLogs.* 
		FROM UAL_ActionTypes, UserActyLogs
		INNER JOIN USERTAGs ON ustg_id = ualg_refobj 
		WHERE uat_id = ualg_uatid 
		AND ustg_tgtuid = :ref_uid1
		AND ualgid NOT IN (
				SELECT pmrpt_ualgid
				FROM Postman_Reports
				WHERE pmrpt_rcptuid = :ref_uid2
		)
		AND uat_id IN (1101,1102) 
		AND ualg_adate_tstamp &gt;= :ref_time 
		ORDER BY ualg_adate_tstamp ASC; "/>
       <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="get" />
       <query.note value="RÃ©cupÃ¨rer les activitÃ©s relatives aux USERTAGs oÃ¹ le compte pivot est citÃ©." />
       <query.params.in>
            <qparam id=":ref_uid1" value="" />
            <qparam id=":ref_uid2" value="" />
            <qparam id=":ref_time" value="" />
       </query.params.in>
       <query.params.out>
       </query.params.out>
    </query>
    
    <!-- ****************************************************** -->
    <!-- ******************** POSTMAN SCOPE ******************* -->
    
    <query id="qryl4pmrn1">
        <query.body value="
        INSERT INTO Postman_Reports (pmrpt_rcptuid,pmrpt_type,pmrpt_uatid,pmrpt_isAuto,pmrpt_ualgid,pmrpt_datecrea,pmrpt_datecrea_tstamp) VALUES 
        (:rcptuid,:type,:uat,:isAuto,:ualgid,:datecrea,:tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="CrÃ©er une occurrence de Notification pour REACTION." />
        <query.params.in>
            <qparam id=":rcptuid" value="" />
            <qparam id=":type" value="" />
            <qparam id=":uat" value="" />
            <qparam id=":isAuto" value="" />
            <qparam id=":ualgid" value="" />
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pmrn2">
        <query.body value="
        UPDATE Postman_Reports
        SET pmrpt_eid = :eid
        WHERE pmrpt_id = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
		<query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pmrn3">
        <query.body value="
        SELECT Postman_Reports.*
        FROM Postman_Reports
        WHERE pmrpt_id = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pmrn4_wfeo">
        <query.body value="
        SELECT pmrpt_eid as pmrid 
        FROM Postman_Reports 
        WHERE pmrpt_rcptuid = :ref_uid 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4pmrn4_wfeo_wrlolyo">
        <query.body value="
        SELECT pmrpt_eid as pmrid 
        FROM Postman_Reports, UAL_ActionTypes, UserActyLogs 
        WHERE pmrpt_ualgid = ualgid  
        AND ualg_uatid = uat_id
        AND pmrpt_rcptuid = :ref_uid 
        AND 
        (
            ( 
                uat_grp = 'TyGP_RCT' AND (
                    SELECT count(*) FROM Reactions WHERE reactid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_ARTICLE WHERE ustgart_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_REACTION WHERE ustgrct_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_EVL' AND (
                    SELECT count(*) FROM Table_Evals WHERE tbevlid = ualg_refobj
                ) = 1 
            )
        )
		AND pmrpt_rcptuid != ualg_actuid 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
     
    <query id="qryl4pmrn5">
        <query.body value="
        SELECT prt_lib as typ, count(pmrpt_id) cn
        FROM Postman_Report_Types  
        LEFT JOIN Postman_Reports ON pmrpt_type = prt_id
        WHERE pmrpt_rcptuid = :ref_uid 
        AND pmrpt_datergr_tstamp IS NULL 
        GROUP BY typ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Le nombre de Notifications non lues groupÃ©es par type" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn5_wrlolyo">
        <query.body value="
        SELECT prt_lib as typ, IFNULL(count(pmrpt_id),0) cn
        FROM Postman_Report_Types  
        LEFT JOIN Postman_Reports ON pmrpt_type = prt_id
        LEFT JOIN UserActyLogs ON pmrpt_ualgid = ualgid
        LEFT JOIN UAL_ActionTypes ON ualg_uatid = uat_id 
        WHERE pmrpt_rcptuid = :ref_uid 
        AND (
            ( 
                uat_grp = 'TyGP_RCT' AND (
                    SELECT count(*) FROM Reactions WHERE reactid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_ARTICLE WHERE ustgart_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_REACTION WHERE ustgrct_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_EVL' AND (
                    SELECT count(*) FROM Table_Evals WHERE tbevlid = ualg_refobj
                ) = 1 
            )
        )
        AND pmrpt_datergr_tstamp IS NULL
        GROUP BY typ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Le nombre de Notifications non lues groupÃ©es par type" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn6">
        <query.body value="
        SELECT pmrpt_id, pmrpt_eid, uat_id, uat_eid    
        FROM Postman_Reports, UserActyLogs, UAL_ActionTypes 
        WHERE pmrpt_ualgid = ualgid 
        AND ualg_uatid = uat_id 
        AND pmrpt_rcptuid = :ref_uid 
        ORDER BY pmrpt_datecrea_tstamp DESC 
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Les ids et type Notifications les plus rÃ©centes dans la limite" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4pmrn6_wrlolyo">
        <query.body value="
        SELECT pmrpt_id, pmrpt_eid, uat_id, uat_eid 
        FROM Postman_Reports, UAL_ActionTypes, UserActyLogs 
        WHERE pmrpt_ualgid = ualgid  
        AND ualg_uatid = uat_id
        AND pmrpt_rcptuid = :ref_uid 
        AND 
        (
            ( 
                uat_grp = 'TyGP_RCT' AND (
                    SELECT count(*) FROM Reactions WHERE reactid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_ARTICLE WHERE ustgart_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_REACTION WHERE ustgrct_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_EVL' AND (
                    SELECT count(*) FROM Table_Evals WHERE tbevlid = ualg_refobj
                ) = 1 
            )
        )
		AND pmrpt_rcptuid != ualg_actuid 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Les ids et type Notifications les plus rÃ©centes dans la limite" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pmrn7_wfeo">
        <query.body value="
        SELECT pmrpt_eid as pmrid 
        FROM Postman_Reports 
        WHERE pmrpt_rcptuid = :ref_uid 
        AND pmrpt_eid != :fri 
        AND pmrpt_datecrea_tstamp &lt;= :frt 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn7_wfeo_wrlolyo">
        <query.body value="
            SELECT pmrpt_eid as pmrid 
            FROM Postman_Reports, UAL_ActionTypes, UserActyLogs 
            WHERE pmrpt_ualgid = ualgid  
            AND ualg_uatid = uat_id
            AND pmrpt_rcptuid = :ref_uid 
            AND pmrpt_eid != :fri 
            AND 
            (
                ( 
                    uat_grp = 'TyGP_RCT' AND (
                        SELECT count(*) FROM Reactions WHERE reactid = ualg_refobj
                    ) = 1 
                )
                OR
                ( 
                    uat_grp = 'TyGP_USTG' AND (
                        SELECT count(*) FROM USTGs_ARTICLE WHERE ustgart_ustgid = ualg_refobj
                    ) = 1 
                )
                OR
                ( 
                    uat_grp = 'TyGP_USTG' AND (
                        SELECT count(*) FROM USTGs_REACTION WHERE ustgrct_ustgid = ualg_refobj
                    ) = 1 
                )
                OR
                ( 
                    uat_grp = 'TyGP_EVL' AND (
                        SELECT count(*) FROM Table_Evals WHERE tbevlid = ualg_refobj
                    ) = 1 
                )
            )
            AND pmrpt_datecrea_tstamp &lt;= :frt 
            ORDER BY pmrpt_datecrea_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn8_wfeo">
        <query.body value="
        SELECT pmrpt_eid as pmrid 
        FROM Postman_Reports 
        WHERE pmrpt_rcptuid = :ref_uid 
        AND pmrpt_eid != :fri 
        AND pmrpt_datecrea_tstamp &gt;= :frt 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn8_wfeo_wrlolyo">
        <query.body value="
        SELECT pmrpt_eid as pmrid 
        FROM Postman_Reports, UAL_ActionTypes, UserActyLogs 
        WHERE pmrpt_ualgid = ualgid  
        AND ualg_uatid = uat_id
        AND pmrpt_rcptuid = :ref_uid 
        AND pmrpt_eid != :fri 
        AND 
        (
            ( 
                uat_grp = 'TyGP_RCT' AND (
                    SELECT count(*) FROM Reactions WHERE reactid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_ARTICLE WHERE ustgart_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_REACTION WHERE ustgrct_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_EVL' AND (
                    SELECT count(*) FROM Table_Evals WHERE tbevlid = ualg_refobj
                ) = 1 
            )
        )
		AND pmrpt_rcptuid != ualg_actuid 
        AND pmrpt_datecrea_tstamp &gt;= :frt 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn9">
        <query.body value="
        SELECT pmrpt_id, pmrpt_eid, uat_id, uat_eid    
        FROM Postman_Reports, UserActyLogs, UAL_ActionTypes 
        WHERE pmrpt_ualgid = ualgid 
        AND ualg_uatid = uat_id 
        AND pmrpt_rcptuid = :ref_uid 
        AND pmrpt_eid != :fri 
        AND pmrpt_datecrea_tstamp &lt;= :frt 
        ORDER BY pmrpt_datecrea_tstamp DESC 
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Les ids et type Notifications les plus rÃ©centes dans la limite" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn9_wrlolyo">
        <query.body value="
        SELECT pmrpt_id, pmrpt_eid, uat_id, uat_eid 
        FROM Postman_Reports, UAL_ActionTypes, UserActyLogs 
        WHERE pmrpt_ualgid = ualgid  
        AND ualg_uatid = uat_id
        AND pmrpt_rcptuid = :ref_uid 
        AND pmrpt_eid != :fri 
        AND 
        (
            ( 
                uat_grp = 'TyGP_RCT' AND (
                    SELECT count(*) FROM Reactions WHERE reactid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_ARTICLE WHERE ustgart_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_REACTION WHERE ustgrct_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_EVL' AND (
                    SELECT count(*) FROM Table_Evals WHERE tbevlid = ualg_refobj
                ) = 1 
            )
        )
		AND pmrpt_rcptuid != ualg_actuid 
        AND pmrpt_datecrea_tstamp &lt;= :frt 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn10">
        <query.body value="
        SELECT pmrpt_id, pmrpt_eid, uat_id, uat_eid    
        FROM Postman_Reports, UserActyLogs, UAL_ActionTypes 
        WHERE pmrpt_ualgid = ualgid 
        AND ualg_uatid = uat_id 
        AND pmrpt_rcptuid = :ref_uid 
        AND pmrpt_eid != :fri 
        AND pmrpt_datecrea_tstamp &gt;= :frt 
        ORDER BY pmrpt_datecrea_tstamp DESC 
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="Les ids et type Notifications les plus rÃ©centes dans la limite" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn10_wrlolyo">
        <query.body value="
        SELECT pmrpt_id, pmrpt_eid, uat_id, uat_eid 
        FROM Postman_Reports, UAL_ActionTypes, UserActyLogs 
        WHERE pmrpt_ualgid = ualgid  
        AND ualg_uatid = uat_id 
        AND pmrpt_rcptuid = :ref_uid 
        AND pmrpt_eid != :fri 
        AND 
        (
            ( 
                uat_grp = 'TyGP_RCT' AND (
                    SELECT count(*) FROM Reactions WHERE reactid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_ARTICLE WHERE ustgart_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_USTG' AND (
                    SELECT count(*) FROM USTGs_REACTION WHERE ustgrct_ustgid = ualg_refobj
                ) = 1 
            )
            OR
            ( 
                uat_grp = 'TyGP_EVL' AND (
                    SELECT count(*) FROM Table_Evals WHERE tbevlid = ualg_refobj
                ) = 1 
            )
        )
		AND pmrpt_rcptuid != ualg_actuid 
        AND pmrpt_datecrea_tstamp &gt;= :frt 
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_uid" value="" />
            <qparam id=":fri" value="" />
            <qparam id=":frt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4pmrn11">
        <query.body value="
        SELECT Postman_Reports.*
        FROM Postman_Reports
        WHERE pmrpt_eid = :ref_pid
        AND pmrpt_rcptuid = :ref_uid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_pid" value="" />
            <qparam id=":ref_uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4pmrn12">
        <query.body value="
        UPDATE Postman_Reports
        SET pmrpt_datepull = :time, pmrpt_datepull_tstamp = :tmstp 
        WHERE pmrpt_id = :ref_pid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_pid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tmstp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>    
    
    <query id="qryl4pmrn13">
        <query.body value="
        UPDATE Postman_Reports
        SET pmrpt_datergr = :time, pmrpt_datergr_tstamp = :tmstp 
        WHERE pmrpt_id = :ref_pid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":ref_pid" value="" />
            <qparam id=":time" value="" />
            <qparam id=":tmstp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- REACTIONS -->
    
    <query id="qryl4pmr_rctn1_wfeo">
        <query.body value="
        SELECT pmrpt_eid as pmrid, pmrpt_datecrea_tstamp as ptm, pmrpt_datepull_tstamp as tm_pull, pmrpt_datergr_tstamp as tm_rgr, pmrpt_datevstd_tstamp as tm_vstd, 
        pdaccid as act_uid, pdacc_eid as act_ueid, pdacc_ufn as act_ufn, pdacc_upsd as act_upsd, 
        UALL2.uat_eid as wha, UALL1.uat_eid as pmr_wha, 
        reactid as mst, react_eid as mst_eid, '' as mst_prmlkid, artid as slv, art_eid as slv_eid, art_prmlk as slv_prmlkid, react_date_tstamp as tm, prt_lib as pmr_tp  
        FROM Postman_Reports, Postman_Report_Types, UAL_ActionTypes UALL1, UserActyLogs
        INNER JOIN UAL_ActionTypes UALL2 ON ualg_uatid = UALL2.uat_id  
        INNER JOIN Reactions ON reactid = ualg_refobj 
		INNER JOIN Articles ON react_artid = artid
		INNER JOIN Proddb_Accounts ON react_writer = pdaccid
		WHERE pmrpt_type = prt_id 
        AND pmrpt_uatid = UALL1.uat_id
        AND pmrpt_ualgid = ualgid
		AND pdacc_todelete = 0
        AND pmrpt_id = :id "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
       
<!--    <query id="qryl4pm_rctn2">
        <query.body value="
        SELECT pmrpt_eid as pmrid, pmrpt_datepull_tstamp as tm_pull, pmrpt_datergr_tstamp as tm_rgr, pmrpt_datevstd_tstamp as tm_vstd, pdaccid as act_uid, pdacc_eid as act_ueid, pdacc_ufn as act_ufn, pdacc_upsd as act_upsd, uat_eid as wha, 
        reactid as mst, react_eid as mst_eid, '' as mst_prmlkid, artid as slv, art_eid as slv_eid, art_prmlk as slv_prmlkid, react_date_tstamp as tm, prt_lib as pmr_tp  
        FROM Postman_Reports, Postman_Report_Types, UserActyLogs
        INNER JOIN UAL_ActionTypes ON ualg_uatid = uat_id  
        INNER JOIN Reactions ON reactid = ualg_refobj 
		INNER JOIN Articles ON react_artid = artid
		INNER JOIN Proddb_Accounts ON art_accid = pdaccid
		WHERE uat_id = ualg_uatid
        AND pmrpt_type = prt_id 
        AND pmrpt_rcptuid = :uid
        ORDER BY pmrpt_datecrea_tstamp DESC
        LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /> get, set, update, delete, sqlproc, sqlproc_r  
		<query.note value="Les Notifications les plus rÃ©centes pour Reaction dans la limite" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>-->
	
       
    <!-- EVALUATIONS -->
     
    <query id="qryl4pmr_evln1_wfeo">
        <query.body value="
        SELECT pmrpt_eid as pmrid, pmrpt_datecrea_tstamp as ptm, pmrpt_datepull_tstamp as tm_pull, pmrpt_datergr_tstamp as tm_rgr, pmrpt_datevstd_tstamp as tm_vstd, 
        pdaccid as act_uid, pdacc_eid as act_ueid, pdacc_ufn as act_ufn, pdacc_upsd as act_upsd, 
        UALL2.uat_eid as wha, UALL1.uat_eid as pmr_wha, 
        tbevlid as mst, '' as mst_eid, '' as mst_prmlkid, artid as slv, art_eid as slv_eid, art_prmlk as slv_prmlkid, pdevt_datecrea_tstamp as tm, prt_lib as pmr_tp, 
        tbevl_evltpid evtp 
        FROM Postman_Reports, Postman_Report_Types, UAL_ActionTypes UALL1, UserActyLogs
        INNER JOIN UAL_ActionTypes UALL2 ON ualg_uatid = UALL2.uat_id  
        INNER JOIN Table_Evals ON tbevlid = ualg_refobj 
        INNER JOIN Prod_Events ON tbevl_start_evtid = pdevtid 
		INNER JOIN Articles ON tbevl_artid = artid
		INNER JOIN Proddb_Accounts ON pdevt_acc_actor = pdaccid 
		WHERE pmrpt_type = prt_id 
        AND pmrpt_uatid = UALL1.uat_id
        AND pmrpt_ualgid = ualgid
		AND pdacc_todelete = 0
        AND pmrpt_id = :id "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <!-- USERTAGS -->
     
    <query id="qryl4pmr_ustgn1_wfeo">
        <query.body value="
        SELECT pmrpt_eid as pmrid, pmrpt_datecrea_tstamp as ptm, pmrpt_datepull_tstamp as tm_pull, pmrpt_datergr_tstamp as tm_rgr, pmrpt_datevstd_tstamp as tm_vstd, 
        pdaccid as act_uid, pdacc_eid as act_ueid, pdacc_ufn as act_ufn, pdacc_upsd as act_upsd, 
        UALL2.uat_eid as wha, UALL1.uat_eid as pmr_wha, 
        ustg_id as mst, ustg_eid as mst_eid, '' as mst_prmlkid, artid as slv, art_eid as slv_eid, art_prmlk as slv_prmlkid, ustg_datecrea_tstamp as tm, prt_lib as pmr_tp  
        FROM Postman_Reports, Postman_Report_Types, UAL_ActionTypes UALL1, UserActyLogs
        INNER JOIN UAL_ActionTypes UALL2 ON ualg_uatid = UALL2.uat_id  
        INNER JOIN USTGs_ARTICLE ON ustgart_ustgid = ualg_refobj 
        INNER JOIN USERTAGs ON ustg_id = ustgart_ustgid 
		INNER JOIN Articles ON ustgart_artid = artid
		INNER JOIN Proddb_Accounts ON art_accid = pdaccid
		WHERE pmrpt_type = prt_id 
        AND pmrpt_uatid = UALL1.uat_id
        AND pmrpt_ualgid = ualgid
		AND pdacc_todelete = 0
        AND pmrpt_id = :id "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
         
    <query id="qryl4pmr_ustgn2_wfeo">
        <query.body value="
        SELECT pmrpt_eid as pmrid, pmrpt_datecrea_tstamp as ptm, pmrpt_datepull_tstamp as tm_pull, pmrpt_datergr_tstamp as tm_rgr, pmrpt_datevstd_tstamp as tm_vstd, 
        pdaccid as act_uid, pdacc_eid as act_ueid, pdacc_ufn as act_ufn, pdacc_upsd as act_upsd, 
        UALL2.uat_eid as wha, UALL1.uat_eid as pmr_wha, 
        ustg_id as mst, ustg_eid as mst_eid, '' as mst_prmlkid, reactid as slv, react_eid as slv_eid, '' as slv_prmlkid, ustg_datecrea_tstamp as tm, prt_lib as pmr_tp,  
        artid as slvl1, art_eid as slvl1_eid, art_accid as slvl1_oid, art_prmlk as slvl1_prmlkid, art_cdate_tstamp as slvl1_tm 
        FROM Postman_Reports, Postman_Report_Types, UAL_ActionTypes UALL1, UserActyLogs
        INNER JOIN UAL_ActionTypes UALL2 ON ualg_uatid = UALL2.uat_id  
        INNER JOIN USTGs_REACTION ON ustgrct_ustgid = ualg_refobj 
        INNER JOIN USERTAGs ON ustg_id = ustgrct_ustgid 
		INNER JOIN Reactions ON ustgrct_rctid = reactid
		INNER JOIN Articles ON react_artid = artid
		INNER JOIN Proddb_Accounts ON react_writer = pdaccid
		WHERE pmrpt_type = prt_id 
        AND pmrpt_uatid = UALL1.uat_id
        AND pmrpt_ualgid = ualgid
		AND pdacc_todelete = 0
        AND pmrpt_id = :id "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
	
    <!-- ****************************************************** -->
    <!-- ******************** USERTAG SCOPE ******************* -->
 
    <query id="qryl4ustgn1">
        <query.body value="
        INSERT INTO USERTAGs (ustg_tgtuid,ustg_datecrea,ustg_datecrea_tstamp) VALUES 
        (:tgtuid,:datecrea,:tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="CrÃ©er une occurrence de UserTag." />
        <query.params.in>
            <qparam id=":tgtuid" value="" />
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ustgn2">
        <query.body value="
        UPDATE USERTAGs 
        SET ustg_eid = :eid
        WHERE ustg_id = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ***** USERTAG ARTICLE SCOPE ***** -->

    <query id="qryl4ustg_artn1">
        <query.body value="
        INSERT INTO USTGs_ARTICLE (ustgart_ustgid,ustgart_artid) VALUES 
        (:id,:artid);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="CrÃ©er une occurrence de UserTag pour un Objet Article." />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":artid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ustg_artn2">
        <query.body value="
        SELECT USERTAGs.*, USTGs_ARTICLE.*, pdaccid tgtuid, pdacc_eid tgtueid, pdacc_ufn tgtufn, pdacc_upsd tgtupsd 
        FROM USERTAGs, USTGs_ARTICLE, Proddb_Accounts 
        WHERE ustgart_ustgid = ustg_id 
        AND ustg_tgtuid = pdaccid 
        AND ustgart_artid = :aid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":aid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<query id="qryl4ustg_artn3">
        <query.body value="
        DELETE USTGs_ARTICLE, USERTAGs 
        FROM USTGs_ARTICLE, USERTAGs 
        WHERE ustgart_ustgid = ustg_id 
        AND ustgart_artid = :aid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":aid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ***** USERTAG REACTION SCOPE ***** -->

    <query id="qryl4ustg_rctn1">
        <query.body value="
        INSERT INTO USTGs_REACTION (ustgrct_ustgid,ustgrct_rctid) VALUES 
        (:id,:rid);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="CrÃ©er une occurrence de UserTag pour un Objet Reaction." />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":rid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ustg_rctn2">
        <query.body value="
        SELECT USERTAGs.*, USTGs_REACTION.*, pdaccid tgtuid, pdacc_eid tgtueid, pdacc_ufn tgtufn, pdacc_upsd tgtupsd   
        FROM USERTAGs, USTGs_REACTION, Proddb_Accounts 
        WHERE ustgrct_ustgid = ustg_id 
        AND ustg_tgtuid = pdaccid 
        AND ustgrct_rctid = :rid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":rid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ustg_rctn3">
        <query.body value="
        DELETE USTGs_REACTION, USERTAGs 
        FROM USTGs_REACTION, USERTAGs 
        WHERE ustgrct_ustgid = ustg_id 
        AND ustgrct_rctid = :rid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":rid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    
    <!-- ***** USERTAG TESTY SCOPE ***** -->

    <query id="qryl4ustg_tstn1">
        <query.body value="
        INSERT INTO USTGs_TESTY (ustgtst_ustgid,ustgtst_tstid) VALUES 
        (:id,:tstid);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="CrÃ©er une occurrence de UserTag pour un Objet TESTY." />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":tstid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4ustg_tstn2">
        <query.body value="
        SELECT USERTAGs.*, USTGs_TESTY.*, pdaccid tgtuid, pdacc_eid tgtueid, pdacc_ufn tgtufn, pdacc_upsd tgtupsd 
        FROM USERTAGs, USTGs_TESTY, Proddb_Accounts 
        WHERE ustgtst_ustgid = ustg_id 
        AND ustg_tgtuid = pdaccid 
        AND ustgtst_tstid = :tstid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4ustg_tstn3">
        <query.body value="
        DELETE USTGs_TESTY, USERTAGs 
        FROM USTGs_TESTY, USERTAGs 
        WHERE ustgtst_ustgid = ustg_id 
        AND ustgtst_tstid = :tstid;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":tstid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	
    <!-- ***** PREFERENCES SCOPE ***** -->

    <query id="qryl4prefmdn1">
        <query.body value="
        SELECT *   
        FROM PrefOpers, PrefModules
        WHERE prfop_mdid = prfmd_mdid 
        AND prfop_excd = :code; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":code" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4prefmdn2">
        <query.body value="
        SELECT *   
        FROM PrefOpDecs 
        WHERE prfopdc_prfopid = :prfopid 
        AND prfopdc_accid = :accid 
        AND prfopdc_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":prfopid" value="" />
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prefmdn3">
        <query.body value="
        UPDATE PrefOpDecs
        SET prfopdc_dateend = :date, prfopdc_dateend_tstamp = :tstamp
        WHERE prfopdc_id = :opdecid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":opdecid" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4prefmdn4">
        <query.body value="
        INSERT INTO PrefOpDecs (prfopdc_prfopid,prfopdc_accid,prfopdc_dctyp,prfopdc_datefrom,prfopdc_datefrom_tstamp) VALUES 
        (:prfopid,:accid,:dctypid,:date,:tstamp);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":prfopid" value="" />
            <qparam id=":accid" value="" />
            <qparam id=":dctypid" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prefmdn5">
        <query.body value="
        SELECT *   
        FROM PrefOpDecs, PrefOpers, PrefOpDecTypes 
        WHERE prfopdc_prfopid = prfop_id 
        AND prfopdc_dctyp = prfodtp_id
        AND prfopdc_accid = :accid 
        AND prfopdc_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
   
    <query id="qryl4prefmdn6">
        <query.body value="
        SELECT *   
        FROM PrefOpDecs, PrefOpers, PrefOpDecTypes 
        WHERE prfopdc_prfopid = prfop_id 
        AND prfopdc_dctyp = prfodtp_id
        AND prfopdc_prfopid = :prfopid 
        AND prfopdc_accid = :accid 
        AND prfopdc_dateend_tstamp IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":prfopid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
	
    <!-- ***** SUGGESTION SCOPE ***** -->

    <query id="qryl4tqrsuggn1">
        <query.body value="
        SELECT *   
        FROM SUGG_ANGELS_PFLS 
        WHERE sugg_ngl_pfl_rm = :rnmd; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
		<query.note value="" />
        <query.params.in>
            <qparam id=":rnmd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

    <query id="qryl4tqrsuggn2">
        <query.body value="
        SELECT *   
        FROM SUGG_ANGELS_TRDS 
        WHERE sugg_ngl_trd_rm = :rnmd; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="" />
        <query.params.in>
            <qparam id=":rnmd" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******** SUGGESTION : TMTTM SCOPE ******** -->
    
    <query id="qryl4tqrsuggn1_ttm">
        <query.body value="
            SELECT *   
            FROM Proddb_Accounts 
            WHERE pdaccid != :cuid1 
            AND pdaccid NOT IN ( 
                SELECT DISTINCT ( 
                    CASE 
                        WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                     END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                    OR ( tbrel_relsts = 1 AND ( tbrel_acc_actor = :cuid7 OR tbrel_acc_targ = :cuid8 ) )
                    OR ( tbrel_relsts = 4 AND ( tbrel_acc_actor = :cuid9 OR tbrel_acc_targ = :cuid10 ) )
                )
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND pdacc_todelete = 0 
            AND pdacc_datecrea_tstamp &gt;= :time 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="COMPTE UNKNOW + NEW ONES" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":cuid8" value="" />
            <qparam id=":cuid9" value="" />
            <qparam id=":cuid10" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn2_ttm">
        <query.body value="
            SELECT *   
            FROM Proddb_Accounts 
            WHERE pdaccid != :cuid1 
            AND pdaccid NOT IN ( 
                SELECT DISTINCT ( 
                    CASE 
                        WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                     END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                    OR ( tbrel_relsts = 1 AND ( tbrel_acc_actor = :cuid7 OR tbrel_acc_targ = :cuid8 ) )
                    OR ( tbrel_relsts = 4 AND ( tbrel_acc_actor = :cuid9 OR tbrel_acc_targ = :cuid10 ) )
                )
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND pdacc_todelete = 0 
            AND pdacc_datecrea_tstamp &lt;= :time 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="COMPTE UNKNOW + OLDER" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":cuid8" value="" />
            <qparam id=":cuid9" value="" />
            <qparam id=":cuid10" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn3_ttm">
        <query.body value="
            SELECT *   
            FROM Proddb_Accounts 
            WHERE pdaccid != :cuid1 
            AND pdaccid IN ( 
                SELECT DISTINCT ( 
                    CASE 
                        WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                     END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                    OR ( tbrel_relsts = 1 AND tbrel_acc_actor = :cuid7 ) 
                )
                AND tbrel_edate_tstamp IS NULL 
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND pdacc_todelete = 0 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="COMPTE MY_NETWORK" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn4_ttm">
        <query.body value="
            SELECT *   
            FROM Articles
            WHERE art_accid != :cuid 
            AND artid IN (
                SELECT artid FROM VM_Articles_ITR
            )
            AND artid NOT IN (
                SELECT artid FROM VM_Articles_ITR WHERE art_todel = 1
            )
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="N'IMPORTE QUEL ARTICLE ITR" />
        <query.params.in>
            <qparam id=":cuid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn5_ttm">
        <query.body value="
            SELECT *   
            FROM Articles 
            WHERE art_accid != :cuid1 
            AND artid IN (
                SELECT artid FROM Vm_Articles_IML
            )
            AND art_accid IN ( 
                SELECT DISTINCT ( 
                    CASE 
                        WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                     END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                )
                AND tbrel_edate_tstamp IS NULL 
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND artid NOT IN (
                SELECT artid FROM VM_Articles_IML WHERE art_todel = 1
            )
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="N'IMPORTE QUEL ARTICLE IML" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn6_ttm">
        <query.body value="
            SELECT *   
            FROM Articles 
            WHERE art_accid != :cuid1 
            AND (
                art_accid IN ( 
                    SELECT DISTINCT ( 
                        CASE 
                            WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                            ELSE tbrel_acc_actor
                         END
                    ) as uid
                    FROM VM_Tabrels
                    INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                    INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                    WHERE (
                        ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                        OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                    )
                    AND tbrel_edate_tstamp IS NULL 
                    AND PA_A.pdacc_todelete = 0
                    AND PA_T.pdacc_todelete = 0
                )
                OR artid IN (
                    SELECT artid FROM VM_Articles_ITR WHERE art_todel = 0
                )
            )    
            AND artid NOT IN (
                SELECT artid FROM VM_Articles_IML WHERE art_todel = 1
            ) AND artid NOT IN (
                SELECT artid FROM VM_Articles_ITR WHERE art_todel = 1
            )
            AND art_cdate_tstamp &gt;= :time
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="N'IMPORTE QUEL ARTICLE NEW" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn7_ttm">
        <query.body value="
            SELECT * 
            FROM Trends 
            WHERE trid NOT IN (
                SELECT trid FROM Trends WHERE trd_owner = :cuid1
            ) 
            AND trd_owner NOT IN ( 
                SELECT DISTINCT ( 
                    CASE 
                        WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                     END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                    OR ( tbrel_relsts = 1 AND ( tbrel_acc_actor = :cuid7 OR tbrel_acc_targ = :cuid8 ) )
                    OR ( tbrel_relsts = 4 AND ( tbrel_acc_actor = :cuid9 OR tbrel_acc_targ = :cuid10 ) )
                )
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND trd_next_del_tstamp IS NULL 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="TENDANCE NOT NETWORK" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":cuid8" value="" />
            <qparam id=":cuid9" value="" />
            <qparam id=":cuid10" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn8_ttm">
        <query.body value="
            SELECT * 
            FROM Trends 
            WHERE trid NOT IN (
                SELECT trid FROM Trends WHERE trd_owner = :cuid1
            ) 
            AND trd_owner IN ( 
                SELECT DISTINCT ( 
                    CASE 
                        WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                     END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                    OR ( tbrel_relsts = 1 AND tbrel_acc_actor = :cuid7 )
                )
                AND tbrel_edate_tstamp IS NULL
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND trd_next_del_tstamp IS NULL 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="TENDANCE MY NETWORK" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn9_ttm">
        <query.body value="
            SELECT * 
            FROM Trends 
            WHERE trid NOT IN (
                SELECT trid FROM Trends WHERE trd_owner = :cuid1
            ) 
            AND trd_next_del_tstamp IS NULL
            AND trd_date_tstamp &gt; :time 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="TENDANCE NEW" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":time" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn10_ttm">
        <query.body value="
            SELECT * 
            FROM Articles 
            WHERE 
            (   
                art_accid IN ( 
                    SELECT DISTINCT ( 
                        CASE 
                            WHEN tbrel_acc_actor = :cuid2 THEN tbrel_acc_targ
                            ELSE tbrel_acc_actor
                         END
                    ) as uid
                    FROM VM_Tabrels
                    INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                    INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                    WHERE (
                        ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) )
                        OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid5 OR tbrel_acc_targ = :cuid6 ) )
                        OR ( tbrel_relsts = 1 AND tbrel_acc_actor = :cuid7 )
                    )
                    AND tbrel_edate_tstamp IS NULL
                    AND PA_A.pdacc_todelete = 0
                    AND PA_T.pdacc_todelete = 0
                )
                OR artid IN (
                    SELECT trid FROM Trends WHERE trd_owner = :cuid1
                ) 
            )
            AND art_accid IN (
                SELECT sugg_ngl_pfl_uid FROM SUGG_ANGELS_PFLS
            )
            AND artid NOT IN (
                SELECT artid FROM VM_Articles_IML WHERE art_todel = 1
            ) 
            AND artid NOT IN (
                SELECT artid FROM VM_Articles_ITR WHERE art_todel = 1
            )
            AND art_accid != :cuid8
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="ARTICLES WHATEVER FROM ANGELS WITH RIGHTS" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":cuid8" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
    <query id="qryl4tqrsuggn11_ttm">
        <query.body value="
            SELECT * 
            FROM Trends 
            WHERE trid NOT IN (
                SELECT trid FROM Trends WHERE trd_owner = :cuid1
            ) 
            AND trid IN (
                SELECT sugg_ngl_trd_trid FROM SUGG_ANGELS_TRDS
            )
            AND trd_next_del_tstamp IS NULL 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="TENDANCES WHATEVER FROM ANGELS" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrsuggn12_ttm">
        <query.body value="
            SELECT *   
            FROM Proddb_Accounts 
            WHERE pdaccid != :cuid1 
            AND pdaccid IN ( 
                 SELECT sugg_ngl_pfl_uid FROM SUGG_ANGELS_PFLS
            )
            AND pdacc_todelete = 0 
            ORDER BY RAND() 
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="PROFILES WHATEVER FROM ANGELS" />
        <query.params.in>
            <qparam id=":cuid1" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    
    <!-- ***** LASTA SCOPE ***** -->
    
    <query id="qryl4tqrlastan1">
        <query.body value="
            SELECT AR.*, 'react' as  case_type, react_eid case_eid, react_date_tstamp case_date 
            FROM Reactions , Articles AR 
            WHERE react_artid = artid
            AND react_writer = :uid
            AND artid IN (
                SELECT trart_artid
                FROM TrArticles
            )
            ORDER BY react_date_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4tqrlastan1_all">
        <query.body value="
            SELECT AR.*, 'react' as  case_type, react_eid case_eid, react_date_tstamp case_date 
            FROM Reactions , Articles AR 
            WHERE react_artid = artid
            AND react_writer = :uid
            ORDER BY react_date_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4tqrlastan1_spe1">
        <query.body value="
            SELECT AR.*, 'react' as  case_type, react_eid case_eid, react_date_tstamp case_date 
            FROM Reactions , Articles AR 
            WHERE react_artid = artid
            AND react_writer = :tguid
            AND 
            ( 
                artid IN (
                    SELECT trart_artid
                    FROM TrArticles
                )
                OR 
                ( 
                    art_accid = :tguid1
                    OR art_accid IN (
                        SELECT ( 
                            CASE 
                                WHEN tbrel_acc_actor = :cuid THEN tbrel_acc_targ
                                ELSE tbrel_acc_actor
                             END
                        ) as uid
                        FROM VM_Tabrels
                        INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                        INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                        WHERE (
                            ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid1 OR tbrel_acc_targ = :cuid2 ) )
                        )
                        AND tbrel_edate_tstamp IS NULL 
                        AND PA_A.pdacc_todelete = 0
                        AND PA_T.pdacc_todelete = 0
                    )
                ) 
            )
            ORDER BY react_date_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="Commentaires sur Articles TRD, ceux appartenant Ã  mon ami ou Ã  ceux en common" />
        <query.params.in>
            <qparam id=":tguid" value="" />
            <qparam id=":tguid1" value="" />
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4tqrlastan1_spe2">
        <query.body value="
            SELECT AR.*, 'react' as  case_type, react_eid case_eid, react_date_tstamp case_date 
            FROM Reactions , Articles AR 
            WHERE react_artid = artid
            AND react_writer = :tguid
            AND 
            ( 
                artid IN (
                    SELECT trart_artid
                    FROM TrArticles
                )
                OR 
                (  
                    art_accid IN (
                        SELECT ( 
                            CASE 
                                WHEN tbrel_acc_actor = :cuid THEN tbrel_acc_targ
                                ELSE tbrel_acc_actor
                             END
                        ) as uid
                        FROM VM_Tabrels
                        INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                        INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                        WHERE (
                            ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid1 OR tbrel_acc_targ = :cuid2 ) )
                        )
                        AND tbrel_edate_tstamp IS NULL 
                        AND PA_A.pdacc_todelete = 0
                        AND PA_T.pdacc_todelete = 0
                    )
                ) 
            )
            ORDER BY react_date_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="Commentaires sur tous les Articles TRD et ceux aux amis en common" />
        <query.params.in>
            <qparam id=":tguid" value="" />
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrlastan2">
        <query.body value="
            SELECT AR.*, 'eval' as  case_type, NULL case_eid, pdevt_datecrea_tstamp case_date 
            FROM  Table_Evals, Prod_Events, Articles AR 
            WHERE tbevl_start_evtid = pdevtid
            AND tbevl_artid = artid
            AND artid IN (
                SELECT trart_artid
                FROM TrArticles
            )
            AND pdevt_acc_actor = :uid
            AND tbevl_end_evtid IS NULL 
            AND tbevl_evltpid NOT IN (3,4) 
            AND is_autobuild = 0
            ORDER BY pdevt_datecrea_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4tqrlastan2_all">
        <query.body value="
            SELECT AR.*, 'eval' as  case_type, NULL case_eid, pdevt_datecrea_tstamp case_date 
            FROM  Table_Evals, Prod_Events, Articles AR 
            WHERE tbevl_start_evtid = pdevtid
            AND tbevl_artid = artid
            AND pdevt_acc_actor = :uid
            AND tbevl_end_evtid IS NULL 
            AND tbevl_evltpid NOT IN (3,4) 
            AND is_autobuild = 0
            ORDER BY pdevt_datecrea_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4tqrlastan2_spe1">
        <query.body value="
            SELECT AR.*, 'eval' as  case_type, NULL case_eid, pdevt_datecrea_tstamp case_date 
            FROM  Table_Evals, Prod_Events, Articles AR 
            WHERE tbevl_start_evtid = pdevtid
            AND tbevl_artid = artid
            AND pdevt_acc_actor = :tguid
            AND tbevl_end_evtid IS NULL 
            AND tbevl_evltpid NOT IN (4) 
            AND is_autobuild = 0
            AND 
            ( 
                artid IN (
                    SELECT trart_artid
                    FROM TrArticles
                )
                OR 
                ( 
                    art_accid = :tguid1
                    OR art_accid IN (
                        SELECT ( 
                            CASE 
                                WHEN tbrel_acc_actor = :cuid THEN tbrel_acc_targ
                                ELSE tbrel_acc_actor
                             END
                        ) as uid
                        FROM VM_Tabrels
                        INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                        INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                        WHERE (
                            ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid1 OR tbrel_acc_targ = :cuid2 ) )
                            OR ( ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :uid3 OR tbrel_acc_targ = :uid4 ) )
                                AND tbevl_evltpid = 2 ) 
                        )
                        AND tbrel_edate_tstamp IS NULL 
                        AND PA_A.pdacc_todelete = 0
                        AND PA_T.pdacc_todelete = 0
                    )
                ) 
            )
            ORDER BY pdevt_datecrea_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="Evaluations sur Articles TRD, ceux appartenant Ã  mon ami ou Ã  ceux en common" />
        <query.params.in>
            <qparam id=":tguid" value="" />
            <qparam id=":tguid1" value="" />
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    <query id="qryl4tqrlastan2_spe2">
        <query.body value="
            SELECT AR.*, 'eval' as  case_type, NULL case_eid, pdevt_datecrea_tstamp case_date 
            FROM  Table_Evals, Prod_Events, Articles AR 
            WHERE tbevl_start_evtid = pdevtid
            AND tbevl_artid = artid
            AND pdevt_acc_actor = :tguid
            AND tbevl_end_evtid IS NULL 
            AND tbevl_evltpid NOT IN (4) 
            AND is_autobuild = 0
            AND 
            ( 
                artid IN (
                    SELECT trart_artid
                    FROM TrArticles
                )
                OR 
                ( 
                    art_accid IN (
                        SELECT ( 
                            CASE 
                                WHEN tbrel_acc_actor = :cuid THEN tbrel_acc_targ
                                ELSE tbrel_acc_actor
                             END
                        ) as uid
                        FROM VM_Tabrels
                        INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                        INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                        WHERE (
                            ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid1 OR tbrel_acc_targ = :cuid2 ) )
                            OR ( ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :uid3 OR tbrel_acc_targ = :uid4 ) )
                                AND tbevl_evltpid = 2 ) 
                        )
                        AND tbrel_edate_tstamp IS NULL 
                        AND PA_A.pdacc_todelete = 0
                        AND PA_T.pdacc_todelete = 0
                    )
                ) 
            )
            ORDER BY pdevt_datecrea_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="Evaluations sur tous les Articles TRD et ceux aux amis en common" />
        <query.params.in>
            <qparam id=":tguid" value="" />
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrlastan3">
        <query.body value="
            SELECT AR.*, 'react' as  case_type, react_eid case_eid, react_date_tstamp case_date, 
                react_writer case_aid, pdacc_eid case_aeid, pdacc_ufn case_afn, pdacc_upsd case_apsd  
            FROM Reactions, Proddb_Accounts, Articles AR 
            WHERE react_writer = pdaccid
            AND react_artid = artid
            /* Acteur de mon reseau */
            AND react_writer IN (
                SELECT ( 
                        CASE 
                            WHEN tbrel_acc_actor = :cuid THEN tbrel_acc_targ
                            ELSE tbrel_acc_actor
                         END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid1 OR tbrel_acc_targ = :cuid2 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) ) 
                    OR ( tbrel_relsts = 1 AND tbrel_acc_actor = :cuid5 )
                )
                AND tbrel_edate_tstamp IS NULL 
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND (
                /* Article est une Tendance */
                artid IN (
                    SELECT trart_artid
                    FROM TrArticles
                )
                /* Auteur de l'article est un ami */
                OR
                art_accid IN (
                    SELECT ( 
                        CASE 
                            WHEN tbrel_acc_actor = :cuid6 THEN tbrel_acc_targ
                            ELSE tbrel_acc_actor
                         END
                    ) as uid
                    FROM VM_Tabrels
                    INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                    INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                    WHERE (
                        ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid7 OR tbrel_acc_targ = :cuid8 ) )
                    )
                    AND tbrel_edate_tstamp IS NULL 
                    AND PA_A.pdacc_todelete = 0
                    AND PA_T.pdacc_todelete = 0
                )
            )
            ORDER BY react_date_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="Commentaires d'une personne de mon rÃ©seau oÃ¹ l'article est TRD OU oÃ¹ le propriÃ©taire est un de mes amis" />
        <query.params.in>
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":cuid8" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tqrlastan4">
        <query.body value="
            SELECT AR.*, 'eval' as  case_type, NULL case_eid, pdevt_datecrea_tstamp case_date, 
                pdevt_acc_actor case_aid, pdacc_eid case_aeid, pdacc_ufn case_afn, pdacc_upsd case_apsd  
            FROM  Table_Evals, Prod_Events, Proddb_Accounts, Articles AR 
            WHERE tbevl_start_evtid = pdevtid
            AND pdevt_acc_actor = pdaccid 
            AND tbevl_artid = artid
            AND tbevl_end_evtid IS NULL 
            AND tbevl_evltpid NOT IN (4) 
            AND is_autobuild = 0
            /* Acteur de mon reseau */
            AND pdevt_acc_actor IN (
                SELECT ( 
                        CASE 
                            WHEN tbrel_acc_actor = :cuid THEN tbrel_acc_targ
                            ELSE tbrel_acc_actor
                         END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid1 OR tbrel_acc_targ = :cuid2 ) )
                    OR ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid3 OR tbrel_acc_targ = :cuid4 ) ) 
                    OR ( tbrel_relsts = 1 AND tbrel_acc_actor = :cuid5 )
                )
                AND tbrel_edate_tstamp IS NULL 
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
            AND (
                /* Article est une Tendance */
                artid IN (
                    SELECT trart_artid
                    FROM TrArticles
                )
                OR 
                art_accid IN (
                    SELECT ( 
                        CASE 
                            WHEN tbrel_acc_actor = :cuid6 THEN tbrel_acc_targ
                            ELSE tbrel_acc_actor
                         END
                    ) as uid
                    FROM VM_Tabrels
                    INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                    INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                    WHERE (
                        /* Auteur de l'article est un ami OU Auteur de l'article est un DFOLW et eval est COOL */
                        ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid7 OR tbrel_acc_targ = :cuid8 ) ) OR 
                        ( ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid9 OR tbrel_acc_targ = :cuid10 ) ) AND tbevl_evltpid = 2 )
                    )
                    AND tbrel_edate_tstamp IS NULL 
                    AND PA_A.pdacc_todelete = 0
                    AND PA_T.pdacc_todelete = 0
                )
            )
            ORDER BY pdevt_datecrea_tstamp DESC
            LIMIT :limit; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="Commentaires d'une personne de mon rÃ©seau oÃ¹ l'article est TRD OU oÃ¹ le propriÃ©taire est un de mes amis OU DFLOW et l'event est cool" />
        <query.params.in>
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
            <qparam id=":cuid6" value="" />
            <qparam id=":cuid7" value="" />
            <qparam id=":cuid8" value="" />
            <qparam id=":cuid9" value="" />
            <qparam id=":cuid10" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    
    <!-- ******************************************************** -->
    <!-- ******************* PROD STATS SCOPE ******************* -->
	
    <!-- STATISTIQUES D'ERREURS -->
    
    <query id="qryl4prdstats_errn1">
        <query.body value="
        INSERT INTO prod_stats_err_bugzy (p_s_e_b_count,p_s_e_b_datecrea,p_s_e_b_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM bugzy_reports;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_errn2">
        <query.body value="
        INSERT INTO prod_stats_err_auto (p_s_e_a_count,p_s_e_a_datecrea,p_s_e_a_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM errorlogs;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- STATISTIQUES DE COMPTES -->

    <query id="qryl4prdstatsn1">
        <query.body value="
        INSERT INTO prod_stats_acc (p_s_acc_count,p_s_acc_datecrea,p_s_acc_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM proddb_accounts;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn2">
        <query.body value="
        INSERT INTO prod_stats_acc_active (p_s_acc_atv_count,p_s_acc_atv_datecrea,p_s_acc_atv_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM proddb_accounts
        WHERE (
            pdaccid IN ( SELECT art_accid FROM articles )
            OR pdaccid IN ( SELECT react_writer FROM reactions )
            OR pdaccid IN ( SELECT pdevt_acc_actor FROM prod_events WHERE pdevt_ev_type IN (9,10,11,12,13,14) )
        );" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn3">
        <query.body value="
        INSERT INTO prod_stats_acc_zmb (p_s_acc_zmb_count,p_s_acc_zmb_datecrea,p_s_acc_zmb_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM proddb_accounts
        WHERE (
            pdaccid NOT IN ( SELECT art_accid FROM articles )
            AND pdaccid NOT IN ( SELECT react_writer FROM reactions )
            AND pdaccid NOT IN ( SELECT pdevt_acc_actor FROM prod_events WHERE pdevt_ev_type IN (9,10,11,12,13,14) )
        );" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn4">
        <query.body value="
        INSERT INTO prod_stats_acc_dead (p_s_acc_dead_count,p_s_acc_dead_datecrea,p_s_acc_dead_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM proddb_accounts
        WHERE pdacc_todelete = 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- STATISTIQUES DE TENDANCES -->
    
    <query id="qryl4prdstatsn5">
        <query.body value="
        INSERT INTO prod_stats_trd (p_s_trd_count,p_s_trd_datecrea,p_s_trd_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM trends;" />
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn6">
        <query.body value="
        INSERT INTO prod_stats_trd_active (p_s_trd_atv_count,p_s_trd_atv_datecrea,p_s_trd_atv_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM trends
        WHERE trid IN ( SELECT trart_trid FROM trarticles );" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn7">
        <query.body value="
        INSERT INTO prod_stats_trd_zmb (p_s_trd_zmb_count,p_s_trd_zmb_datecrea,p_s_trd_zmb_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM trends
        WHERE trid NOT IN ( SELECT trart_trid FROM trarticles );" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn8">
        <query.body value="
        INSERT INTO prod_stats_trd_dead (p_s_trd_dead_count,p_s_trd_dead_datecrea,p_s_trd_dead_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM trends 
        WHERE trid IN ( SELECT tsh_trid FROM trstateshisty WHERE tsh_state = 3 ) ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- STATISTIQUES D'ACTIVTES -->
    
    <query id="qryl4prdstatsn9">
        <query.body value="
        INSERT INTO prod_stats_reactions (p_s_rct_count,p_s_rct_datecrea,p_s_rct_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM reactions ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn10">
        <query.body value="
        INSERT INTO prod_stats_articles (p_s_art_count,p_s_art_datecrea,p_s_art_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM articles ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn11">
        <query.body value="
        INSERT INTO prod_stats_utags_reactions (p_s_utg_rct_count,p_s_utg_rct_datecrea,p_s_utg_rct_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM ustgs_reaction ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn12">
        <query.body value="
        INSERT INTO prod_stats_utags_articles (p_s_utg_art_count,p_s_utg_art_datecrea,p_s_utg_art_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM ustgs_article ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn13">
        <query.body value="
        INSERT INTO prod_stats_evals (p_s_evl_count,p_s_evl_datecrea,p_s_evl_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM table_evals ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn14">
        <query.body value="
        INSERT INTO prod_stats_evals_active (p_s_evl_actv_count,p_s_evl_actv_datecrea,p_s_evl_actv_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM table_evals 
        WHERE tbevl_end_evtid IS NULL;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstatsn15">
        <query.body value="
        INSERT INTO prod_stats_mi (p_s_mi_count,p_s_mi_datecrea,p_s_mi_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM chatbox_messages
        WHERE chmsg_nxtdldate_tstamp IS NULL;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    <query id="qryl4prdstatsn16">
        <query.body value="
        INSERT INTO prod_stats_mi_miorphans (p_s_mi_miorph_count,p_s_mi_miorph_datecrea,p_s_mi_miorph_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM chatbox_messages 
        WHERE chmsg_nxtdldate_tstamp IS NULL
        AND ( chmsg_ad_date_tstamp IS NOT NULL OR chmsg_td_date_tstamp IS NOT NULL );" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    <query id="qryl4prdstatsn17">
        <query.body value="
        INSERT INTO prod_stats_rel (p_s_rel_count,p_s_rel_datecrea,p_s_rel_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM tablerelations 
        WHERE tbrel_dateend_tstamp IS NULL;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    <query id="qryl4prdstatsn18">
        <query.body value="
        INSERT INTO prod_stats_rel_frds (p_s_rel_frds_count,p_s_rel_frds_datecrea,p_s_rel_frds_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM tablerelations 
        WHERE tbrel_dateend_tstamp IS NULL
        AND tbrel_relsts = 3;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    <query id="qryl4prdstatsn19">
        <query.body value="
        INSERT INTO prod_stats_rel_sfolw (p_s_rel_sfolw_count,p_s_rel_sfolw_datecrea,p_s_rel_sfolw_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM tablerelations 
        WHERE tbrel_dateend_tstamp IS NULL
        AND tbrel_relsts = 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    <query id="qryl4prdstatsn20">
        <query.body value="
        INSERT INTO prod_stats_rel_dfolw (p_s_rel_dfolw_count,p_s_rel_dfolw_datecrea,p_s_rel_dfolw_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM tablerelations 
        WHERE tbrel_dateend_tstamp IS NULL
        AND tbrel_relsts = 2;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    <query id="qryl4prdstatsn21">
        <query.body value="
        INSERT INTO prod_stats_rel_void (p_s_rel_void_count,p_s_rel_void_datecrea,p_s_rel_void_datecrea_tstamp) 
        SELECT count(*) as total, :datecrea, :tstamp
        FROM tablerelations 
        WHERE tbrel_dateend_tstamp IS NULL
        AND tbrel_relsts = 4;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":datecrea" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******************************** -->
    <!-- *** STATISTIQUES : GET DATAS *** -->
    
    <!-- STATISTIQUES D'ERREURS -->

    <query id="qryl4prdstats_gblget_errn1">
        <query.body value="
        SELECT p_s_e_b_count
        FROM prod_stats_err_bugzy
        ORDER BY p_s_e_b_datecrea_tstamp DESC
        LIMIT 1;;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_errn1_lt">
        <query.body value="
        SELECT p_s_e_b_count
        FROM prod_stats_err_bugzy
        WHERE p_s_e_b_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_e_b_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_errn2">
        <query.body value="
        SELECT p_s_e_a_count
        FROM prod_stats_err_auto
        ORDER BY p_s_e_a_datecrea_tstamp DESC
        LIMIT 1;;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_errn2_lt">
        <query.body value="
        SELECT p_s_e_a_count
        FROM prod_stats_err_auto
        WHERE p_s_e_a_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_e_a_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
		<query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
	
	<!-- STATISTIQUES DE COMPTES -->
	
    <query id="qryl4prdstats_gblget_accn1">
        <query.body value="
        SELECT p_s_acc_count
        FROM prod_stats_acc
        ORDER BY p_s_acc_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_accn1_lt">
        <query.body value="
        SELECT p_s_acc_count
        FROM prod_stats_acc
        WHERE p_s_acc_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_acc_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_accn2">
        <query.body value="
        SELECT p_s_acc_atv_count
        FROM prod_stats_acc_active
        ORDER BY p_s_acc_atv_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_accn2_lt">
        <query.body value="
        SELECT p_s_acc_atv_count
        FROM prod_stats_acc_active
        WHERE p_s_acc_atv_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_acc_atv_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_accn3">
        <query.body value="
        SELECT p_s_acc_zmb_count
        FROM prod_stats_acc_zmb
        ORDER BY p_s_acc_zmb_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_accn3_lt">
        <query.body value="
        SELECT p_s_acc_zmb_count
        FROM prod_stats_acc_zmb
        WHERE p_s_acc_zmb_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_acc_zmb_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_accn4">
        <query.body value="
        SELECT p_s_acc_dead_count
        FROM prod_stats_acc_dead
        ORDER BY p_s_acc_dead_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_accn4_lt">
        <query.body value="
        SELECT p_s_acc_dead_count
        FROM prod_stats_acc_dead
        WHERE p_s_acc_dead_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_acc_dead_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- STATISTIQUES : TRENDS -->
    
    <query id="qryl4prdstats_gblget_trdn1">
        <query.body value="
        SELECT p_s_trd_count
        FROM prod_stats_trd
        ORDER BY p_s_trd_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_trdn1_lt">
        <query.body value="
        SELECT p_s_trd_count
        FROM prod_stats_trd
        WHERE p_s_trd_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_trd_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_trdn2">
        <query.body value="
        SELECT p_s_trd_atv_count
        FROM prod_stats_trd_active
        ORDER BY p_s_trd_atv_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_trdn2_lt">
        <query.body value="
        SELECT p_s_trd_atv_count
        FROM prod_stats_trd_active
        WHERE p_s_trd_atv_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_trd_atv_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_trdn3">
        <query.body value="
        SELECT p_s_trd_zmb_count
        FROM prod_stats_trd_zmb
        ORDER BY p_s_trd_zmb_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_trdn3_lt">
        <query.body value="
        SELECT p_s_trd_zmb_count
        FROM prod_stats_trd_zmb
        WHERE p_s_trd_zmb_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_trd_zmb_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_trdn4">
        <query.body value="
        SELECT p_s_trd_dead_count
        FROM prod_stats_trd_dead
        ORDER BY p_s_trd_dead_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_trdn4_lt">
        <query.body value="
        SELECT p_s_trd_dead_count
        FROM prod_stats_trd_dead
        WHERE p_s_trd_dead_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_trd_dead_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- STATISTIQUES : ACTIVITIES -->
    
    <query id="qryl4prdstats_gblget_rctn1">
        <query.body value="
        SELECT p_s_rct_count
        FROM prod_stats_reactions
        ORDER BY p_s_rct_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_rctn1_lt">
        <query.body value="
        SELECT p_s_rct_count
        FROM prod_stats_reactions
        WHERE p_s_rct_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_rct_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_artn1">
        <query.body value="
        SELECT p_s_art_count
        FROM prod_stats_articles
        ORDER BY p_s_art_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_artn1_lt">
        <query.body value="
        SELECT p_s_art_count
        FROM prod_stats_articles
        WHERE p_s_art_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_art_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_rutgn1">
        <query.body value="
        SELECT p_s_utg_rct_count
        FROM prod_stats_utags_reactions
        ORDER BY p_s_utg_rct_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_rutgn1_lt">
        <query.body value="
        SELECT p_s_utg_rct_count
        FROM prod_stats_utags_reactions
        WHERE p_s_utg_rct_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_utg_rct_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_autgn1">
        <query.body value="
        SELECT p_s_utg_art_count
        FROM prod_stats_utags_articles
        ORDER BY p_s_utg_art_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_autgn1_lt">
        <query.body value="
        SELECT p_s_utg_art_count
        FROM prod_stats_utags_articles
        WHERE p_s_utg_art_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_utg_art_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_evln1">
        <query.body value="
        SELECT p_s_evl_count
        FROM prod_stats_evals
        ORDER BY p_s_evl_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_evln1_lt">
        <query.body value="
        SELECT p_s_evl_count
        FROM prod_stats_evals
        WHERE p_s_evl_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_evl_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_evln2">
        <query.body value="
        SELECT p_s_evl_actv_count
        FROM prod_stats_evals_active
        ORDER BY p_s_evl_actv_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_evln2_lt">
        <query.body value="
        SELECT p_s_evl_actv_count
        FROM prod_stats_evals_active
        WHERE p_s_evl_actv_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_evl_actv_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_min1">
        <query.body value="
        SELECT p_s_mi_count
        FROM prod_stats_mi
        ORDER BY p_s_mi_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_min1_lt">
        <query.body value="
        SELECT p_s_mi_count
        FROM prod_stats_mi
        WHERE p_s_mi_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_mi_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_miorn1">
        <query.body value="
        SELECT p_s_mi_miorph_count
        FROM prod_stats_mi_miorphans
        ORDER BY p_s_mi_miorph_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_miorn1_lt">
        <query.body value="
        SELECT p_s_mi_miorph_count
        FROM prod_stats_mi_miorphans
        WHERE p_s_mi_miorph_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_mi_miorph_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln1">
        <query.body value="
        SELECT p_s_rel_count
        FROM prod_stats_rel
        ORDER BY p_s_rel_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln1_lt">
        <query.body value="
        SELECT p_s_rel_count
        FROM prod_stats_rel
        WHERE p_s_rel_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_rel_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln2">
        <query.body value="
        SELECT p_s_rel_frds_count
        FROM prod_stats_rel_frds
        ORDER BY p_s_rel_frds_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln2_lt">
        <query.body value="
        SELECT p_s_rel_frds_count
        FROM prod_stats_rel_frds
        WHERE p_s_rel_frds_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_rel_frds_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln3">
        <query.body value="
        SELECT p_s_rel_sfolw_count
        FROM prod_stats_rel_sfolw
        ORDER BY p_s_rel_sfolw_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln3_lt">
        <query.body value="
        SELECT p_s_rel_sfolw_count
        FROM prod_stats_rel_sfolw
        WHERE p_s_rel_sfolw_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_rel_sfolw_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln4">
        <query.body value="
        SELECT p_s_rel_dfolw_count
        FROM prod_stats_rel_dfolw
        ORDER BY p_s_rel_dfolw_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln4_lt">
        <query.body value="
        SELECT p_s_rel_dfolw_count
        FROM prod_stats_rel_dfolw
        WHERE p_s_rel_dfolw_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_rel_dfolw_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln5">
        <query.body value="
        SELECT p_s_rel_void_count
        FROM prod_stats_rel_void
        ORDER BY p_s_rel_void_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4prdstats_gblget_reln5_lt">
        <query.body value="
        SELECT p_s_rel_void_count
        FROM prod_stats_rel_void
        WHERE p_s_rel_void_datecrea_tstamp &lt;= :tstamp
        ORDER BY p_s_rel_void_datecrea_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    
    
    
    <!-- ********************************************************* -->
    <!-- ********************* FAVLINK SCOPE ********************* -->
    
    <query id="qryl4tapp_fvlkn1">
        <query.body value="
        INSERT INTO TAPP_FVLK_FAVS (fvlk_fav_ownr,fvlk_fav_title,fvlk_fav_url,fvlk_fav_desc,fvlk_fav_catg,fvlk_fav_ssid,fvlk_fav_curl,fvlk_fav_locip,fvlk_fav_uagent,fvlk_fav_adddate,fvlk_fav_adddate_tstamp) VALUES
        (:accid,:fav_title,:fav_url,:fav_desc,:fav_catg,:fav_ssid,:fav_curl,:fav_locip,:fav_uagent,:fav_cdate,:fav_cdate_tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
            <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":fav_title" value="" />
            <qparam id=":fav_url" value="" />
            <qparam id=":fav_desc" value="" />
            <qparam id=":fav_catg" value="" />
            <qparam id=":fav_ssid" value="" />
            <qparam id=":fav_curl" value="" />
            <qparam id=":fav_locip" value="" />
            <qparam id=":fav_uagent" value="" />
            <qparam id=":fav_cdate" value="" />
            <qparam id=":fav_cdate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn2">
        <query.body value="
        UPDATE TAPP_FVLK_FAVS 
        SET fvlk_fav_eid = :fav_eid
        WHERE fvlk_fav_id = :favid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
            <qparam id=":fav_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn3">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_id = :id;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn4">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_eid = :eid;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn5">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_ownr = :accid
        ORDER BY fvlk_fav_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn5_wfil">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_ownr = :accid
        AND fvlk_fav_catg = :fav_catg
        ORDER BY fvlk_fav_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":fav_catg" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn6">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_id != :favid
        AND fvlk_fav_ownr = :uid
        AND fvlk_fav_adddate_tstamp &lt;= :fav_tm
        ORDER BY fvlk_fav_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
            <qparam id=":uid" value="" />
            <qparam id=":fav_tm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn6_wfil">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_id != :favid
        AND fvlk_fav_ownr = :uid
        AND fvlk_fav_adddate_tstamp &lt;= :fav_tm
        AND fvlk_fav_catg = :fav_catg
        ORDER BY fvlk_fav_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
            <qparam id=":uid" value="" />
            <qparam id=":fav_catg" value="" />
            <qparam id=":fav_tm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn7">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_id != :favid
        AND fvlk_fav_ownr = :uid
        AND fvlk_fav_adddate_tstamp &gt;= :fav_tm
        ORDER BY fvlk_fav_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
            <qparam id=":uid" value="" />
            <qparam id=":fav_tm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn7_wfil">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_id != :favid
        AND fvlk_fav_ownr = :uid
        AND fvlk_fav_adddate_tstamp &gt;= :fav_tm
        AND fvlk_fav_catg = :fav_catg
        ORDER BY fvlk_fav_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
            <qparam id=":uid" value="" />
            <qparam id=":fav_catg" value="" />
            <qparam id=":fav_tm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn8">
        <query.body value="
        DELETE FROM TAPP_FVLK_FAVS 
        WHERE fvlk_fav_id = :favid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkn9">
        <query.body value="
        SELECT count(*) total
        FROM TAPP_FVLK_FAVS
        WHERE fvlk_fav_ownr = :accid;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- FAVLINK VISITS -->
    
    <query id="qryl4tapp_fvlkvstn1">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS_VSTS
        WHERE fvlk_fav_vst_id = :fvstid;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":fvstid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn2">
        <query.body value="
        SELECT *
        FROM TAPP_FVLK_FAVS_VSTS
        WHERE fvlk_fav_vst_eid = :fvst_eid;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":fvst_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn3">
        <query.body value="
        SELECT FVST.*
        FROM TAPP_FVLK_FAVS_VSTS FVST, Proddb_Accounts PA 
        WHERE fvlk_fav_vst_who = pdaccid
        AND fvlk_fav_vst_who = :uid
        ORDER BY fvlk_fav_vst_date_tstamp DESC
        LIMIT 1 ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="DonnÃ©es sur la derniÃ¨re visite effectuÃ©e par l'utilisateur passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn4">
        <query.body value="
        SELECT FVST.*
        FROM TAPP_FVLK_FAVS_VSTS FVST, TAPP_FVLK_FAVS FAV
        WHERE fvlk_fav_vst_favid = fvlk_fav_id
        AND fvlk_fav_vst_favid = :favid
        ORDER BY fvlk_fav_vst_date_tstamp DESC
        LIMIT 1;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="DonnÃ©es sur la derniÃ¨re visite rÃ©pertorÃ©e pour le lien favori passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":favid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn5">
        <query.body value="
        SELECT count(*) nbvisit
        FROM TAPP_FVLK_FAVS_VSTS FVST, Proddb_Accounts PA 
        WHERE fvlk_fav_vst_who = pdaccid
        AND fvlk_fav_vst_who = :uid;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="DonnÃ©es sur la derniÃ¨re visite effectuÃ©e par l'utilisateur passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn6">
        <query.body value="
        SELECT count(*) nbvisit
        FROM TAPP_FVLK_FAVS_VSTS FVST, TAPP_FVLK_FAVS FAV
        WHERE fvlk_fav_vst_favid = fvlk_fav_id
        AND fvlk_fav_vst_favid = :favid;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="DonnÃ©es sur la derniÃ¨re visite rÃ©pertorÃ©e pour le lien favori passÃ© en paramÃ¨tre" />
        <query.params.in>
            <qparam id=":favid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn7">
        <query.body value="
        INSERT INTO TAPP_FVLK_FAVS_VSTS (fvlk_fav_vst_favid,fvlk_fav_vst_who,fvlk_fav_vst_ssid,fvlk_fav_vst_locip,fvlk_fav_vst_uagent,fvlk_fav_vst_curl,fvlk_fav_vst_date,fvlk_fav_vst_date_tstamp) VALUES
        (:favid,:accid,:ssid,:locip,:uagent,:curl,:date,:tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
            <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
            <qparam id=":accid" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":uagent" value="" />
            <qparam id=":curl" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn8">
        <query.body value="
        UPDATE TAPP_FVLK_FAVS_VSTS 
        SET fvlk_fav_vst_eid = :fvs_eid
        WHERE fvlk_fav_vst_id = :fvsid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":fvsid" value="" />
            <qparam id=":fvs_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn9">
        <query.body value="
        DELETE FROM TAPP_FVLK_FAVS_VSTS 
        WHERE fvlk_fav_vst_id = :fvsid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":fvsid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4tapp_fvlkvstn10">
        <query.body value="
        DELETE FROM TAPP_FVLK_FAVS_VSTS 
        WHERE fvlk_fav_vst_favid = :favid ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":favid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    
    
    <!-- ******** MAIN TESTY SCOPE ******** -->
    
    <query id="qryl4testyn1">
        <query.body value="
        SELECT *
        FROM TESTIES 
        WHERE tstid = :tstid ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tstid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn2">
        <query.body value="
        SELECT *
        FROM TESTIES 
        WHERE tst_eid = :tst_eid ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tst_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn3">
        <query.body value="
        INSERT INTO TESTIES (tst_msg,tst_ucap,tst_locip,tst_ssid,tst_uagnt,tst_ouid,tst_tguid,tst_adddate,tst_adddate_tstamp) VALUES
        (:tst_msg,:tst_ucap,:tst_locip,:tst_ssid,:tst_uagnt,:tst_ouid,:tst_tguid,:tst_adddate,:tst_adddate_tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
            <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":tst_msg" value="" />
            <qparam id=":tst_ucap" value="" />
            <qparam id=":tst_locip" value="" />
            <qparam id=":tst_ssid" value="" />
            <qparam id=":tst_uagnt" value="" />
            <qparam id=":tst_ouid" value="" />
            <qparam id=":tst_tguid" value="" />
            <qparam id=":tst_adddate" value="" />
            <qparam id=":tst_adddate_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn4">
        <query.body value="
        UPDATE TESTIES 
        SET tst_eid = :tst_eid
        WHERE tstid = :tstid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":tstid" value="" />
            <qparam id=":tst_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn5">
        <query.body value="
        DELETE FROM TESTY_PIN_HISTY 
        WHERE tst_hty_tstid = :id ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn6">
        <query.body value="
        DELETE FROM TESTIES 
        WHERE tstid = :id ;"/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn7">
        <query.body value="
        SELECT *
        FROM TESTIES 
        WHERE tst_tguid = :tguid 
        ORDER BY tst_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tguid" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn8">
        <query.body value="
        SELECT *
        FROM TESTIES 
        WHERE tst_tguid = :tguid 
        AND tstid != :refid 
        AND tst_adddate_tstamp &gt;= :reftm
        ORDER BY tst_adddate_tstamp DESC;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tguid" value="" />
            <qparam id=":refid" value="" />
            <qparam id=":reftm" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn9">
        <query.body value="
        SELECT *
        FROM TESTIES 
        WHERE tst_tguid = :tguid 
        AND tstid != :refid 
        AND tst_adddate_tstamp &lt;= :reftm
        ORDER BY tst_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":tguid" value="" />
            <qparam id=":refid" value="" />
            <qparam id=":reftm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testyn10">
        <query.body value="
        SELECT count(*) cn
        FROM TESTIES 
        WHERE tst_ouid = :ouid1
        AND tst_tguid = :ouid2 
        AND tst_ucap = 0 ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":ouid1" value="" />
            <qparam id=":ouid2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******** CONFIG TESTY SCOPE ******** -->
    
    <query id="qryl4testycnfn1">
        <query.body value="
        INSERT INTO TESTY_CONF (tst_cnf_uid) VALUES
        (:uid); "/>
        <query.dbname value="tqr_product_vb1_prod" />
            <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn2">
        <query.body value="
        SELECT *
        FROM TESTY_CONF 
        WHERE tst_cnf_uid = :uid ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn3">
        <query.body value="
        UPDATE TESTY_CONF 
        SET tst_cnf_wcadd = :wcadd, 
            tst_cnf_wcsee = :wcsee, 
            tst_cnf_lup_locip = :locip, 
            tst_cnf_lup_ssid = :ssid, 
            tst_cnf_lup_uagnt = :uagnt,
            tst_cnf_lup_date = :date,
            tst_cnf_lup_tstamp = :tstamp
        WHERE tst_cnf_id = :cfid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":cfid" value="" />
            <qparam id=":wcadd" value="" /> 
            <qparam id=":wcsee" value="" /> 
            <qparam id=":locip" value="" /> 
            <qparam id=":ssid" value="" /> 
            <qparam id=":uagnt" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    
    <!-- ******** CONFIG TESTY SCOPE ******** -->
    
    <query id="qryl4testycnfn1_spednyfr">
        <query.body value="
        INSERT INTO TESTY_CONF_DENY_FOR (tcdf_acuid,tcdf_tguid,tcdf_ini_type,tcdf_add_date,tcdf_add_tstamp,tcdf_add_locip,tcdf_add_ssid,tcdf_add_uagnt) VALUES
        (:acuid,:tguid,:type,:date,:tstamp,:locip,:ssid,:uagnt); "/>
        <query.dbname value="tqr_product_vb1_prod" />
            <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":acuid" value="" />
            <qparam id=":tguid" value="" />
            <qparam id=":type" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":uagnt" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn2_spednyfr">
        <query.body value="
        SELECT *
        FROM TESTY_CONF_DENY_FOR 
        WHERE tcdf_acuid = :uid 
        AND tcdf_end_tstamp IS NULL;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn3_spednyfr">
        <query.body value="
        UPDATE TESTY_CONF_DENY_FOR 
        SET tcdf_end_date = :date,
            tcdf_end_tstamp = :tstamp,
            tcdf_end_locip = :locip,
            tcdf_end_ssid = :ssid,
            tcdf_end_uagnt = :uagnt
        WHERE tcdf_id = :tcdfid; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":tcdfid" value="" />
            <qparam id=":locip" value="" /> 
            <qparam id=":ssid" value="" /> 
            <qparam id=":uagnt" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn4_spednyfr">
        <query.body value="
            SELECT *
            FROM TESTY_CONF_DENY_FOR 
            WHERE tcdf_acuid = :uid 
            AND tcdf_end_tstamp IS NULL ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn5_spednyfr">
        <query.body value="
            SELECT *
            FROM TESTY_CONF_DENY_FOR 
            WHERE tcdf_tguid IN (
                SELECT DISTINCT tcdf_tguid
                FROM TESTY_CONF_DENY_FOR 
                WHERE tcdf_acuid = :uid 
                AND tcdf_end_tstamp IS NOT NULL
            )
            AND tcdf_end_tstamp IS NULL ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn6_spednyfr">
        <query.body value="
            (
                SELECT *
                FROM TESTY_CONF_DENY_FOR 
                WHERE tcdf_acuid = :uid1 
                AND tcdf_end_tstamp IS NULL 
            )
            UNION 
            (
                SELECT *
                FROM TESTY_CONF_DENY_FOR 
                WHERE tcdf_tguid IN (
                    SELECT DISTINCT tcdf_tguid
                    FROM TESTY_CONF_DENY_FOR 
                    WHERE tcdf_acuid = :uid2 
                    AND tcdf_end_tstamp IS NOT NULL
                )
                AND tcdf_end_tstamp IS NULL 
            ) ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":uid1" value="" />
            <qparam id=":uid2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn7_spednyfr">
        <query.body value="
        SELECT *
        FROM TESTY_CONF_DENY_FOR 
        WHERE tcdf_acuid = :tguid 
        AND tcdf_tguid = :cuid 
        AND tcdf_ini_type = :type
        AND tcdf_end_tstamp IS NULL ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":cuid" value="" />
            <qparam id=":tguid" value="" />
            <qparam id=":type" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4testycnfn8_spednyfr">
        <query.body value="
        UPDATE TESTY_CONF_DENY_FOR 
        SET tcdf_end_date = :date,
            tcdf_end_tstamp = :tstamp,
            tcdf_end_locip = :locip,
            tcdf_end_ssid = :ssid,
            tcdf_end_uagnt = :uagnt
        WHERE tcdf_ini_type = :type
        AND tcdf_end_date IS NULL; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":type" value="" />
            <qparam id=":locip" value="" /> 
            <qparam id=":ssid" value="" /> 
            <qparam id=":uagnt" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    
    <!-- ******** URLS_IN_CONTENT SCOPE ******** -->
    
    <query id="qryl4urlicn1"> 
        <query.body value="
        INSERT URL_IN_CNTTS (uic_ucid,uic_uceid,uic_uctp,uic_gvnurl,uic_domain,uic_ssid,uic_curl,uic_locip,uic_uagent,uic_adddate,uic_adddate_tstamp) VALUES
        (:ucid,:uceid,:uctp,:gvnurl,:domain,:ssid,:curl,:locip,:uagnt,:date,:tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
            <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":ucid" value="" />
            <qparam id=":uceid" value="" />
            <qparam id=":uctp" value="" />
            <qparam id=":gvnurl" value="" />
            <qparam id=":domain" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":curl" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":uagnt" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4urlicn2">
        <query.body value="
        UPDATE URL_IN_CNTTS  
        SET uic_eid = :eid
        WHERE uicid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4urlicn3">
        <query.body value="
            SELECT *
            FROM URL_IN_CNTTS 
            WHERE uicid = :id ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4urlicn4">
        <query.body value="
            DELETE FROM URL_IN_CNTTS
            WHERE uicid = :id ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4urlicn5">
        <query.body value="
        SELECT *
        FROM URL_IN_CNTTS
        WHERE uic_uceid = :eid
        AND uic_uctp = 4;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******** URLS_IN_CONTENT ARTICLE SCOPE ******* -->
    
    <query id="qryl4urlic_artn1">
        <query.body value="
        SELECT * 
        FROM URL_IN_CNTTS
        INNER JOIN ARTICLES ON artid = uic_ucid
        WHERE art_eid = uic_uceid 
        AND uic_uceid = :aeid
        AND uic_uctp IN (1,2) ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" />
            <query.note value="" />
        <query.params.in>
            <qparam id=":aeid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ******** URLS_IN_CONTENT VISIT SCOPE ******** -->
    
    <query id="qryl4urlic_vstn1"> 
        <query.body value="
        INSERT URL_IN_CNTTS_VISTS (uicv_uicid,uicv_uid,uicv_refr,uicv_ssid,uicv_curl,uicv_locip,uicv_uagent,uicv_adddate,uicv_adddate_tstamp) VALUES
        (:uicid,:auid,:refr,:ssid,:curl,:locip,:uagnt,:date,:tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
            <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":uicid" value="" />
            <qparam id=":auid" value="" />
            <qparam id=":refr" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":curl" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":uagnt" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4urlic_vstn2">
        <query.body value="
            DELETE FROM URL_IN_CNTTS_VISTS
            WHERE uicv_uicid = :uicid ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="delete" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="Supprimer toutes les occurrences de visites liÃ©es Ã  un UIC" />
        <query.params.in>
            <qparam id=":uicid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>

        
    <!-- ******************************************************* -->
    <!-- **************** HASHS_IN_CONTENT SCOPE **************** -->
    
    <query id="qryl4hviewn1">
        <query.body value="
            SELECT *
            FROM HSH_IN_CNTTS 
            WHERE hicid = :id ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn2">
        <query.body value="
            SELECT *
            FROM HSH_IN_CNTTS 
            WHERE hic_eid = :eid ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn3">
        <query.body value="
            SELECT *
            FROM HSH_IN_CNTTS 
            WHERE hic_ntrhsh = :hash ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":hash" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn3_cn">
        <query.body value="
            SELECT count(*) cn
            FROM HSH_IN_CNTTS 
            WHERE hic_ntrhsh = :hash ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":hash" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn4"> 
        <query.body value="
        INSERT HSH_IN_CNTTS (hic_hcid,hic_hceid,hic_hctp,hic_ntrhsh,hic_mnihsh,hic_gvnhsh,hic_ssid,hic_curl,hic_locip,hic_uagent,hic_adddate,hic_adddate_tstamp) VALUES
        (:hcid,:hceid,:hctp,:ntrhsh,:mnihsh,:gvnhsh,:ssid,:curl,:locip,:uagnt,:date,:tstamp); "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="set" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":hcid" value="" />
            <qparam id=":hceid" value="" />
            <qparam id=":hctp" value="" />
            <qparam id=":ntrhsh" value="" />
            <qparam id=":mnihsh" value="" />
            <qparam id=":gvnhsh" value="" />
            <qparam id=":ssid" value="" />
            <qparam id=":curl" value="" />
            <qparam id=":locip" value="" />
            <qparam id=":uagnt" value="" />
            <qparam id=":date" value="" />
            <qparam id=":tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn5">
        <query.body value="
        UPDATE HSH_IN_CNTTS  
        SET hic_eid = :eid
        WHERE hicid = :id; "/>
        <query.dbname value="tqr_product_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
            <qparam id=":id" value="" />
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn6">
        <query.body value="
        SELECT hic_eid hid, hic_hcid as cnid, hic_hceid as cneid, hic_adddate_tstamp as time, hic_hctp as type
        FROM HSH_IN_CNTTS 
        WHERE hic_ntrhsh = :hash 
        AND (
            ( hic_hctp = 1 AND hic_hcid IN ( SELECT artid FROM VM_ARTICLES_IML WHERE ( art_state IS NULL OR art_state IN (1,6) ) ) )
            OR ( hic_hctp = 2 AND hic_hcid IN ( SELECT artid FROM VM_ARTICLES_ITR WHERE ( art_state IS NULL OR art_state IN (1,6) ) ) )
            OR ( hic_hctp = 3 AND hic_hcid IN ( SELECT reactid FROM Reactions ) )
            OR ( hic_hctp = 4 AND hic_hcid IN ( SELECT tstid FROM Testies ) )
            OR ( hic_hctp = 5 AND hic_hcid IN ( SELECT chmsgid FROM ChatBox_Messages ) )
        )  
        ORDER BY hic_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":hash" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn7">
        <query.body value="
        SELECT hic_eid hid, hic_hcid as cnid, hic_hceid as cneid, hic_adddate_tstamp as time, hic_hctp as type
        FROM HSH_IN_CNTTS 
        WHERE hic_ntrhsh = :hash 
        AND hic_adddate_tstamp &gt;= :pvtm
        AND hic_eid != :pvid 
        ORDER BY hic_adddate_tstamp DESC
        LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":hash" value="" />
            <qparam id=":pvid" value="" />
            <qparam id=":pvtm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn8">
        <query.body value="
            SELECT hic_eid hid, hic_hcid as cnid, hic_hceid as cneid, hic_adddate_tstamp as time, hic_hctp as type
            FROM HSH_IN_CNTTS 
            WHERE hic_ntrhsh = :hash 
            AND hic_adddate_tstamp &lt;= :pvtm
            AND hic_eid != :pvid 
            ORDER BY hic_adddate_tstamp DESC
            LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":hash" value="" />
            <qparam id=":pvid" value="" />
            <qparam id=":pvtm" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- 
        [DEPUIS 18-11-15] 
        DEVENU OBSELETE : TransfÃ©rÃ© vers ENTITY pour Ãªtre utilisÃ© en mode BUILD VOLATILE Ã  cause de la condition IN () 
    -->
    <query id="qryl4hviewn9">
        <query.body value="
        SELECT *
        FROM VM_ARTICLES_IML
        WHERE artid IN (':ids')
        AND ( 
            art_oid = :cuid
            OR art_oid IN 
            (
                SELECT ( 
                    CASE 
                        WHEN tbrel_acc_actor = :cuid1 THEN tbrel_acc_targ
                        ELSE tbrel_acc_actor
                     END
                ) as uid
                FROM VM_Tabrels
                INNER JOIN Proddb_Accounts PA_A ON PA_A.pdaccid = tbrel_acc_actor
                INNER JOIN Proddb_Accounts PA_T ON PA_T.pdaccid = tbrel_acc_targ
                WHERE (
                    ( tbrel_relsts = 3 AND ( tbrel_acc_actor = :cuid2 OR tbrel_acc_targ = :cuid3 ) ) OR 
                    ( tbrel_relsts = 2 AND ( tbrel_acc_actor = :cuid4 OR tbrel_acc_targ = :cuid5 ) )
                )
                AND tbrel_edate_tstamp IS NULL 
                AND PA_A.pdacc_todelete = 0
                AND PA_T.pdacc_todelete = 0
            )
        )
        AND ( art_state IS NULL OR art_state IN (1,6) ); " />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":ids" value="" />
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
            <qparam id=":cuid2" value="" />
            <qparam id=":cuid3" value="" />
            <qparam id=":cuid4" value="" />
            <qparam id=":cuid5" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- 
        [DEPUIS 18-11-15] 
        DEVENU OBSELETE : TransfÃ©rÃ© vers ENTITY pour Ãªtre utilisÃ© en mode BUILD VOLATILE Ã  cause de la condition IN () 
    -->
    <query id="qryl4hviewn10">
        <query.body value="
        SELECT *
        FROM VM_ARTICLES_ITR
        WHERE artid IN (':ids')
        AND ( art_state IS NULL OR art_state IN (1,6) );" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":ids" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
      
    <!-- 
        [DEPUIS 18-11-15] 
        DEVENU OBSELETE : TransfÃ©rÃ© vers ENTITY pour Ãªtre utilisÃ© en mode BUILD VOLATILE Ã  cause de la condition IN () 
    -->
    <query id="qryl4hviewn11">
        <query.body value="
        SELECT TST.*, PA1.pdacc_eid oueid, PA1.pdacc_upsd oupsd, PA1.pdacc_ufn oufn, PA2.pdacc_eid tgueid, PA2.pdacc_upsd tgupsd, PA2.pdacc_ufn tgufn 
        FROM TESTIES TST, PRODDB_ACCOUNTS PA1, PRODDB_ACCOUNTS PA2
        WHERE tst_ouid = PA1.pdaccid
        AND tst_tguid = PA2.pdaccid
        AND tstid IN (':ids')
        AND (
            /* JE SUIS LE PROPRIETAIRE */
            tst_ouid = :cuid
            /* LE PROPRIETAIRE A DECIDE QUE LE TEMOIGNAGE NE DOIT ETRE ACCESSIBLE DE L'INTERIEUR */
            OR tst_ouid IN ( 
                SELECT tst_cnf_uid
                FROM TESTY_CONF
                WHERE tst_cnf_wcsee = 7
                AND :cuid1 IS NOT NULL
            ) 
            /* LE PROPRIETAIRE A DECIDE QUE LE TEMOIGNAGE EST VISIBLE POUR TOUS */
            OR tst_ouid IN ( 
                SELECT tst_cnf_uid
                FROM TESTY_CONF
                WHERE tst_cnf_wcsee = 1
            )
        );
        " />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":ids" value="" />
            <qparam id=":cuid" value="" />
            <qparam id=":cuid1" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn12">
        <query.body value="
        SELECT *
        FROM HSH_IN_CNTTS
        WHERE hic_hceid = :eid
        AND hic_hctp = 4;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn13_spe_art_transf"> 
        <query.body value="
        SELECT artid hcid, art_eid hceid, kwlib ntrhsh, kwlib mnihsh, kw_lib_ori gvnhsh, 'ssid_not_before_vb20' as ssid, 'curl_not_before_vb20' as curl, art_loc_numip locip, 'uagent_not_before_vb20' uagnt, art_cdate date, art_cdate_tstamp tstamp, 
        ( 
            CASE 
                WHEN 
                    ( 
                        artid IN (
                            SELECT artid
                            FROM VM_Articles_IML
                        )
                    )
                    THEN 1
                ELSE 2
            END
        ) as hctp  
        FROM Keywords, KwByArt, Articles
        WHERE kba_kwlib = kwlib
        AND kba_artid = artid
        AND art_eid NOT IN (
            SELECT hic_hceid
            FROM HSH_IN_CNTTS
            WHERE hic_hctp IN (1,2)
        ) ; "/>
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
            <query.note value="" />
        <query.params.in>
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn14">
        <query.body value="
        SELECT *
        FROM HSH_IN_CNTTS
        WHERE hic_hcid = :aid
        AND hic_hceid = :aeid
        AND hic_hctp IN (1,2);" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":aid" value="" />
            <qparam id=":aeid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn15">
        <query.body value="
            SELECT *
            FROM HSH_MODO_DESC 
            WHERE hmdsc_hsh = :hash ;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":hash" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn16_live">
        <query.body value="
            SELECT hic_gvnhsh hash, count(*) cn
            FROM HSH_IN_CNTTS 
            GROUP BY hic_gvnhsh
            HAVING count(*) &gt;= :rlvt
            ORDER BY hic_adddate_tstamp DESC, cn DESC
            LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":rlvt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4hviewn16_bestof">
        <query.body value="
            SELECT hic_gvnhsh hash, count(*) cn
            FROM HSH_IN_CNTTS 
            GROUP BY hic_gvnhsh
            HAVING count(*) &gt;= :rlvt
            ORDER BY cn DESC, hic_adddate_tstamp DESC
            LIMIT :limit;" />
        <query.dbname value="tqr_product_vb1_prod" />
        <query.type value="get" /><!-- get, set, update, delete, sqlproc, sqlproc_r  -->
        <query.note value="" />
        <query.params.in>
            <qparam id=":rlvt" value="" />
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <!-- ********************************************************************************************************************************** -->
    <!-- ********************************************************** PIERRE SCOPE ********************************************************** --> 
    <!-- ********************************************************************************************************************************** -->
       
	<!-- ******** CATEGORIES SCOPE ******** -->
    
    <query id="qryl4accountn1">
        <query.body value="
        SELECT *
        FROM accounts
        WHERE accid = :accid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4accountn2">
        <query.body value="
        SELECT *
        FROM email_history
        WHERE accid = :accid
        AND date_EndEna IS NULL;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4accountn3">
        <query.body value="
        SELECT accid
        FROM accounts
        WHERE accid = :accid
        AND date_EndEna IS NULL;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
<query id="qryl4accountn4">
        <query.body value="
        INSERT INTO accounts (pflid, accpseudo, accpseudo_datemod, accpseudo_datemod_tstamp, acclang, acclang_datemod, acclang_datemod_tstamp, acc_socialarea, acc_authpwd, authpwd_datemod, authpwd_datemod_tstamp, acc_capital, staycon, secu_coWithPseudoEna, secu_isThirdCritEna, accIsBan, todelete, datecrea, datecrea_tstamp, menu_pfl_notf, menu_pfl_notf_tstamp, menu_acc_notf, menu_acc_notf_tstamp, menu_secu_notf, menu_secu_notf_tstamp, secu_lock_h_start, secu_lock_h_end, secu_lock_d_start, secu_lock_d_start_tstamp, secu_lock_d_end, secu_lock_d_end_tstamp)
        VALUES (:pflid, :accpseudo, :accpseudo_datemod, :accpseudo_datemod_tstamp, :acclang, :acclang_datemod, :acclang_datemod_tstamp, :acc_socialarea, :hashedPw, :authpwd_datemod, :authpwd_datemod_tstamp, :acc_capital, :staycon, :secu_coWithPseudoEna, :secu_isThirdCritEna, :accIsBan, :todelete, :datecrea, :datecrea_tstamp, :menu_pfl_notf, :menu_pfl_notf_tstamp, :menu_acc_notf, :menu_acc_notf_tstamp, :menu_secu_notf, :menu_secu_notf_tstamp, :secu_lock_h_start, :secu_lock_h_end, :secu_lock_d_start, :secu_lock_d_start_tstamp, :secu_lock_d_end, :secu_lock_d_end_tstamp);"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="set" /><!-- get, set, update, delete -->
	<query.note value="Grosse requÃªte de crÃ©ation de compte. Note: l'acc_eid sera ajoutÃ© aprÃ¨s" />
        <query.params.in>
            <qparam id=":pflid" value="" />
            <qparam id=":accpseudo" value="" />
            <qparam id=":accpseudo_datemod" value="" />
            <qparam id=":accpseudo_datemod_tstamp" value="" />
            <qparam id=":acclang" value="" />
            <qparam id=":acclang_datemod" value="" />
            <qparam id=":acclang_datemod_tstamp" value="" />
            <qparam id=":acc_socialarea" value="" />
            <qparam id=":hashedPw" value="" />
            <qparam id=":authpwd_datemod" value="" />
            <qparam id=":authpwd_datemod_tstamp" value="" />
            <qparam id=":acc_capital" value="" />
            <qparam id=":staycon" value="" />
            <qparam id=":secu_coWithPseudoEna" value="" />
            <qparam id=":secu_isThirdCritEna" value="" />
            <qparam id=":accIsBan" value="" />
            <qparam id=":todelete" value="" />
            <qparam id=":datecrea" value="" />
            <qparam id=":datecrea_tstamp" value="" />
            <qparam id=":menu_pfl_notf" value="" />
            <qparam id=":menu_pfl_notf_tstamp" value="" />
            <qparam id=":menu_acc_notf" value="" />
            <qparam id=":menu_acc_notf_tstamp" value="" />
            <qparam id=":menu_secu_notf" value="" />
            <qparam id=":menu_secu_notf_tstamp" value="" />
            <qparam id=":secu_lock_h_start" value="" />
            <qparam id=":secu_lock_h_end" value="" />
            <qparam id=":secu_lock_d_start" value="" />
            <qparam id=":secu_lock_d_start_tstamp" value="" />
            <qparam id=":secu_lock_d_end" value="" />
            <qparam id=":secu_lock_d_end_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4accountn5">
        <query.body value="
        SELECT p.uborndate_tstamp, p.ugender, ct.ctr_code
        FROM profils p
        INNER JOIN partner_gn_cities_5000 gn
        ON p.ulvcity = gn.city_id
        INNER JOIN countries ct
        ON gn.country_code = ct.ctr_code
        WHERE p.pflid = :pflid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":pflid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>  
    
    <query id="qryl4accountn6">
        <query.body value="
        UPDATE accounts
        SET acc_eid = :acc_eid
        WHERE accid = :lastId;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":acc_eid" value="" />
            <qparam id=":lastId" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>  
    
    <query id="qryl4accountn7">
        <query.body value=
        "UPDATE accounts 
		SET acc_eid = :acc_eid, pflid = :pflid, accpseudo = :accpseudo, accpseudo_datemod = :accpseudo_datemod, accpseudo_datemod_tstamp = :accpseudo_datemod_tstamp, acclang = :acclang, acclang_datemod = :acclang_datemod, acclang_datemod_tstamp = :acclang_datemod_tstamp,
        acc_socialarea = :acc_socialarea, acc_authpwd = :acc_authpwd, authpwd_datemod = :authpwd_datemod, authpwd_datemod_tstamp = :authpwd_datemod_tstamp, acc_capital = :acc_capital, staycon = :staycon, secu_coWithPseudoEna = :secu_coWithPseudoEna, secu_isThirdCritEna = :secu_isThirdCritEna,
        accIsBan = :accIsBan, todelete = :todelete, datecrea = :datecrea, datecrea_tstamp = :datecrea_tstamp, menu_pfl_notf = :menu_pfl_notf, menu_pfl_notf_tstamp = :menu_pfl_notf_tstamp, menu_acc_notf = :menu_acc_notf, menu_acc_notf_tstamp = :menu_acc_notf_tstamp, menu_secu_notf = :menu_secu_notf,
        menu_secu_notf_tstamp = :menu_secu_notf_tstamp, secu_lock_h_start = :secu_lock_h_start, secu_lock_h_end = :secu_lock_h_end, secu_lock_d_start = :secu_lock_d_start, secu_lock_d_start_tstamp = :secu_lock_d_start_tstamp, secu_lock_d_end = :secu_lock_d_end, secu_lock_d_end_tstamp = :secu_lock_d_end_tstamp
        WHERE accid = :accid"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="Mise Ã  jour de accounts" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":acc_eid" value="" />
            <qparam id=":pflid" value="" />
            <qparam id=":accpseudo" value="" />
            <qparam id=":accpseudo_datemod" value="" />
            <qparam id=":accpseudo_datemod_tstamp" value="" />
            <qparam id=":acclang" value="" />
            <qparam id=":acclang_datemod" value="" />
            <qparam id=":acclang_datemod_tstamp" value="" />
            <qparam id=":acc_socialarea" value="" />
            <qparam id=":acc_authpwd" value="" />
            <qparam id=":authpwd_datemod" value="" />
            <qparam id=":authpwd_datemod_tstamp" value="" />
            <qparam id=":acc_capital" value="" />
            <qparam id=":staycon" value="" />
            <qparam id=":secu_coWithPseudoEna" value="" />
            <qparam id=":secu_isThirdCritEna" value="" />
            <qparam id=":accIsBan" value="" />
            <qparam id=":todelete" value="" />
            <qparam id=":datecrea" value="" />
            <qparam id=":datecrea_tstamp" value="" />
            <qparam id=":menu_pfl_notf" value="" />
            <qparam id=":menu_pfl_notf_tstamp" value="" />
            <qparam id=":menu_acc_notf" value="" />
            <qparam id=":menu_acc_notf_tstamp" value="" />
            <qparam id=":menu_secu_notf" value="" />
            <qparam id=":menu_secu_notf_tstamp" value="" />
            <qparam id=":secu_lock_h_start" value="" />
            <qparam id=":secu_lock_h_end" value="" />
            <qparam id=":secu_lock_d_start" value="" />
            <qparam id=":secu_lock_d_start_tstamp" value="" />
            <qparam id=":secu_lock_d_end" value="" />
            <qparam id=":secu_lock_d_end_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>  
    
    <query id="qryl4accountn8">
        <query.body value="
        UPDATE accounts
        SET staycon = :staycon
        WHERE accid = :accid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":staycon" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
    
    <query id="qryl4accountn9">
        <query.body value="
        UPDATE delacc_history 
        SET cancel_date = :now, cancel_date_tstamp = :now_tstamp 
        WHERE accid = :accid 
        AND cancel_date IS NULL ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":now" value="" />
            <qparam id=":now_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
    
    <query id="qryl4accountn10">
        <query.body value="
        UPDATE accounts 
        SET secu_lock_d_start = :null1, secu_lock_d_end = :null2, secu_lock_d_start_tstamp = :null3, secu_lock_d_end_tstamp = :null4  
        WHERE accid = :accid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":null1" value="" />
            <qparam id=":null2" value="" />
            <qparam id=":null3" value="" />
            <qparam id=":null4" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
    
    <query id="qryl4accountn11">
        <query.body value="
        UPDATE accounts 
        SET secu_lock_h_start = :null1, secu_lock_h_end = :null2 
        WHERE accid = :accid; "/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":null1" value="" />
            <qparam id=":null2" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
    
    <query id="qryl4accountn12">
        <query.body value="
        UPDATE abo_grp_histo 
        SET dateEnd = :dateend, dateEnd_tstamp = :dateend_tstamp  
        WHERE accid = :accid 
        AND gid = :gid 
        AND dateEnd IS NULL;" />
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
            <qparam id=":gid" value="" />
            <qparam id=":dateend" value="" />
            <qparam id=":dateend_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
    
    <query id="qryl4accountn13">
        <query.body value="
        UPDATE reinit_operation 
        SET cancel_date = :now, cancel_date_tstamp = :now_tstamp 
        WHERE reinit_key = :key; " />
       <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="update" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":key" value="" />
            <qparam id=":now" value="" />
            <qparam id=":now_tstamp" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query> 
       
    <query id="qryl4accountn14">
        <query.body value="
        SELECT accid, secu_lock_h_start, secu_lock_h_end, secu_lock_d_start, secu_lock_d_end 
        FROM accounts 
        WHERE accid = :accid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
       
    <query id="qryl4accountn15">
        <query.body value="
        SELECT accid 
        FROM accounts 
        WHERE accpseudo = :accpseudo;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accpseudo" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
       
    <query id="qryl4accountn16">
        <query.body value="
        SELECT resid 
        FROM reserved_pseudos  
        WHERE pseudo = :pseudo;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":pseudo" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
       
    <query id="qryl4accountn17">
        <query.body value="
        SELECT taccid, accid, dateexp, dateexp_tstamp 
        FROM tryaccounts 
        WHERE accid = :accid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
       
    <query id="qryl4accountn18">
        <query.body value="
        SELECT todelete 
        FROM accounts 
        WHERE accid = :accid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
       
    <query id="qryl4accountn19">
        <query.body value="
        SELECT accid 
        FROM accounts 
        WHERE acc_eid = :acc_eid ;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":acc_eid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
       
    <query id="qryl4accountn20">
        <query.body value="
        SELECT ctr_code, ctr_name  
        FROM countries 
        LIMIT :limit;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":limit" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
    
    <query id="qryl4accountn21">
        <query.body value="
        SELECT accounts.accid, acc_eid, accpseudo, ufullname, profilpictures.picid as acc_uppicid, pflpic_pathTo_min as acc_uppic, acccoverpics.picid as acc_coverpicid, acccoverpics.acp_pathTo_cover as acc_coverpic, ulvcity, asciiname, ctr_code, ctr_name, acclang, accounts.datecrea as acc_datecrea, accounts.datecrea_tstamp as acc_datecrea_tstamp, todelete
        FROM accounts, acccoverpics, acccoverpics_history, profils, pflpics_history, profilpictures, Partner_GN_Cities_5000, countries
        WHERE accounts.accid = acccoverpics_history.accid 
        AND acccoverpics_history.acp_id = acccoverpics.acp_id
        AND accounts.pflid = profils.pflid 
        AND profils.pflid = pflpics_history.pflid 
        AND pflpics_history.pflpicid = profilpictures.pflpicid
        AND profils.ulvcity = Partner_GN_Cities_5000.city_id
        AND Partner_GN_Cities_5000.country_code = countries.ctr_code
        AND acccoverpics_history.date_EndEna IS NULL
        AND accounts.accid = :accid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
        
    
    <!-- Quasiment identique Ã  21, mais lÃ  j'ai besoin de acc_gid et capital en plus -->
    <query id="qryl4accountn22">
        <query.body value="
        SELECT accounts.accid, abo_grp_histo.gid, acc_capital, acc_eid, accpseudo, ufullname, profilpictures.picid as acc_uppicid, pflpic_pathTo_min as acc_uppic, acccoverpics.picid as acc_coverpicid, acccoverpics.acp_pathTo_cover as acc_coverpic, ulvcity, asciiname, ctr_code, ctr_name, acclang, accounts.datecrea as acc_datecrea, accounts.datecrea_tstamp as acc_datecrea_tstamp, todelete
        FROM accounts, acccoverpics, acccoverpics_history, profils, pflpics_history, profilpictures, Partner_GN_Cities_5000, countries, abo_grp_histo
        WHERE accounts.accid = acccoverpics_history.accid 
        AND acccoverpics_history.acp_id = acccoverpics.acp_id
        AND accounts.pflid = profils.pflid 
        AND profils.pflid = pflpics_history.pflid 
        AND pflpics_history.pflpicid = profilpictures.pflpicid
        AND profils.ulvcity = Partner_GN_Cities_5000.city_id
        AND Partner_GN_Cities_5000.country_code = countries.ctr_code
        AND acccoverpics_history.date_EndEna IS NULL
        AND abo_grp_histo.accid = accounts.accid
        AND accounts.accid = :accid;"/>
        <query.dbname value="tqr_account_vb1_prod" />
       <query.type value="get" /><!-- get, set, update, delete -->
	<query.note value="" />
        <query.params.in>
            <qparam id=":accid" value="" />
        </query.params.in>
        <query.params.out>
        </query.params.out>
    </query>
</queries>    